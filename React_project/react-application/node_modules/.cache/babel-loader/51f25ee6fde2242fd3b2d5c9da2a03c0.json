{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\CompletedOrdersTable.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\nimport CreateOrderModal from '../ModalWindowsComponents/CreateOrderModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CompletedOrdersList extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n\n    if (data.orders !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n\n      if (data.orders !== undefined) {\n        for (let i = 0; i < data.orders.length; i++) {\n          var serviceDateInfo = String(data.orders[i].dateOfService).substring(0, 10) + ' ' + String(data.orders[i].dateOfService).substring(11, 16);\n          element = '';\n          element = /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: data.orders[i].orderId + data.orders[i].isCompleted // eslint-disable-next-line no-loop-func\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: serviceDateInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.orders[i].clientFullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.orders[i].clientPhoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.orders[i].procedureName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.orders[i].employeeFullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, data.orders[i].orderId + data.orders[i].isCompleted, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this);\n          elements = elements.concat(element);\n        }\n\n        if (data !== '') {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tableFunctionality\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: \"Completed orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RecordsPerPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SearchInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dataTable\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"tableStyle\",\n                children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: elements\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(PageButtons, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There is no Data in DB...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableFunctionality\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: () => {\n                this.props.setCreateModalState();\n              },\n              children: \"New order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataTable\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"tableStyle\",\n              children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: elements\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CreateOrderModal, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedOrdersList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/CompletedOrdersTable.js"],"names":["React","connect","RecordsPerPage","PageButtons","SearchInput","CreateOrderModal","CompletedOrdersList","PureComponent","render","data","props","pagedTablesData","orders","elements","element","header","undefined","i","length","serviceDateInfo","String","dateOfService","substring","orderId","isCompleted","clientFullName","clientPhoneNumber","procedureName","employeeFullName","concat","setCreateModalState","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\r\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\r\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\r\nimport CreateOrderModal from '../ModalWindowsComponents/CreateOrderModal';\r\n\r\nclass CompletedOrdersList extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    if (data.orders !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Procedure name</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      if (data.orders !== undefined) {\r\n        for (let i = 0; i < data.orders.length; i++) {\r\n          var serviceDateInfo =\r\n            String(data.orders[i].dateOfService).substring(0, 10) +\r\n            ' ' +\r\n            String(data.orders[i].dateOfService).substring(11, 16);\r\n\r\n          element = '';\r\n          element = (\r\n            <tr\r\n              key={data.orders[i].orderId + data.orders[i].isCompleted}\r\n              id={data.orders[i].orderId + data.orders[i].isCompleted}\r\n              // eslint-disable-next-line no-loop-func\r\n            >\r\n              <td>{serviceDateInfo}</td>\r\n              <td>{data.orders[i].clientFullName}</td>\r\n              <td>{data.orders[i].clientPhoneNumber}</td>\r\n              <td>{data.orders[i].procedureName}</td>\r\n              <td>{data.orders[i].employeeFullName}</td>\r\n            </tr>\r\n          );\r\n          elements = elements.concat(element);\r\n        }\r\n        if (data !== '') {\r\n          return (\r\n            <>\r\n              <div className=\"tableFunctionality\">\r\n                <p className=\"title\">Completed orders</p>\r\n                <RecordsPerPage />\r\n                <SearchInput />\r\n              </div>\r\n\r\n              <div className=\"dataTable\">\r\n                <table className=\"tableStyle\">\r\n                  {header}\r\n                  <tbody>{elements}</tbody>\r\n                  <PageButtons />\r\n                </table>\r\n              </div>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <>\r\n              <p>There is no Data in DB...</p>\r\n            </>\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <>\r\n            <div className=\"tableFunctionality\">\r\n              <p className=\"title\">Orders</p>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={() => {\r\n                  this.props.setCreateModalState();\r\n                }}\r\n              >\r\n                New order\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"dataTable\">\r\n              <table className=\"tableStyle\">\r\n                {header}\r\n                <tbody>{elements}</tbody>\r\n                <CreateOrderModal />\r\n              </table>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {};\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CompletedOrdersList);\r\n"]},"metadata":{},"sourceType":"module"}