{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar load_1 = require(\"./load\");\n\nvar createHTMLImageElement_1 = require(\"./createHTMLImageElement\");\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n *\n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n *\n */\n\n\nexports.loadImageProps = function (props, cb) {\n  return load_1.loadAnything(props, function (err, res, done) {\n    if (err) {\n      cb(err);\n    } else if (res) {\n      createHTMLImageElement_1.createHTMLImageElement(res.src, function (img) {\n        var ret = {\n          src: res.src,\n          alt: 'alt' in res ? res.alt : '',\n          width: img.width,\n          height: img.height\n        };\n\n        if (done) {\n          done();\n        }\n\n        ;\n        cb(null, ret);\n      });\n    }\n  });\n};\n\nexports.default = exports.loadImageProps;","map":{"version":3,"sources":["C:\\Users\\aries\\Desktop\\React project\\react-application\\node_modules\\react-image-file\\src\\loadImageProps.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAaA;;;;;;;;;;;AAWG;;;AACU,OAAA,CAAA,cAAA,GACX,UAAE,KAAF,EACE,EADF,EACoC;AAEpC,SAAE,MAAA,CAAA,YAAA,CACE,KADF,EAEE,UAAE,GAAF,EACE,GADF,EAEE,IAFF,EAEkB;AAEhB,QAAI,GAAJ,EACA;AAAE,MAAA,EAAE,CAAE,GAAF,CAAF;AACD,KAFD,MAGK,IAAI,GAAJ,EACL;AAAE,MAAA,wBAAA,CAAA,sBAAA,CAAwB,GAAG,CAAC,GAA5B,EAAiC,UAAE,GAAF,EAAK;AACpC,YAAM,GAAG,GACT;AAAE,UAAA,GAAG,EAAC,GAAG,CAAC,GAAV;AACE,UAAA,GAAG,EAAK,SAAS,GAAX,GAAqB,GAAY,CAAC,GAAlC,GAAwC,EADhD;AAEE,UAAA,KAAK,EAAC,GAAG,CAAC,KAFZ;AAGE,UAAA,MAAM,EAAC,GAAG,CAAC;AAHb,SADA;;AAMA,YAAI,IAAJ,EACA;AAAE,UAAA,IAAI;AACL;;AACH;AAAE,QAAA,EAAE,CAAE,IAAF,EAAQ,GAAR,CAAF;AACD,OAXD;AAYD;AACF,GAvBH,CAAF;AAyBD,CA7BY;;AA+Bb,OAAA,CAAA,OAAA,GAAe,OAAA,CAAA,cAAf","sourcesContent":["import {loadAnything, ImageContent} from './load'\nimport {createHTMLImageElement} from './createHTMLImageElement'\n\nexport interface ImageProps\n  { src:string\n  ; alt:string\n  ; width:number\n  ; height:number\n  }\n\nexport interface CreateImageFromReadableCallback\n  { (err?:Error|DOMError|null,props?:ImageProps):any\n  }\n\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n * \n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n * \n */\nexport const loadImageProps = \n  ( props: File | Blob | string\n  , cb:CreateImageFromReadableCallback\n  ) =>\n  ( loadAnything\n    ( props\n    , ( err: Error | DOMError | null\n      , res?: ImageContent\n      , done?: () => any\n      ) => \n      { if( err )\n        { cb( err )\n        }\n        else if( res )\n        { createHTMLImageElement( res.src, ( img ) => \n          { const ret = \n            { src:res.src\n            ,\talt:( ( 'alt' in res ) ? ( res as any ).alt : '' )\n            ,\twidth:img.width\n            ,\theight:img.height\n            }\n          ; if( done )\n            { done()\n            }\n          ; cb( null, ret )\n          })\n        }\n      }\n  )\n)\n\nexport default loadImageProps"]},"metadata":{},"sourceType":"script"}