{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\MediaFiles.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FetchSingleData, GetImage, SetActiveIdentifier } from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MediaFilesList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mediafile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var test = this.props.getImage(1);\n          },\n          children: \"GetImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: test,\n          alt: \"\\u041D\\u0418\\u041F\\u0410\\u041B\\u0423\\u0427\\u0418\\u041B\\u0410\\u0421\\u042C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n\n      var arr = [];\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        arr = arr.concat(this.props.responseDataList[i]);\n      }\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.responseDataList[i],\n            alt: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getImage: id => dispatch(GetImage(id)),\n    setActiveId: id => dispatch(SetActiveIdentifier(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaFilesList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/MediaFiles.js"],"names":["React","connect","FetchSingleData","GetImage","SetActiveIdentifier","MediaFilesList","PureComponent","render","props","responseDataList","elements","element","header","test","getImage","arr","i","length","concat","mapStateToProps","state","singleResponseData","activeId","activeMenu","mapDispatchToProps","dispatch","id","setActiveId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  FetchSingleData,\r\n  GetImage,\r\n  SetActiveIdentifier,\r\n} from '../../Redux/Actions/actions.js';\r\n\r\nclass MediaFilesList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <>\r\n          <thead>\r\n            <tr>\r\n              <th>Mediafile</th>\r\n            </tr>\r\n          </thead>\r\n          <button\r\n            onClick={() => {\r\n              var test = this.props.getImage(1);\r\n            }}\r\n          >\r\n            GetImage\r\n          </button>\r\n          <img src={test} alt=\"НИПАЛУЧИЛАСЬ\" />\r\n        </>\r\n      );\r\n\r\n      var arr = [];\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        arr = arr.concat(this.props.responseDataList[i]);\r\n      }\r\n\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <tr className=\"dataTable\">\r\n            <img src={this.props.responseDataList[i]} alt=\"test\" />\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getImage: (id) => dispatch(GetImage(id)),\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaFilesList);\r\n"]},"metadata":{},"sourceType":"module"}