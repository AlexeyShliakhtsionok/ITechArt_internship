{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\project\\\\React_project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\EmployeeMenu\\\\ProfileMenu.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../Redux/Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProfileMenu extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var singleData = this.props.singleResponseData;\n    var hireDate = String(singleData.hireDate);\n    var firstName = singleData.firstName;\n    var lastName = singleData.lastName;\n    var phone = singleData.phoneNumber;\n    var email = singleData.email;\n    var qualification = singleData.qualification;\n    var procedureType = singleData.procedureType;\n    var role = singleData.role;\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: singleData.employeeId,\n      firstName: singleData.firstName,\n      lastName: singleData.lastName,\n      phoneNumber: singleData.phoneNumber,\n      password: singleData.password,\n      email: singleData.email,\n      procedureType: singleData.procedureType,\n      qualification: singleData.qualification,\n      role: singleData.role,\n      hireDate: singleData.hireDate\n    };\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileText\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"First name: \", firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last name: \", lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hired: \", hireDate.substr(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ProcedureType: \", procedureType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qualification: \", qualification]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), actionButtons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            id: \"submForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"profilePhotoInput\",\n              id: \"profilePhoto\",\n              name: \"profilePhoto\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              type: \"submit\",\n              onClick: () => {\n                this.props.onEdit();\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n                const formData = new FormData();\n                var profilePhoto = document.getElementById('profilePhoto');\n                formData.append('profilePhoto', profilePhoto.files[0]);\n                this.props.uploadPhoto(singleData.employeeId, formData);\n                this.props.getEmployee(singleData.employeeId, 'staffPage');\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: firstName,\n              onChange: e => {\n                employeeToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: lastName,\n              onChange: e => {\n                employeeToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              placeholder: phone,\n              onChange: e => {\n                employeeToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: email,\n              onChange: e => {\n                employeeToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (singleData !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilePhoto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.employeeProfilePhoto,\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), employeeInfoArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Something went wrong...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    employeeProfilePhoto: state.employeeProfilePhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onEdit: () => dispatch(actions.SetEditModalState()),\n    onUpdate: (activeMenu, data) => dispatch(actions.UpdateData(activeMenu, data)),\n    uploadPhoto: (id, profilePhoto) => dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\n    getEmployee: (id, activeMenu) => dispatch(actions.FetchActiveRecordData(id, activeMenu))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileMenu);","map":{"version":3,"sources":["C:/Users/aries/Desktop/project/React_project/react-application/src/Components/DataTablesComponents/EmployeeMenu/ProfileMenu.js"],"names":["React","connect","actions","ProfileMenu","PureComponent","onSubmit","e","preventDefault","render","singleData","props","singleResponseData","hireDate","String","firstName","lastName","phone","phoneNumber","email","qualification","procedureType","role","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","password","isEditing","onEdit","substr","onUpdate","activeMenu","formData","FormData","profilePhoto","document","getElementById","append","files","uploadPhoto","getEmployee","target","value","employeeProfilePhoto","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetEditModalState","data","UpdateData","id","UploadProfilePhoto","FetchActiveRecordData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,aAAhC,CAA8C;AAAA;AAAA;;AAAA,SAC5CC,QAD4C,GAChCC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACD,KAH2C;AAAA;;AAK5CC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,kBAA5B;AACA,QAAIC,QAAQ,GAAGC,MAAM,CAACJ,UAAU,CAACG,QAAZ,CAArB;AACA,QAAIE,SAAS,GAAGL,UAAU,CAACK,SAA3B;AACA,QAAIC,QAAQ,GAAGN,UAAU,CAACM,QAA1B;AACA,QAAIC,KAAK,GAAGP,UAAU,CAACQ,WAAvB;AACA,QAAIC,KAAK,GAAGT,UAAU,CAACS,KAAvB;AACA,QAAIC,aAAa,GAAGV,UAAU,CAACU,aAA/B;AACA,QAAIC,aAAa,GAAGX,UAAU,CAACW,aAA/B;AACA,QAAIC,IAAI,GAAGZ,UAAU,CAACY,IAAtB;AAEA,QAAIC,gBAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,gBAAgB,GAAG;AACrBC,MAAAA,UAAU,EAAEhB,UAAU,CAACgB,UADF;AAErBX,MAAAA,SAAS,EAAEL,UAAU,CAACK,SAFD;AAGrBC,MAAAA,QAAQ,EAAEN,UAAU,CAACM,QAHA;AAIrBE,MAAAA,WAAW,EAAER,UAAU,CAACQ,WAJH;AAKrBS,MAAAA,QAAQ,EAAEjB,UAAU,CAACiB,QALA;AAMrBR,MAAAA,KAAK,EAAET,UAAU,CAACS,KANG;AAOrBE,MAAAA,aAAa,EAAEX,UAAU,CAACW,aAPL;AAQrBD,MAAAA,aAAa,EAAEV,UAAU,CAACU,aARL;AASrBE,MAAAA,IAAI,EAAEZ,UAAU,CAACY,IATI;AAUrBT,MAAAA,QAAQ,EAAEH,UAAU,CAACG;AAVA,KAAvB;;AAaA,QAAI,CAAC,KAAKF,KAAL,CAAWiB,SAAhB,EAA2B;AACzBJ,MAAAA,aAAa,gBACX;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWkB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAQAN,MAAAA,gBAAgB,gBACd;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,yCAAgBR,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,wCAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eASE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,oCAAWH,QAAQ,CAACiB,MAAT,CAAgB,CAAhB,EAAmB,EAAnB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAaE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,oCAAWb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF,eAiBE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,oCAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAqBE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,4CAAmBE,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArBF,eAyBE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,4CAAmBD,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBF,eA6BE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAA,mCAAUE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA7BF,EAgCGE,aAhCH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAsCD,KA/CD,MA+CO;AACLA,MAAAA,aAAa,gBACX;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAA,iCACE;AAAM,YAAA,QAAQ,EAAE,KAAKlB,QAArB;AAA+B,YAAA,EAAE,EAAC,UAAlC;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,mBADZ;AAEE,cAAA,EAAE,EAAC,cAFL;AAGE,cAAA,IAAI,EAAC,cAHP;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKK,KAAL,CAAWkB,MAAX;AACA,qBAAKlB,KAAL,CAAWoB,QAAX,CAAoB,KAAKpB,KAAL,CAAWqB,UAA/B,EAA2CP,gBAA3C;AACA,sBAAMQ,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,oBAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB;AACAJ,gBAAAA,QAAQ,CAACK,MAAT,CAAgB,cAAhB,EAAgCH,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAhC;AACA,qBAAK5B,KAAL,CAAW6B,WAAX,CAAuB9B,UAAU,CAACgB,UAAlC,EAA8CO,QAA9C;AACA,qBAAKtB,KAAL,CAAW8B,WAAX,CAAuB/B,UAAU,CAACgB,UAAlC,EAA8C,WAA9C;AACD,eAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA8BAH,MAAAA,gBAAgB,gBACd;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAER,SAFf;AAGE,cAAA,QAAQ,EAAGR,CAAD,IAAO;AACfkB,gBAAAA,gBAAgB,CAACV,SAAjB,GAA6BR,CAAC,CAACmC,MAAF,CAASC,KAAtC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAE3B,QAFf;AAGE,cAAA,QAAQ,EAAGT,CAAD,IAAO;AACfkB,gBAAAA,gBAAgB,CAACT,QAAjB,GAA4BT,CAAC,CAACmC,MAAF,CAASC,KAArC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA+BE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,WAAW,EAAE1B,KAFf;AAGE,cAAA,QAAQ,EAAGV,CAAD,IAAO;AACfkB,gBAAAA,gBAAgB,CAACP,WAAjB,GAA+BX,CAAC,CAACmC,MAAF,CAASC,KAAxC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,eA8CE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,WAAW,EAAExB,KAFf;AAGE,cAAA,QAAQ,EAAGZ,CAAD,IAAO;AACfkB,gBAAAA,gBAAgB,CAACN,KAAjB,GAAyBZ,CAAC,CAACmC,MAAF,CAASC,KAAlC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CF,EA4DGnB,aA5DH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAgED;;AAED,QAAId,UAAU,KAAK,EAAnB,EAAuB;AACrB,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAE,KAAKC,KAAL,CAAWiC,oBAArB;AAA2C,cAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGrB,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAUD,KAXD,MAWO;AACL,0BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD;AACF;;AAjM2C;;AAoM9C,SAASsB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLlC,IAAAA,kBAAkB,EAAEkC,KAAK,CAAClC,kBADrB;AAELgB,IAAAA,SAAS,EAAEkB,KAAK,CAAClB,SAFZ;AAGLmB,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAHX;AAILf,IAAAA,UAAU,EAAEc,KAAK,CAACd,UAJb;AAKLY,IAAAA,oBAAoB,EAAEE,KAAK,CAACF;AALvB,GAAP;AAOD;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLpB,IAAAA,MAAM,EAAE,MAAMoB,QAAQ,CAAC9C,OAAO,CAAC+C,iBAAR,EAAD,CADjB;AAELnB,IAAAA,QAAQ,EAAE,CAACC,UAAD,EAAamB,IAAb,KACRF,QAAQ,CAAC9C,OAAO,CAACiD,UAAR,CAAmBpB,UAAnB,EAA+BmB,IAA/B,CAAD,CAHL;AAILX,IAAAA,WAAW,EAAE,CAACa,EAAD,EAAKlB,YAAL,KACXc,QAAQ,CAAC9C,OAAO,CAACmD,kBAAR,CAA2BD,EAA3B,EAA+BlB,YAA/B,CAAD,CALL;AAMLM,IAAAA,WAAW,EAAE,CAACY,EAAD,EAAKrB,UAAL,KACXiB,QAAQ,CAAC9C,OAAO,CAACoD,qBAAR,CAA8BF,EAA9B,EAAkCrB,UAAlC,CAAD;AAPL,GAAP;AASD;;AAED,eAAe9B,OAAO,CAAC2C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5C,WAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../Redux/Actions/actions';\r\n\r\nclass ProfileMenu extends React.PureComponent {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    var singleData = this.props.singleResponseData;\r\n    var hireDate = String(singleData.hireDate);\r\n    var firstName = singleData.firstName;\r\n    var lastName = singleData.lastName;\r\n    var phone = singleData.phoneNumber;\r\n    var email = singleData.email;\r\n    var qualification = singleData.qualification;\r\n    var procedureType = singleData.procedureType;\r\n    var role = singleData.role;\r\n\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: singleData.employeeId,\r\n      firstName: singleData.firstName,\r\n      lastName: singleData.lastName,\r\n      phoneNumber: singleData.phoneNumber,\r\n      password: singleData.password,\r\n      email: singleData.email,\r\n      procedureType: singleData.procedureType,\r\n      qualification: singleData.qualification,\r\n      role: singleData.role,\r\n      hireDate: singleData.hireDate,\r\n    };\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <>\r\n          <div className=\"profileText\">\r\n            <div className=\"profileTextItem\">\r\n              <p>First name: {firstName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Last name: {lastName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Hired: {hireDate.substr(0, 10)}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Email: {email}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>ProcedureType: {procedureType}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Qualification: {qualification}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Role: {role}</p>\r\n            </div>\r\n            {actionButtons}\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <form onSubmit={this.onSubmit} id=\"submForm\">\r\n              <input\r\n                className=\"profilePhotoInput\"\r\n                id=\"profilePhoto\"\r\n                name=\"profilePhoto\"\r\n                type=\"file\"\r\n              />\r\n              <button\r\n                className=\"modalButton\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  this.props.onEdit();\r\n                  this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n                  const formData = new FormData();\r\n                  var profilePhoto = document.getElementById('profilePhoto');\r\n                  formData.append('profilePhoto', profilePhoto.files[0]);\r\n                  this.props.uploadPhoto(singleData.employeeId, formData);\r\n                  this.props.getEmployee(singleData.employeeId, 'staffPage');\r\n                }}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={firstName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={lastName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                placeholder={phone}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder={email}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          {actionButtons}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (singleData !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"profileBody\">\r\n            <div className=\"profilePhoto\">\r\n              <img src={this.props.employeeProfilePhoto} alt=\"profile\" />\r\n            </div>\r\n            {employeeInfoArea}\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>Something went wrong...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    employeeProfilePhoto: state.employeeProfilePhoto,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onEdit: () => dispatch(actions.SetEditModalState()),\r\n    onUpdate: (activeMenu, data) =>\r\n      dispatch(actions.UpdateData(activeMenu, data)),\r\n    uploadPhoto: (id, profilePhoto) =>\r\n      dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\r\n    getEmployee: (id, activeMenu) =>\r\n      dispatch(actions.FetchActiveRecordData(id, activeMenu)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileMenu);\r\n"]},"metadata":{},"sourceType":"module"}