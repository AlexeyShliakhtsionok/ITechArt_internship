{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Clients.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateClientModal from '../ModalWindowsComponents/CreateClientModal.js';\nimport UpdateClientModal from '../ModalWindowsComponents/UpdateClientModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ClientsList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: this.props.responseDataList[i].clientId,\n          onClick: async () => {\n            await this.props.setActiveId(this.props.responseDataList[i].clientId);\n            await this.props.getClient(this.props.responseDataList[i].clientId, this.props.activeMenu);\n            await this.props.setUpdateModalState();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList[i].firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList[i].lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList[i].phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList[i].email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, this.props.responseDataList[i].clientId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n          },\n          children: \"New client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateClientModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UpdateClientModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    getClient: (id, activeMenu) => dispatch(actions.FetchSingleData(id, activeMenu))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientsList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Clients.js"],"names":["React","connect","actions","CreateClientModal","UpdateClientModal","ClientsList","PureComponent","render","props","responseDataList","elements","element","header","i","length","clientId","setActiveId","getClient","activeMenu","setUpdateModalState","firstName","lastName","phoneNumber","email","concat","setCreateModalState","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetUpdateModalState","SetCreateModalState","id","SetActiveIdentifier","FetchSingleData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateClientModal from '../ModalWindowsComponents/CreateClientModal.js';\r\nimport UpdateClientModal from '../ModalWindowsComponents/UpdateClientModal.js';\r\n\r\nclass ClientsList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Lastname</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={this.props.responseDataList[i].clientId}\r\n            id={this.props.responseDataList[i].clientId}\r\n            onClick={async () => {\r\n              await this.props.setActiveId(\r\n                this.props.responseDataList[i].clientId,\r\n              );\r\n              await this.props.getClient(\r\n                this.props.responseDataList[i].clientId,\r\n                this.props.activeMenu,\r\n              );\r\n              await this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            <td>{this.props.responseDataList[i].firstName}</td>\r\n            <td>{this.props.responseDataList[i].lastName}</td>\r\n            <td>{this.props.responseDataList[i].phoneNumber}</td>\r\n            <td>{this.props.responseDataList[i].email}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n            }}\r\n          >\r\n            New client\r\n          </button>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n            <CreateClientModal />\r\n            <UpdateClientModal />\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    getClient: (id, activeMenu) =>\r\n      dispatch(actions.FetchSingleData(id, activeMenu)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientsList);\r\n"]},"metadata":{},"sourceType":"module"}