{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateEmployeeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetUpdateModalState, SetEditState, DeleteData, UpdateData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport testImage from '../../temporaryFiles/example3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  render() {\n    var hireDate = this.props.singleResponseData.hireDate;\n    var firstName = this.props.singleResponseData.firstName;\n    var lastName = this.props.singleResponseData.lastName;\n    var phone = this.props.singleResponseData.phoneNumber;\n    var email = this.props.singleResponseData.email;\n    var qualification;\n    var procedureType = '';\n    this.props.responseDataList.qualification.forEach(element => {\n      if (element.value === this.props.singleResponseData.qualification) qualification = element.name;\n    });\n    var procedureType;\n    var role;\n    this.props.responseDataList.roles.forEach(element => {\n      if (element.value === this.props.singleResponseData.role) role = element.name;\n    });\n\n    if (this.props.singleResponseData !== '' && this.props.activeMenu === 'employeesPage') {\n      procedureType = this.props.singleResponseData.procedureType.procedureTypeName;\n    }\n\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: this.props.activeId,\n      firstName: this.props.singleResponseData.firstName,\n      lastName: this.props.singleResponseData.lastName,\n      phoneNumber: this.props.singleResponseData.phoneNumber,\n      password: this.props.singleResponseData.password,\n      email: this.props.singleResponseData.email,\n      procedureType: this.props.singleResponseData.procedureType,\n      qualification: this.props.singleResponseData.qualification,\n      role: this.props.singleResponseData.role,\n      hireDate: this.props.singleResponseData.hireDate,\n      profile: this.props.singleResponseData.profile,\n      profileId: this.props.singleResponseData.profileId,\n      orders: null\n    };\n    var roles = [];\n    this.props.responseDataList.roles.forEach(element => {\n      roles.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    roles.forEach(element => {\n      if (element.value === qualification) qualification = element.value;\n    });\n    var procedureTypesSL = [];\n    this.props.responseDataList.procedureTypesSelectList.forEach(element => {\n      procedureTypesSL.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var qualifications = [];\n    this.props.responseDataList.qualification.forEach(element => {\n      qualifications.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    var orders = [];\n    this.props.responseDataList.orders.forEach(order => {\n      if (order.employee.employeeId === this.props.singleResponseData.employeeId) orders.push(order);\n    }); // Employee orders table\n\n    if (orders !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < orders.length; i++) {\n        var date = orders[i].dateOfService.substr(0, 10);\n        var time = orders[i].dateOfService.substr(11, 5);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: orders[i].orderId,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date + ' ' + time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].procedure.procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].procedure.procedurePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].employee.firstName + ' ' + orders[i].employee.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    } // End of employee orders table\n\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileText\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"First name: \", firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last name: \", lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hired: \", hireDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ProcedureType: \", procedureType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qualification: \", qualification]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"profilePhotoInput\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: firstName,\n              onChange: e => {\n                employeeToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: lastName,\n              onChange: e => {\n                employeeToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hired:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: hireDate,\n              onChange: e => {\n                employeeToUpdate.hireDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              defaultValue: phone,\n              onChange: e => {\n                employeeToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              defaultValue: email,\n              onChange: e => {\n                employeeToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                employeeToUpdate.role = data.value;\n              },\n              options: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ProcedureType:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: procedureTypesSL,\n              onChange: data => {\n                this.props.responseDataList.procedureTypes.forEach(element => {\n                  if (element.procedureTypeName === data.label) {\n                    employeeToUpdate.procedureType = element;\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Qualification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: qualifications,\n              onChange: data => {\n                employeeToUpdate.qualification = data.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilePhoto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: testImage,\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), employeeInfoArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: (id, menu) => {\n      dispatch(DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateEmployeeModal.js"],"names":["React","connect","Modal","SetUpdateModalState","SetEditState","DeleteData","UpdateData","Select","testImage","UpdateEmployeeModal","PureComponent","render","hireDate","props","singleResponseData","firstName","lastName","phone","phoneNumber","email","qualification","procedureType","responseDataList","forEach","element","value","name","role","roles","activeMenu","procedureTypeName","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","activeId","password","profile","profileId","orders","push","label","procedureTypesSL","procedureTypesSelectList","text","qualifications","order","employee","elements","header","i","length","date","dateOfService","substr","time","orderId","client","procedure","procedureName","procedurePrice","concat","isEditing","onEdit","onDelete","setUpdateModalState","onUpdate","e","target","data","procedureTypes","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","id","menu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetUpdateModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n  UpdateData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\nimport testImage from '../../temporaryFiles/example3.jpg';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  render() {\r\n    var hireDate = this.props.singleResponseData.hireDate;\r\n    var firstName = this.props.singleResponseData.firstName;\r\n    var lastName = this.props.singleResponseData.lastName;\r\n    var phone = this.props.singleResponseData.phoneNumber;\r\n    var email = this.props.singleResponseData.email;\r\n    var qualification;\r\n    var procedureType = '';\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.qualification)\r\n        qualification = element.name;\r\n    });\r\n    var procedureType;\r\n    var role;\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.role)\r\n        role = element.name;\r\n    });\r\n\r\n    if (\r\n      this.props.singleResponseData !== '' &&\r\n      this.props.activeMenu === 'employeesPage'\r\n    ) {\r\n      procedureType =\r\n        this.props.singleResponseData.procedureType.procedureTypeName;\r\n    }\r\n\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: this.props.activeId,\r\n      firstName: this.props.singleResponseData.firstName,\r\n      lastName: this.props.singleResponseData.lastName,\r\n      phoneNumber: this.props.singleResponseData.phoneNumber,\r\n      password: this.props.singleResponseData.password,\r\n      email: this.props.singleResponseData.email,\r\n      procedureType: this.props.singleResponseData.procedureType,\r\n      qualification: this.props.singleResponseData.qualification,\r\n      role: this.props.singleResponseData.role,\r\n      hireDate: this.props.singleResponseData.hireDate,\r\n      profile: this.props.singleResponseData.profile,\r\n      profileId: this.props.singleResponseData.profileId,\r\n      orders: null,\r\n    };\r\n\r\n    var roles = [];\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      roles.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    roles.forEach((element) => {\r\n      if (element.value === qualification) qualification = element.value;\r\n    });\r\n\r\n    var procedureTypesSL = [];\r\n    this.props.responseDataList.procedureTypesSelectList.forEach((element) => {\r\n      procedureTypesSL.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    var qualifications = [];\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      qualifications.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    var orders = [];\r\n    this.props.responseDataList.orders.forEach((order) => {\r\n      if (\r\n        order.employee.employeeId === this.props.singleResponseData.employeeId\r\n      )\r\n        orders.push(order);\r\n    });\r\n    // Employee orders table\r\n\r\n    if (orders !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < orders.length; i++) {\r\n        var date = orders[i].dateOfService.substr(0, 10);\r\n        var time = orders[i].dateOfService.substr(11, 5);\r\n        element = '';\r\n        element = (\r\n          <tr key={orders[i].orderId} id={orders[i].orderId}>\r\n            <td>{date + ' ' + time}</td>\r\n            <td>{orders[i].client.firstName}</td>\r\n            <td>{orders[i].client.phoneNumber}</td>\r\n            <td>{orders[i].client.email}</td>\r\n            <td>{orders[i].procedure.procedureName}</td>\r\n            <td>{orders[i].procedure.procedurePrice}</td>\r\n            <td>\r\n              {orders[i].employee.firstName + ' ' + orders[i].employee.lastName}\r\n            </td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    // End of employee orders table\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <>\r\n          <div className=\"profileText\">\r\n            <div className=\"profileTextItem\">\r\n              <p>First name: {firstName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Last name: {lastName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Hired: {hireDate}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Email: {email}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>ProcedureType: {procedureType}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Qualification: {qualification}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Role: {role}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <input className=\"profilePhotoInput\" type=\"file\" />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={firstName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={lastName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Hired:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={hireDate}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.hireDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                defaultValue={phone}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                defaultValue={email}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Role:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  employeeToUpdate.role = data.value;\r\n                }}\r\n                options={roles}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>ProcedureType:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={procedureTypesSL}\r\n                onChange={(data) => {\r\n                  this.props.responseDataList.procedureTypes.forEach(\r\n                    (element) => {\r\n                      if (element.procedureTypeName === data.label) {\r\n                        employeeToUpdate.procedureType = element;\r\n                      }\r\n                    },\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Qualification:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={qualifications}\r\n                onChange={(data) => {\r\n                  employeeToUpdate.qualification = data.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">\r\n            <div className=\"profilePhoto\">\r\n              <img src={testImage} alt=\"profile\" />\r\n            </div>\r\n            {employeeInfoArea}\r\n          </div>\r\n          {actionButtons}\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}