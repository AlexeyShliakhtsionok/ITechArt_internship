{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\EmployeesNew.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EmployeeList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n      var profileImg = '';\n\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\n        if (this.props.responseDataList.employees[i].mediaFiles.length > 0 && this.props.responseDataList.employees[i].mediaFiles[0].isProfilePhoto === true) {\n          profileImg = `data:image/gif;base64,${this.props.responseDataList.employees[i].mediaFiles[0].fileData}`;\n        }\n\n        element = [];\n        element = /*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"profileCardBody\",\n          id: this.props.responseDataList.employees[i].employeeId,\n          onClick: () => {\n            this.props.setActiveId(this.props.responseDataList.employees[i].employeeId);\n            this.props.getEmployee(this.props.responseDataList.employees[i].employeeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n            this.props.getProfilePhotoByEmployeeId(this.props.responseDataList.employees[i].employeeId);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileCardInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.props.responseDataList.employees[i].firstName + ' ' + this.props.responseDataList.employees[i].lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profilePhoto\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: profileImg,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, this.props.responseDataList.employees[i].employeeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n        elements.push(element);\n      }\n    }\n\n    console.log(elements);\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n          },\n          children: \"New employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"employeePage\",\n          children: [elements.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(CreateEmployeeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UpdateEmployeeModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    getEmployee: (id, activeMenu) => dispatch(actions.FetchSingleData(id, activeMenu)),\n    getProfilePhotoByEmployeeId: id => dispatch(actions.GetProfilePhotoByEmployeeId(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/EmployeesNew.js"],"names":["React","connect","actions","CreateEmployeeModal","UpdateEmployeeModal","EmployeeList","PureComponent","render","props","responseDataList","elements","element","profileImg","i","employees","length","mediaFiles","isProfilePhoto","fileData","employeeId","setActiveId","getEmployee","activeMenu","setUpdateModalState","getProfilePhotoByEmployeeId","firstName","lastName","push","console","log","setCreateModalState","map","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetUpdateModalState","SetCreateModalState","id","SetActiveIdentifier","FetchSingleData","GetProfilePhotoByEmployeeId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\r\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\r\n\r\nclass EmployeeList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var profileImg = '';\r\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\r\n        if (\r\n          this.props.responseDataList.employees[i].mediaFiles.length > 0 &&\r\n          this.props.responseDataList.employees[i].mediaFiles[0]\r\n            .isProfilePhoto === true\r\n        ) {\r\n          profileImg = `data:image/gif;base64,${this.props.responseDataList.employees[i].mediaFiles[0].fileData}`;\r\n        }\r\n        element = [];\r\n        element = (\r\n          <dir\r\n            className=\"profileCardBody\"\r\n            key={this.props.responseDataList.employees[i].employeeId}\r\n            id={this.props.responseDataList.employees[i].employeeId}\r\n            onClick={() => {\r\n              this.props.setActiveId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n              this.props.getEmployee(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n                this.props.activeMenu,\r\n              );\r\n              this.props.setUpdateModalState();\r\n              this.props.getProfilePhotoByEmployeeId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"profileCardInfo\">\r\n              <p>\r\n                {this.props.responseDataList.employees[i].firstName +\r\n                  ' ' +\r\n                  this.props.responseDataList.employees[i].lastName}\r\n              </p>\r\n              <div className=\"profilePhoto\">\r\n                <img src={profileImg} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          </dir>\r\n        );\r\n        elements.push(element);\r\n      }\r\n    }\r\n\r\n    console.log(elements);\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <p className=\"title\">Employees</p>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n            }}\r\n          >\r\n            New employee\r\n          </button>\r\n          <dir className=\"employeePage\">\r\n            {elements.map((element) => (\r\n              <div>{element}</div>\r\n            ))}\r\n            <CreateEmployeeModal />\r\n            <UpdateEmployeeModal />\r\n          </dir>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    getEmployee: (id, activeMenu) =>\r\n      dispatch(actions.FetchSingleData(id, activeMenu)),\r\n    getProfilePhotoByEmployeeId: (id) =>\r\n      dispatch(actions.GetProfilePhotoByEmployeeId(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\r\n"]},"metadata":{},"sourceType":"module"}