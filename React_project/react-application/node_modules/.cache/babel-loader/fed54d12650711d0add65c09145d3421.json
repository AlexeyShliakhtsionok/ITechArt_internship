{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\CompletedOrdersTable.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\nimport * as actions from '../../Redux/Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CompletedOrdersList extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n\n    if (data.orders.length !== 0) {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < data.orders.length; i++) {\n        var serviceDateInfo = String(data.orders[i].dateOfService).substring(0, 10) + ' ' + String(data.orders[i].dateOfService).substring(11, 16);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: data.orders[i].orderId + data.orders[i].isCompleted // eslint-disable-next-line no-loop-func\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: serviceDateInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].clientFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].clientPhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].employeeFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, data.orders[i].orderId + data.orders[i].isCompleted, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableFunctionality\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: () => {\n                this.props.getAllActiveOrders('ordersPage');\n              },\n              children: \"Active orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: () => {\n                this.props.getAllStagedOrders('stagedOrdersPage');\n              },\n              children: \"Staged orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: () => {\n                this.props.getAllDonedOrders('donedOrdersPage');\n              },\n              children: \"Completed orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RecordsPerPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PageButtons, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableFunctionality\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.setCreateModalState();\n            },\n            children: \"New order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.getAllActiveOrders('ordersPage');\n            },\n            children: \"Active orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.getAllStagedOrders('stagedOrdersPage');\n            },\n            children: \"Staged orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.getAllDonedOrders('donedOrdersPage');\n            },\n            children: \"Completed orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There is no completed orders yet...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getAllDonedOrders: id => dispatch(actions.FetchAllDonedOrders(id)),\n    getAllStagedOrders: id => dispatch(actions.FetchAllStagedOrders(id)),\n    getAllActiveOrders: id => dispatch(actions.FeetchMainTableData(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedOrdersList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/CompletedOrdersTable.js"],"names":["React","connect","RecordsPerPage","PageButtons","SearchInput","actions","CompletedOrdersList","PureComponent","render","data","props","pagedTablesData","orders","length","elements","element","header","i","serviceDateInfo","String","dateOfService","substring","orderId","isCompleted","clientFullName","clientPhoneNumber","procedureName","employeeFullName","concat","getAllActiveOrders","getAllStagedOrders","getAllDonedOrders","setCreateModalState","mapStateToProps","state","mapDispatchToProps","dispatch","id","FetchAllDonedOrders","FetchAllStagedOrders","FeetchMainTableData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\r\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\r\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\r\nimport * as actions from '../../Redux/Actions/actions';\r\n\r\nclass CompletedOrdersList extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    if (data.orders.length !== 0) {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Procedure name</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < data.orders.length; i++) {\r\n        var serviceDateInfo =\r\n          String(data.orders[i].dateOfService).substring(0, 10) +\r\n          ' ' +\r\n          String(data.orders[i].dateOfService).substring(11, 16);\r\n\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={data.orders[i].orderId + data.orders[i].isCompleted}\r\n            id={data.orders[i].orderId + data.orders[i].isCompleted}\r\n            // eslint-disable-next-line no-loop-func\r\n          >\r\n            <td>{serviceDateInfo}</td>\r\n            <td>{data.orders[i].clientFullName}</td>\r\n            <td>{data.orders[i].clientPhoneNumber}</td>\r\n            <td>{data.orders[i].procedureName}</td>\r\n            <td>{data.orders[i].employeeFullName}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <div className=\"tableFunctionality\">\r\n            <p className=\"title\">Orders</p>\r\n            <div>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={() => {\r\n                  this.props.getAllActiveOrders('ordersPage');\r\n                }}\r\n              >\r\n                Active orders\r\n              </button>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={() => {\r\n                  this.props.getAllStagedOrders('stagedOrdersPage');\r\n                }}\r\n              >\r\n                Staged orders\r\n              </button>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={() => {\r\n                  this.props.getAllDonedOrders('donedOrdersPage');\r\n                }}\r\n              >\r\n                Completed orders\r\n              </button>\r\n            </div>\r\n\r\n            <RecordsPerPage />\r\n            <SearchInput />\r\n          </div>\r\n\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n              <PageButtons />\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"tableFunctionality\">\r\n            <p className=\"title\">Orders</p>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.setCreateModalState();\r\n              }}\r\n            >\r\n              New order\r\n            </button>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.getAllActiveOrders('ordersPage');\r\n              }}\r\n            >\r\n              Active orders\r\n            </button>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.getAllStagedOrders('stagedOrdersPage');\r\n              }}\r\n            >\r\n              Staged orders\r\n            </button>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.getAllDonedOrders('donedOrdersPage');\r\n              }}\r\n            >\r\n              Completed orders\r\n            </button>\r\n          </div>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              <p>There is no completed orders yet...</p>\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getAllDonedOrders: (id) => dispatch(actions.FetchAllDonedOrders(id)),\r\n    getAllStagedOrders: (id) => dispatch(actions.FetchAllStagedOrders(id)),\r\n    getAllActiveOrders: (id) => dispatch(actions.FeetchMainTableData(id)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CompletedOrdersList);\r\n"]},"metadata":{},"sourceType":"module"}