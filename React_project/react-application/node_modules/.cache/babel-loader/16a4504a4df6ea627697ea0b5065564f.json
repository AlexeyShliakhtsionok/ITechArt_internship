{"ast":null,"code":"import * as TYPES from './actionTypes';\nconst host = 'https://localhost:7275'; // Authorization of employees ==========================================\n\nexport function EmployeeAutorization(email, password) {\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post'\n    }).then(response => {\n      if (!response.ok) {\n        dispatch(EmployeeAuthorizationFailed());\n        dispatch(SetActiveMenu('promotionsPage'));\n        alert('Incorrect login or password. Try again...');\n        throw new Error(response.errorText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeAutorizationSuccess(data));\n    });\n  };\n}\n_c = EmployeeAutorization;\nexport function EmployeeAutorizationSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\n    payload: data\n  };\n}\n_c2 = EmployeeAutorizationSuccess;\nexport function EmployeeAuthorizationFailed() {\n  return {\n    type: TYPES.EMPLOYEE_AUTHORIZATION_FAILED\n  };\n}\n_c3 = EmployeeAuthorizationFailed;\nexport function EmployeeLogout() {\n  return {\n    type: TYPES.EMPLOYEE_LOGOUT\n  };\n} //==============================================\n//==============================================\n//Get paged data of current table\n\n_c4 = EmployeeLogout;\nexport function FeetchMainTableData(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let sortOrder = arguments.length > 3 ? arguments[3] : undefined;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetAllClients${options}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetAllMaterials${options}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetAllProcedures${options}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetAllOrders${options}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetAllFeedbacks${options}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\n      break;\n\n    case 'ourStaffPage':\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu, sortOrder));\n    });\n  };\n}\n_c5 = FeetchMainTableData;\nexport function FeetchAllProcedureTypes() {\n  var requestURL = `${host}/ProcedureType/GetAllProcedureTypes`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, 'procedureTypesPage'));\n    });\n  };\n} //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n_c6 = FeetchAllProcedureTypes;\nexport function FetchAllDoneddOrders(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let sortOrder = arguments.length > 3 ? arguments[3] : undefined;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c7 = FetchAllDoneddOrders;\nexport function FetchAllStagedOrders(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let sortOrder = arguments.length > 3 ? arguments[3] : undefined;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c8 = FetchAllStagedOrders;\nexport function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\n  var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c9 = FeetchAllMediafiles;\nexport function FeetchMainTableDataSuccess(data, activeMenu, sortOrder) {\n  return {\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\n    payload: data,\n    identifier: activeMenu,\n    sortBy: sortOrder\n  };\n} //========================================================\n//========================================================\n//Get the data of choosen record of the table by ID\n\n_c10 = FeetchMainTableDataSuccess;\nexport function FetchActiveRecordData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\n      break;\n\n    case 'serviceTypesPage':\n      requestURL = `${host}/ProcedureType/GetProcedureTypeById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c11 = FetchActiveRecordData;\nexport function FetchClientByEmail(email) {\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        dispatch(FetchActiveRecordDataSuccess('Not found'));\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c12 = FetchClientByEmail;\nexport function FetchActiveRecordDataSuccess(data) {\n  return {\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //Active identifier setting\n\n_c13 = FetchActiveRecordDataSuccess;\nexport function SetActiveIdentifier(id) {\n  return {\n    type: TYPES.ACTIVE_ID_SET,\n    payload: id\n  };\n} //========================================================\n//========================================================\n//Delete the data of choosen record of the table\n\n_c14 = SetActiveIdentifier;\nexport function DeleteServiceType(id) {\n  var requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c15 = DeleteServiceType;\nexport function DeleteFeedback(id) {\n  var requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData('feedbacksPage')), dispatch(CheckUnwachedFeedbacks()));\n  };\n}\n_c16 = DeleteFeedback;\nexport function DeleteData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\n      break;\n\n    case 'serviceTypesPage':\n      requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n    // case 'feedbacksPage':\n    //   requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\n    //   break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Update the data of choosen record of the table\n\n_c17 = DeleteData;\nexport function UpdateProcedureType(dataObject) {\n  var requestURL = `${host}/ProcedureType/UpdateProcedureType`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c18 = UpdateProcedureType;\nexport function UpdateFeedback(activeMenu, dataObject) {\n  var requestURL = `${host}/Feedback/UpdateFeedback`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => {\n      dispatch(FeetchMainTableData(activeMenu));\n      dispatch(CheckUnwachedFeedbacks());\n    });\n  };\n}\n_c19 = UpdateFeedback;\nexport function UpdateData(activeMenu, dataObject) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/UpdateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/UpdateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/UpdateService`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/UpdateOrder`;\n      break;\n    // case 'feedbacksPage':\n    //   requestURL = `${host}/Feedback/UpdateFeedback`;\n    //   break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/UpdateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => {\n      dispatch(FeetchMainTableData(activeMenu));\n    });\n  };\n}\n_c20 = UpdateData;\nexport function UpdateMaterialAmount(dataObject) {\n  var requestURL = `${host}/Material/UpdateMaterialAmount`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c21 = UpdateMaterialAmount;\nexport function UpdateOrderStatus(id) {\n  var requestURL = `${host}/Order/UpdateOrderStatus`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(id)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FetchAllDonedOrders('donedOrdersPage')));\n  };\n} //========================================================\n//========================================================\n//Add new data\n\n_c22 = UpdateOrderStatus;\nexport function CreateNewProcedureType(dataObject) {\n  var requestURL = `${host}/ProcedureType/CreateProcedureType`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c23 = CreateNewProcedureType;\nexport function CreateNewManufacturer(dataObject) {\n  var requestURL = `${host}/MaterialManufacturer/CreateMaterialManufacturer`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('materialsPage')));\n  };\n}\n_c24 = CreateNewManufacturer;\nexport function CreateFeedback(activeMenu, dataObject) {\n  var requestURL = `${host}/Feedback/CreateFeedback`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(GetAllApprovedFeedbacks(activeMenu)));\n  };\n}\n_c25 = CreateFeedback;\nexport function CreateClientFromMain(dataObject) {\n  var requestURL = `${host}/Client/CreateClient`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('ordersPage')));\n  };\n}\n_c26 = CreateClientFromMain;\nexport function AddData(activeMenu, dataObject) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/CreateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/CreateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/CreateProcedure`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/CreateOrder`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/CreateFeedback`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/CreateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        alert('Some of the optional fields are empty! Adding failed.');\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Modal windows states processing functions\n\n_c27 = AddData;\nexport function SetEditModalState() {\n  return {\n    type: TYPES.EDIT_STATE\n  };\n}\n_c28 = SetEditModalState;\nexport function SetUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE\n  };\n}\n_c29 = SetUpdateModalState;\nexport function SetCreateModalState() {\n  return {\n    type: TYPES.CREATE_MODAL_WINDOW_STATE\n  };\n}\n_c30 = SetCreateModalState;\nexport function SetLoginModalState() {\n  return {\n    type: TYPES.LOGIN_MODAL_WINDOW_STATE\n  };\n}\n_c31 = SetLoginModalState;\nexport function SetProcedureTypeCreateModalState() {\n  return {\n    type: TYPES.CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE\n  };\n}\n_c32 = SetProcedureTypeCreateModalState;\nexport function SetProcedureTypeUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE\n  };\n} //========================================================\n//========================================================\n// Order creation and updating functions\n// Feetcing of procedures by their types (for responsive select-list content change)\n\n_c33 = SetProcedureTypeUpdateModalState;\nexport function GetProceduresByType(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchProcedureSuccess(data));\n    });\n  };\n}\n_c34 = GetProceduresByType;\nexport function FeetchProcedureSuccess(data) {\n  return {\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of employees by procedures types (for responsive select-list content change)\n\n_c35 = FeetchProcedureSuccess;\nexport function GetEmployeesByProcedureType(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchEmployeesSuccess(data));\n    });\n  };\n}\n_c36 = GetEmployeesByProcedureType;\nexport function FeetchEmployeesSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of schedule with avaliable time intervals\n\n_c37 = FeetchEmployeesSuccess;\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\n  return dispatch => {\n    fetch(`${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchAvaliableTimesSuccess(data));\n    });\n  };\n}\n_c38 = GetAvaliableTimes;\nexport function FeetchAvaliableTimesSuccess(data) {\n  return {\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Setting of active day and procedure during making order\n\n_c39 = FeetchAvaliableTimesSuccess;\nexport function SetActiveDate(data) {\n  return {\n    type: TYPES.SET_ACTIVE_DATE,\n    payload: data\n  };\n}\n_c40 = SetActiveDate;\nexport function SetActiveTime(data) {\n  return {\n    type: TYPES.SET_ACTIVE_TIME,\n    payload: data\n  };\n}\n_c41 = SetActiveTime;\nexport function SetActiveProcedureType(id) {\n  return dispatch => {\n    fetch(`${host}/ProcedureType/GetProcedureTypeById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveProcedureTypeSuccess(data));\n    });\n  };\n}\n_c42 = SetActiveProcedureType;\nexport function SetActiveProcedureTypeSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE_TYPE,\n    payload: data\n  };\n}\n_c43 = SetActiveProcedureTypeSuccess;\nexport function SetActiveProcedure(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveProcedureSuccess(data));\n    });\n  };\n}\n_c44 = SetActiveProcedure;\nexport function SetActiveProcedureSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE,\n    payload: data\n  };\n}\n_c45 = SetActiveProcedureSuccess;\nexport function SetActiveClient(id) {\n  return dispatch => {\n    fetch(`${host}/Client/GetClientById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveClientSuccess(data));\n    });\n  };\n}\n_c46 = SetActiveClient;\nexport function SetActiveClientSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_CLIENT,\n    payload: data\n  };\n}\n_c47 = SetActiveClientSuccess;\nexport function SetActiveEmployee(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetEmployeeViewModelById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveEmployeeSuccess(data));\n    });\n  };\n}\n_c48 = SetActiveEmployee;\nexport function SetActiveEmployeeSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\n    payload: data\n  };\n} // Set booking status\n\n_c49 = SetActiveEmployeeSuccess;\nexport function SetBookingStatus() {\n  return {\n    type: TYPES.SET_BOOKING_STATUS\n  };\n} // Set client registration status\n\n_c50 = SetBookingStatus;\nexport function RedirectToOrdering() {\n  return {\n    type: TYPES.REDIRECT_TO_ORDERING\n  };\n} // Set order creation status (from main by client)\n\n_c51 = RedirectToOrdering;\nexport function SetOrderStatus() {\n  return {\n    type: TYPES.SET_ORDER_CREATION_STATUS\n  };\n}\n_c52 = SetOrderStatus;\nexport function ResetActiveSingleData() {\n  return {\n    type: TYPES.RESET_SINGLE_DATA\n  };\n} // Reset react-select single value (resetting of single select field value)\n\n_c53 = ResetActiveSingleData;\nexport function ResetSelectedValue() {\n  return {\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE\n  };\n} // Reset react-select values (resetting of all values of selects)\n\n_c54 = ResetSelectedValue;\nexport function ResetSelectedValues() {\n  return {\n    type: TYPES.RESET_SELECTED_VALUES\n  };\n} // Set react-select values (set each selected value to the state)\n\n_c55 = ResetSelectedValues;\nexport function SetSelectedValue(inputName) {\n  return {\n    type: TYPES.SET_SELECTED_VALUE,\n    payload: inputName\n  };\n} // ================Add order from main menu\n\n_c56 = SetSelectedValue;\nexport function AddOrder(dataObject) {\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        alert('Some of the optional fields are empty! Adding failed.');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} //========================================================\n//========================================================\n\n_c57 = AddOrder;\nexport function SetActiveMenu(activeMenu) {\n  return {\n    type: TYPES.SET_ACTIVE_MENU,\n    payload: activeMenu\n  };\n}\n_c58 = SetActiveMenu;\nexport function ResetActiveMenu() {\n  return {\n    type: TYPES.RESET_ACTIVE_MENU\n  };\n}\n_c59 = ResetActiveMenu;\nexport function SetActiveMediatype(type) {\n  return {\n    type: TYPES.SET_ACTIVE_MEDIA_TYPE,\n    payload: type\n  };\n}\n_c60 = SetActiveMediatype;\nexport function GetImage(id) {\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\n    });\n  };\n} //========================================================\n//========================================================\n// Get all feedback to display for the clients\n\n_c61 = GetImage;\nexport function GetAllApprovedFeedbacks(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}`;\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks${options}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n} // Profile photo uploading\n\n_c62 = GetAllApprovedFeedbacks;\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: profilePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('staffPage'));\n      dispatch(GetProfilePhotoByEmployeeId(employeeId));\n      dispatch(FetchActiveRecordData(employeeId, 'staffPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} // Other photo uploading\n\n_c63 = UploadProfilePhoto;\nexport function UploadPhoto(employeeId, mediaType, mediafile) {\n  var requestURL = `${host}/MediaFile/UploadMediaFile?employeeId=${employeeId}&type=${mediaType}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: mediafile\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('mediaFilesPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c64 = UploadPhoto;\nexport function GetProfilePhotoByEmployeeId(employeeId) {\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\n    }).then(imageObjectURL => {\n      return imageObjectURL;\n    });\n  };\n}\n_c65 = GetProfilePhotoByEmployeeId;\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\n  return {\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n}\n_c66 = FeetchProfilePhotoSuccess;\nexport function UploadProcedureTypePhoto(procedureTypeId, procedureTypePhoto) {\n  var requestURL = `${host}/MediaFile/UploadProcedureTypePhoto?procedureTypeId=${procedureTypeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: procedureTypePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('servicesPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c67 = UploadProcedureTypePhoto;\nexport function GetProcedureTypePhotoById(procedureTypeId) {\n  var requestURL = `${host}/MediaFile/GetProcedureTypePhotoById?id=${procedureTypeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProcedureTypePhotoSuccess(imageObjectURL));\n    }).then(imageObjectURL => {\n      return imageObjectURL;\n    });\n  };\n}\n_c68 = GetProcedureTypePhotoById;\nexport function FeetchProcedureTypePhotoSuccess(imageObjectURL) {\n  return {\n    type: TYPES.FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n} // Check unwachedFeedbacks\n\n_c69 = FeetchProcedureTypePhotoSuccess;\nexport function CheckUnwachedFeedbacks() {\n  var requestURL = `${host}/Feedback/CheckUnwachedFeedbacks`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(CheckUnwachedFeedbacksSuccess(data));\n    });\n  };\n}\n_c70 = CheckUnwachedFeedbacks;\nexport function CheckUnwachedFeedbacksSuccess(data) {\n  return {\n    type: TYPES.SET_NEW_FEEDBACKS_STATE,\n    payload: data\n  };\n}\n_c71 = CheckUnwachedFeedbacksSuccess;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71;\n\n$RefreshReg$(_c, \"EmployeeAutorization\");\n$RefreshReg$(_c2, \"EmployeeAutorizationSuccess\");\n$RefreshReg$(_c3, \"EmployeeAuthorizationFailed\");\n$RefreshReg$(_c4, \"EmployeeLogout\");\n$RefreshReg$(_c5, \"FeetchMainTableData\");\n$RefreshReg$(_c6, \"FeetchAllProcedureTypes\");\n$RefreshReg$(_c7, \"FetchAllDoneddOrders\");\n$RefreshReg$(_c8, \"FetchAllStagedOrders\");\n$RefreshReg$(_c9, \"FeetchAllMediafiles\");\n$RefreshReg$(_c10, \"FeetchMainTableDataSuccess\");\n$RefreshReg$(_c11, \"FetchActiveRecordData\");\n$RefreshReg$(_c12, \"FetchClientByEmail\");\n$RefreshReg$(_c13, \"FetchActiveRecordDataSuccess\");\n$RefreshReg$(_c14, \"SetActiveIdentifier\");\n$RefreshReg$(_c15, \"DeleteServiceType\");\n$RefreshReg$(_c16, \"DeleteFeedback\");\n$RefreshReg$(_c17, \"DeleteData\");\n$RefreshReg$(_c18, \"UpdateProcedureType\");\n$RefreshReg$(_c19, \"UpdateFeedback\");\n$RefreshReg$(_c20, \"UpdateData\");\n$RefreshReg$(_c21, \"UpdateMaterialAmount\");\n$RefreshReg$(_c22, \"UpdateOrderStatus\");\n$RefreshReg$(_c23, \"CreateNewProcedureType\");\n$RefreshReg$(_c24, \"CreateNewManufacturer\");\n$RefreshReg$(_c25, \"CreateFeedback\");\n$RefreshReg$(_c26, \"CreateClientFromMain\");\n$RefreshReg$(_c27, \"AddData\");\n$RefreshReg$(_c28, \"SetEditModalState\");\n$RefreshReg$(_c29, \"SetUpdateModalState\");\n$RefreshReg$(_c30, \"SetCreateModalState\");\n$RefreshReg$(_c31, \"SetLoginModalState\");\n$RefreshReg$(_c32, \"SetProcedureTypeCreateModalState\");\n$RefreshReg$(_c33, \"SetProcedureTypeUpdateModalState\");\n$RefreshReg$(_c34, \"GetProceduresByType\");\n$RefreshReg$(_c35, \"FeetchProcedureSuccess\");\n$RefreshReg$(_c36, \"GetEmployeesByProcedureType\");\n$RefreshReg$(_c37, \"FeetchEmployeesSuccess\");\n$RefreshReg$(_c38, \"GetAvaliableTimes\");\n$RefreshReg$(_c39, \"FeetchAvaliableTimesSuccess\");\n$RefreshReg$(_c40, \"SetActiveDate\");\n$RefreshReg$(_c41, \"SetActiveTime\");\n$RefreshReg$(_c42, \"SetActiveProcedureType\");\n$RefreshReg$(_c43, \"SetActiveProcedureTypeSuccess\");\n$RefreshReg$(_c44, \"SetActiveProcedure\");\n$RefreshReg$(_c45, \"SetActiveProcedureSuccess\");\n$RefreshReg$(_c46, \"SetActiveClient\");\n$RefreshReg$(_c47, \"SetActiveClientSuccess\");\n$RefreshReg$(_c48, \"SetActiveEmployee\");\n$RefreshReg$(_c49, \"SetActiveEmployeeSuccess\");\n$RefreshReg$(_c50, \"SetBookingStatus\");\n$RefreshReg$(_c51, \"RedirectToOrdering\");\n$RefreshReg$(_c52, \"SetOrderStatus\");\n$RefreshReg$(_c53, \"ResetActiveSingleData\");\n$RefreshReg$(_c54, \"ResetSelectedValue\");\n$RefreshReg$(_c55, \"ResetSelectedValues\");\n$RefreshReg$(_c56, \"SetSelectedValue\");\n$RefreshReg$(_c57, \"AddOrder\");\n$RefreshReg$(_c58, \"SetActiveMenu\");\n$RefreshReg$(_c59, \"ResetActiveMenu\");\n$RefreshReg$(_c60, \"SetActiveMediatype\");\n$RefreshReg$(_c61, \"GetImage\");\n$RefreshReg$(_c62, \"GetAllApprovedFeedbacks\");\n$RefreshReg$(_c63, \"UploadProfilePhoto\");\n$RefreshReg$(_c64, \"UploadPhoto\");\n$RefreshReg$(_c65, \"GetProfilePhotoByEmployeeId\");\n$RefreshReg$(_c66, \"FeetchProfilePhotoSuccess\");\n$RefreshReg$(_c67, \"UploadProcedureTypePhoto\");\n$RefreshReg$(_c68, \"GetProcedureTypePhotoById\");\n$RefreshReg$(_c69, \"FeetchProcedureTypePhotoSuccess\");\n$RefreshReg$(_c70, \"CheckUnwachedFeedbacks\");\n$RefreshReg$(_c71, \"CheckUnwachedFeedbacksSuccess\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Redux/Actions/actions.js"],"names":["TYPES","host","EmployeeAutorization","email","password","requestURL","dispatch","fetch","method","then","response","ok","EmployeeAuthorizationFailed","SetActiveMenu","alert","Error","errorText","data","json","EmployeeAutorizationSuccess","type","EMPLOYEE_AUTORIZATION_SUCCESS","payload","EMPLOYEE_AUTHORIZATION_FAILED","EmployeeLogout","EMPLOYEE_LOGOUT","FeetchMainTableData","activeMenu","itemsPerPage","pageNumber","sortOrder","options","statusText","FeetchMainTableDataSuccess","FeetchAllProcedureTypes","FetchAllDoneddOrders","FetchAllStagedOrders","FeetchAllMediafiles","mediafileType","employeeId","FETCH_TABLE_DATA_SUCCESS","identifier","sortBy","FetchActiveRecordData","id","FetchActiveRecordDataSuccess","FetchClientByEmail","SINGLE_RECORD_FETCH_DATA_SUCCESS","SetActiveIdentifier","ACTIVE_ID_SET","DeleteServiceType","cors","DeleteFeedback","CheckUnwachedFeedbacks","DeleteData","UpdateProcedureType","dataObject","headers","Headers","Accept","body","JSON","stringify","status","console","log","catch","err","UpdateFeedback","UpdateData","UpdateMaterialAmount","UpdateOrderStatus","FetchAllDonedOrders","CreateNewProcedureType","CreateNewManufacturer","CreateFeedback","GetAllApprovedFeedbacks","CreateClientFromMain","AddData","SetEditModalState","EDIT_STATE","SetUpdateModalState","UPDATE_MODAL_WINDOW_STATE","SetCreateModalState","CREATE_MODAL_WINDOW_STATE","SetLoginModalState","LOGIN_MODAL_WINDOW_STATE","SetProcedureTypeCreateModalState","CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE","SetProcedureTypeUpdateModalState","UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE","GetProceduresByType","FeetchProcedureSuccess","PROCEDURE_FETCH_DATA_SUCCESS","GetEmployeesByProcedureType","FeetchEmployeesSuccess","EMPLOYEE_FETCH_DATA_SUCCESS","GetAvaliableTimes","date","procedureId","open","close","FeetchAvaliableTimesSuccess","SCHEDULE_FETCH_DATA_SUCCESS","SetActiveDate","SET_ACTIVE_DATE","SetActiveTime","SET_ACTIVE_TIME","SetActiveProcedureType","SetActiveProcedureTypeSuccess","SET_ACTIVE_PROCEDURE_TYPE","SetActiveProcedure","SetActiveProcedureSuccess","SET_ACTIVE_PROCEDURE","SetActiveClient","SetActiveClientSuccess","SET_ACTIVE_CLIENT","SetActiveEmployee","SetActiveEmployeeSuccess","SET_ACTIVE_EMPLOYEE","SetBookingStatus","SET_BOOKING_STATUS","RedirectToOrdering","REDIRECT_TO_ORDERING","SetOrderStatus","SET_ORDER_CREATION_STATUS","ResetActiveSingleData","RESET_SINGLE_DATA","ResetSelectedValue","RESET_SINGLE_SELECTED_VALUE","ResetSelectedValues","RESET_SELECTED_VALUES","SetSelectedValue","inputName","SET_SELECTED_VALUE","AddOrder","SET_ACTIVE_MENU","ResetActiveMenu","RESET_ACTIVE_MENU","SetActiveMediatype","SET_ACTIVE_MEDIA_TYPE","GetImage","blob","imageBlob","imageObjectURL","URL","createObjectURL","UploadProfilePhoto","profilePhoto","GetProfilePhotoByEmployeeId","UploadPhoto","mediaType","mediafile","FeetchProfilePhotoSuccess","FETCH_PROFILE_PHOTO_SUCCESS","UploadProcedureTypePhoto","procedureTypeId","procedureTypePhoto","GetProcedureTypePhotoById","FeetchProcedureTypePhotoSuccess","FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS","CheckUnwachedFeedbacksSuccess","SET_NEW_FEEDBACKS_STATE"],"mappings":"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","sourcesContent":["import * as TYPES from './actionTypes';\r\nconst host = 'https://localhost:7275';\r\n\r\n// Authorization of employees ==========================================\r\n\r\nexport function EmployeeAutorization(email, password) {\r\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'post',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(EmployeeAuthorizationFailed());\r\n          dispatch(SetActiveMenu('promotionsPage'));\r\n          alert('Incorrect login or password. Try again...');\r\n          throw new Error(response.errorText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeAutorizationSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function EmployeeAutorizationSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function EmployeeAuthorizationFailed() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTHORIZATION_FAILED,\r\n  };\r\n}\r\n\r\nexport function EmployeeLogout() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_LOGOUT,\r\n  };\r\n}\r\n\r\n//==============================================\r\n//==============================================\r\n//Get paged data of current table\r\n\r\nexport function FeetchMainTableData(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n  sortOrder,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetAllClients${options}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetAllMaterials${options}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetAllProcedures${options}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetAllOrders${options}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetAllFeedbacks${options}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\r\n      break;\r\n    case 'ourStaffPage':\r\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu, sortOrder));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAllProcedureTypes() {\r\n  var requestURL = `${host}/ProcedureType/GetAllProcedureTypes`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, 'procedureTypesPage'));\r\n      });\r\n  };\r\n}\r\n\r\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport function FetchAllDoneddOrders(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n  sortOrder,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\r\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchAllStagedOrders(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n  sortOrder,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\r\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\r\n  var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchMainTableDataSuccess(data, activeMenu, sortOrder) {\r\n  return {\r\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\r\n    payload: data,\r\n    identifier: activeMenu,\r\n    sortBy: sortOrder,\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n//Get the data of choosen record of the table by ID\r\n\r\nexport function FetchActiveRecordData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\r\n      break;\r\n    case 'serviceTypesPage':\r\n      requestURL = `${host}/ProcedureType/GetProcedureTypeById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchClientByEmail(email) {\r\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(FetchActiveRecordDataSuccess('Not found'));\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchActiveRecordDataSuccess(data) {\r\n  return {\r\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//Active identifier setting\r\nexport function SetActiveIdentifier(id) {\r\n  return {\r\n    type: TYPES.ACTIVE_ID_SET,\r\n    payload: id,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n//Delete the data of choosen record of the table\r\n\r\nexport function DeleteServiceType(id) {\r\n  var requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchMainTableData('servicesPage')),\r\n    );\r\n  };\r\n}\r\n\r\nexport function DeleteFeedback(id) {\r\n  var requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(\r\n      () => dispatch(FeetchMainTableData('feedbacksPage')),\r\n      dispatch(CheckUnwachedFeedbacks()),\r\n    );\r\n  };\r\n}\r\n\r\nexport function DeleteData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\r\n      break;\r\n    case 'serviceTypesPage':\r\n      requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    // case 'feedbacksPage':\r\n    //   requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\r\n    //   break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchMainTableData(activeMenu)),\r\n    );\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Update the data of choosen record of the table\r\n\r\nexport function UpdateProcedureType(dataObject) {\r\n  var requestURL = `${host}/ProcedureType/UpdateProcedureType`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('servicesPage')));\r\n  };\r\n}\r\n\r\nexport function UpdateFeedback(activeMenu, dataObject) {\r\n  var requestURL = `${host}/Feedback/UpdateFeedback`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData(activeMenu));\r\n        dispatch(CheckUnwachedFeedbacks());\r\n      });\r\n  };\r\n}\r\n\r\nexport function UpdateData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/UpdateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/UpdateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/UpdateService`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/UpdateOrder`;\r\n      break;\r\n    // case 'feedbacksPage':\r\n    //   requestURL = `${host}/Feedback/UpdateFeedback`;\r\n    //   break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/UpdateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData(activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function UpdateMaterialAmount(dataObject) {\r\n  var requestURL = `${host}/Material/UpdateMaterialAmount`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function UpdateOrderStatus(id) {\r\n  var requestURL = `${host}/Order/UpdateOrderStatus`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(id),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FetchAllDonedOrders('donedOrdersPage')));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n//Add new data\r\n\r\nexport function CreateNewProcedureType(dataObject) {\r\n  var requestURL = `${host}/ProcedureType/CreateProcedureType`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('servicesPage')));\r\n  };\r\n}\r\n\r\nexport function CreateNewManufacturer(dataObject) {\r\n  var requestURL = `${host}/MaterialManufacturer/CreateMaterialManufacturer`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('materialsPage')));\r\n  };\r\n}\r\n\r\nexport function CreateFeedback(activeMenu, dataObject) {\r\n  var requestURL = `${host}/Feedback/CreateFeedback`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(GetAllApprovedFeedbacks(activeMenu)));\r\n  };\r\n}\r\n\r\nexport function CreateClientFromMain(dataObject) {\r\n  var requestURL = `${host}/Client/CreateClient`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('ordersPage')));\r\n  };\r\n}\r\n\r\nexport function AddData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/CreateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/CreateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/CreateProcedure`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/CreateOrder`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/CreateFeedback`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/CreateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          alert('Some of the optional fields are empty! Adding failed.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData(activeMenu)));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Modal windows states processing functions\r\n\r\nexport function SetEditModalState() {\r\n  return {\r\n    type: TYPES.EDIT_STATE,\r\n  };\r\n}\r\n\r\nexport function SetUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetLoginModalState() {\r\n  return {\r\n    type: TYPES.LOGIN_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetProcedureTypeCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetProcedureTypeUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n// Order creation and updating functions\r\n// Feetcing of procedures by their types (for responsive select-list content change)\r\nexport function GetProceduresByType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of employees by procedures types (for responsive select-list content change)\r\nexport function GetEmployeesByProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchEmployeesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchEmployeesSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of schedule with avaliable time intervals\r\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`,\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchAvaliableTimesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAvaliableTimesSuccess(data) {\r\n  return {\r\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Setting of active day and procedure during making order\r\n\r\nexport function SetActiveDate(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_DATE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveTime(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_TIME,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/ProcedureType/GetProcedureTypeById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveProcedureTypeSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveProcedureTypeSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE_TYPE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedure(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveClient(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Client/GetClientById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveClientSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveClientSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_CLIENT,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveEmployee(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetEmployeeViewModelById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveEmployeeSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveEmployeeSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Set booking status\r\nexport function SetBookingStatus() {\r\n  return {\r\n    type: TYPES.SET_BOOKING_STATUS,\r\n  };\r\n}\r\n// Set client registration status\r\nexport function RedirectToOrdering() {\r\n  return {\r\n    type: TYPES.REDIRECT_TO_ORDERING,\r\n  };\r\n}\r\n// Set order creation status (from main by client)\r\nexport function SetOrderStatus() {\r\n  return {\r\n    type: TYPES.SET_ORDER_CREATION_STATUS,\r\n  };\r\n}\r\n\r\nexport function ResetActiveSingleData() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_DATA,\r\n  };\r\n}\r\n\r\n// Reset react-select single value (resetting of single select field value)\r\nexport function ResetSelectedValue() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE,\r\n  };\r\n}\r\n\r\n// Reset react-select values (resetting of all values of selects)\r\nexport function ResetSelectedValues() {\r\n  return {\r\n    type: TYPES.RESET_SELECTED_VALUES,\r\n  };\r\n}\r\n\r\n// Set react-select values (set each selected value to the state)\r\nexport function SetSelectedValue(inputName) {\r\n  return {\r\n    type: TYPES.SET_SELECTED_VALUE,\r\n    payload: inputName,\r\n  };\r\n}\r\n\r\n// ================Add order from main menu\r\nexport function AddOrder(dataObject) {\r\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          alert('Some of the optional fields are empty! Adding failed.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\nexport function SetActiveMenu(activeMenu) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_MENU,\r\n    payload: activeMenu,\r\n  };\r\n}\r\n\r\nexport function ResetActiveMenu() {\r\n  return {\r\n    type: TYPES.RESET_ACTIVE_MENU,\r\n  };\r\n}\r\n\r\nexport function SetActiveMediatype(type) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_MEDIA_TYPE,\r\n    payload: type,\r\n  };\r\n}\r\n\r\nexport function GetImage(id) {\r\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\r\n      });\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Get all feedback to display for the clients\r\nexport function GetAllApprovedFeedbacks(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}`;\r\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks${options}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\n// Profile photo uploading\r\n\r\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\r\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: profilePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('staffPage'));\r\n        dispatch(GetProfilePhotoByEmployeeId(employeeId));\r\n        dispatch(FetchActiveRecordData(employeeId, 'staffPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\n// Other photo uploading\r\n\r\nexport function UploadPhoto(employeeId, mediaType, mediafile) {\r\n  var requestURL = `${host}/MediaFile/UploadMediaFile?employeeId=${employeeId}&type=${mediaType}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: mediafile,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('mediaFilesPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProfilePhotoByEmployeeId(employeeId) {\r\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\r\n      })\r\n      .then((imageObjectURL) => {\r\n        return imageObjectURL;\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\r\n  return {\r\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n\r\nexport function UploadProcedureTypePhoto(procedureTypeId, procedureTypePhoto) {\r\n  var requestURL = `${host}/MediaFile/UploadProcedureTypePhoto?procedureTypeId=${procedureTypeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: procedureTypePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('servicesPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProcedureTypePhotoById(procedureTypeId) {\r\n  var requestURL = `${host}/MediaFile/GetProcedureTypePhotoById?id=${procedureTypeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProcedureTypePhotoSuccess(imageObjectURL));\r\n      })\r\n      .then((imageObjectURL) => {\r\n        return imageObjectURL;\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureTypePhotoSuccess(imageObjectURL) {\r\n  return {\r\n    type: TYPES.FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n\r\n// Check unwachedFeedbacks\r\n\r\nexport function CheckUnwachedFeedbacks() {\r\n  var requestURL = `${host}/Feedback/CheckUnwachedFeedbacks`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(CheckUnwachedFeedbacksSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function CheckUnwachedFeedbacksSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_NEW_FEEDBACKS_STATE,\r\n    payload: data,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}