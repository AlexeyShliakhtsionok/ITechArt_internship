{"ast":null,"code":"import * as TYPES from './actionTypes'; // Authorization of employees -----------------------------------------------------------------------------\n\nexport function EmployeeAutorization(email, password) {\n  const requestURL = `https://localhost:7275/Employee/GetToken?employeeEmail=${email}&password=${password}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeAutorizationSuccess(data));\n    });\n  };\n}\n_c = EmployeeAutorization;\nexport function EmployeeAutorizationSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\n    payload: data\n  };\n}\n_c2 = EmployeeAutorizationSuccess;\nexport function EmployeeLogout() {\n  return {\n    type: TYPES.EMPLOYEE_LOGOUT\n  };\n} //Active identifier setting------------------------------\n\n_c3 = EmployeeLogout;\nexport function SetActiveIdentifier(id) {\n  return {\n    type: TYPES.ACTIVE_ID_SET,\n    payload: id\n  };\n} // List of clients----------------------------------------\n\n_c4 = SetActiveIdentifier;\nexport function FeetchData() {\n  console.log('fetch');\n  const requestURL = 'https://localhost:7275/Client/GetAllClients';\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchDataSuccess(data));\n    });\n  };\n}\n_c5 = FeetchData;\nexport function FeetchDataSuccess(data) {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //Get by id\n\n_c6 = FeetchDataSuccess;\nexport function EmployeeFetchData(id) {\n  const requestURL = `https://localhost:7275/Employee/GetEmployeeById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeFeetchDataSuccess(data));\n    });\n  };\n}\n_c7 = EmployeeFetchData;\nexport function EmployeeFeetchDataSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //--------------------------------------------------------\n\n_c8 = EmployeeFeetchDataSuccess;\nexport function GetImage() {\n  const requestURL = 'https://localhost:7275/MediaFile/GetFileById?id=1';\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.blob();\n    }).then(data => {\n      dispatch(GetImageSuccess(data));\n    });\n  };\n}\n_c9 = GetImage;\nexport function GetImageSuccess(data) {\n  return {\n    type: TYPES.MEDIAFILE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // States processing functions\n\n_c10 = GetImageSuccess;\nexport function SetEditState() {\n  return {\n    type: TYPES.RECORD_EDIT_STATE\n  };\n}\n_c11 = SetEditState;\nexport function SetModalState() {\n  return {\n    type: TYPES.MODAL_WINDOW_STATE\n  };\n}\n_c12 = SetModalState;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"EmployeeAutorization\");\n$RefreshReg$(_c2, \"EmployeeAutorizationSuccess\");\n$RefreshReg$(_c3, \"EmployeeLogout\");\n$RefreshReg$(_c4, \"SetActiveIdentifier\");\n$RefreshReg$(_c5, \"FeetchData\");\n$RefreshReg$(_c6, \"FeetchDataSuccess\");\n$RefreshReg$(_c7, \"EmployeeFetchData\");\n$RefreshReg$(_c8, \"EmployeeFeetchDataSuccess\");\n$RefreshReg$(_c9, \"GetImage\");\n$RefreshReg$(_c10, \"GetImageSuccess\");\n$RefreshReg$(_c11, \"SetEditState\");\n$RefreshReg$(_c12, \"SetModalState\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Redux/Actions/actions.js"],"names":["TYPES","EmployeeAutorization","email","password","requestURL","dispatch","fetch","method","then","response","ok","Error","statusText","data","json","EmployeeAutorizationSuccess","type","EMPLOYEE_AUTORIZATION_SUCCESS","payload","EmployeeLogout","EMPLOYEE_LOGOUT","SetActiveIdentifier","id","ACTIVE_ID_SET","FeetchData","console","log","FeetchDataSuccess","FETCH_DATA_SUCCESS","EmployeeFetchData","EmployeeFeetchDataSuccess","EMPLOYEE_FETCH_DATA_SUCCESS","GetImage","blob","GetImageSuccess","MEDIAFILE_FETCH_DATA_SUCCESS","SetEditState","RECORD_EDIT_STATE","SetModalState","MODAL_WINDOW_STATE"],"mappings":"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","sourcesContent":["import * as TYPES from './actionTypes';\r\n\r\n// Authorization of employees -----------------------------------------------------------------------------\r\n\r\nexport function EmployeeAutorization(email, password) {\r\n  const requestURL = `https://localhost:7275/Employee/GetToken?employeeEmail=${email}&password=${password}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'post',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeAutorizationSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function EmployeeAutorizationSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function EmployeeLogout() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_LOGOUT,\r\n  };\r\n}\r\n\r\n//Active identifier setting------------------------------\r\n\r\nexport function SetActiveIdentifier(id) {\r\n  return {\r\n    type: TYPES.ACTIVE_ID_SET,\r\n    payload: id,\r\n  };\r\n}\r\n\r\n// List of clients----------------------------------------\r\n\r\nexport function FeetchData() {\r\n  console.log('fetch');\r\n  const requestURL = 'https://localhost:7275/Client/GetAllClients';\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchDataSuccess(data) {\r\n  return {\r\n    type: FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//Get by id\r\n\r\nexport function EmployeeFetchData(id) {\r\n  const requestURL = `https://localhost:7275/Employee/GetEmployeeById?id=${id}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeFeetchDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function EmployeeFeetchDataSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//--------------------------------------------------------\r\n\r\nexport function GetImage() {\r\n  const requestURL = 'https://localhost:7275/MediaFile/GetFileById?id=1';\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.blob();\r\n      })\r\n      .then((data) => {\r\n        dispatch(GetImageSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function GetImageSuccess(data) {\r\n  return {\r\n    type: TYPES.MEDIAFILE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// States processing functions\r\n\r\nexport function SetEditState() {\r\n  return {\r\n    type: TYPES.RECORD_EDIT_STATE,\r\n  };\r\n}\r\n\r\nexport function SetModalState() {\r\n  return {\r\n    type: TYPES.MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}