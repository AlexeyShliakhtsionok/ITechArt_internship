{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateClientModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateClientModal extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n    var singleData = this.props.singleResponseData;\n    var firstName = `${singleData.firstName}`;\n    var lastName = `${singleData.lastName}`;\n    var phone = singleData.phoneNumber;\n    var email = singleData.email;\n    var clientInfoArea;\n    var actionButtons;\n    var clientToUpdate = {\n      clientId: this.props.activeId,\n      firstName: singleData.firstName,\n      lastName: singleData.lastName,\n      phoneNumber: singleData.phoneNumber,\n      email: singleData.email\n    };\n    var orders = [];\n\n    if (singleData !== '') {\n      singleData.orders.forEach(order => {\n        orders.push(order);\n      }); // Employee orders table\n    }\n\n    if (orders !== null) {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < orders.length; i++) {\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: singleData.orders[i].orderId,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date + ' ' + time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedure.procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedure.procedurePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].employee.firstName + ' ' + singleData.orders[i].employee.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, singleData.orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    } // End of employee orders table\n\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n      clientInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First name: \", firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last name: \", lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone: \", phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, clientToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n      clientInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: firstName,\n              onChange: e => {\n                clientToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: lastName,\n              onChange: e => {\n                clientToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              defaultValue: phone,\n              onChange: e => {\n                clientToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              defaultValue: email,\n              onChange: e => {\n                clientToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: clientInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData,\n    updateModalOpen: state.updateModalOpen,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    onEdit: () => dispatch(actions.SetEditModalState()),\n    onDelete: (id, menu) => {\n      dispatch(actions.DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(actions.UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateClientModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateClientModal.js"],"names":["React","connect","Modal","actions","UpdateClientModal","PureComponent","render","data","props","pagedTablesData","singleData","singleResponseData","firstName","lastName","phone","phoneNumber","email","clientInfoArea","actionButtons","clientToUpdate","clientId","activeId","orders","forEach","order","push","elements","element","header","i","length","date","dateOfService","substr","time","orderId","procedure","procedureName","procedurePrice","employee","concat","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","onUpdate","e","target","value","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","SetUpdateModalState","SetEditModalState","id","menu","DeleteData","UpdateData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\n\r\nclass UpdateClientModal extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var singleData = this.props.singleResponseData;\r\n    var firstName = `${singleData.firstName}`;\r\n    var lastName = `${singleData.lastName}`;\r\n    var phone = singleData.phoneNumber;\r\n    var email = singleData.email;\r\n    var clientInfoArea;\r\n    var actionButtons;\r\n    var clientToUpdate = {\r\n      clientId: this.props.activeId,\r\n      firstName: singleData.firstName,\r\n      lastName: singleData.lastName,\r\n      phoneNumber: singleData.phoneNumber,\r\n      email: singleData.email,\r\n    };\r\n\r\n    var orders = [];\r\n    if (singleData !== '') {\r\n      singleData.orders.forEach((order) => {\r\n        orders.push(order);\r\n      });\r\n      // Employee orders table\r\n    }\r\n\r\n    if (orders !== null) {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < orders.length; i++) {\r\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\r\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={singleData.orders[i].orderId}\r\n            id={singleData.orders[i].orderId}\r\n          >\r\n            <td>{date + ' ' + time}</td>\r\n            <td>{singleData.firstName}</td>\r\n            <td>{singleData.phoneNumber}</td>\r\n            <td>{singleData.email}</td>\r\n            <td>{singleData.orders[i].procedure.procedureName}</td>\r\n            <td>{singleData.orders[i].procedure.procedurePrice}</td>\r\n            <td>\r\n              {singleData.orders[i].employee.firstName +\r\n                ' ' +\r\n                singleData.orders[i].employee.lastName}\r\n            </td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n    // End of employee orders table\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      clientInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <p>First name: {firstName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Last name: {lastName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Phone: {phone}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Email: {email}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, clientToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      clientInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={firstName}\r\n                onChange={(e) => {\r\n                  clientToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={lastName}\r\n                onChange={(e) => {\r\n                  clientToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                defaultValue={phone}\r\n                onChange={(e) => {\r\n                  clientToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                defaultValue={email}\r\n                onChange={(e) => {\r\n                  clientToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{clientInfoArea}</div>\r\n          {actionButtons}\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n    updateModalOpen: state.updateModalOpen,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    onEdit: () => dispatch(actions.SetEditModalState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(actions.DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) =>\r\n      dispatch(actions.UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateClientModal);\r\n"]},"metadata":{},"sourceType":"module"}