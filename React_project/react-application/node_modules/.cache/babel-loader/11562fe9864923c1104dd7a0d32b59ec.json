{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\EmployeeMenu\\\\MediaMenu.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CreateMediafileModal from '../../ModalWindowsComponents/CreateMediafileModal.js';\nimport * as actions from '../../../Redux/Actions/actions';\nimport EmployeeMediafilesByType from './EmployeeMediafilesByType.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MediaMenu extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.componentDidMount = () => {\n      this.props.getAllMedia(this.props.activeMenu, 'profile', this.props.singleResponseData.employeeId);\n    };\n  }\n\n  render() {\n    var data = this.props.pagedTablesData;\n\n    if (data !== '') {\n      var elements = [];\n      var element;\n\n      if (data.mediafiles.length > 0) {\n        for (let i = 0; i < data.mediafiles.length; i++) {\n          element = [];\n          element = /*#__PURE__*/_jsxDEV(\"dir\", {\n            className: \"profileCardBody\",\n            id: i,\n            onClick: () => {\n              this.props.setUpdateModalState();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileCardInfo\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profilePhoto\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/gif;base64,${data.mediafiles[i].fileContents}`,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this);\n          elements = elements.concat(element);\n        }\n      }\n    }\n\n    if (data.mediafiles.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableFunctionality\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Mediafiles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.setCreateModalState();\n            },\n            children: \"Add new media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmployeeMediafilesByType, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableStyle media\",\n            children: elements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateMediafileModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableFunctionality\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Mediafiles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.setCreateModalState();\n              this.props.setButtonDisableState();\n            },\n            children: \"Add new media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmployeeMediafilesByType, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableStyle media\",\n            children: 'There is no files satisfying the condition...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateMediafileModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getAllMedia: (activeMenu, type, id) => dispatch(actions.FeetchAllMediafiles(activeMenu, type, id)),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaMenu);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/EmployeeMenu/MediaMenu.js"],"names":["React","connect","CreateMediafileModal","actions","EmployeeMediafilesByType","MediaMenu","PureComponent","componentDidMount","props","getAllMedia","activeMenu","singleResponseData","employeeId","render","data","pagedTablesData","elements","element","mediafiles","length","i","setUpdateModalState","fileContents","concat","setCreateModalState","setButtonDisableState","mapStateToProps","state","mapDispatchToProps","dispatch","type","id","FeetchAllMediafiles","SetCreateModalState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CreateMediafileModal from '../../ModalWindowsComponents/CreateMediafileModal.js';\r\nimport * as actions from '../../../Redux/Actions/actions';\r\nimport EmployeeMediafilesByType from './EmployeeMediafilesByType.js';\r\n\r\nclass MediaMenu extends React.PureComponent {\r\n  componentDidMount = () => {\r\n    this.props.getAllMedia(\r\n      this.props.activeMenu,\r\n      'profile',\r\n      this.props.singleResponseData.employeeId,\r\n    );\r\n  };\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    if (data !== '') {\r\n      var elements = [];\r\n      var element;\r\n      if (data.mediafiles.length > 0) {\r\n        for (let i = 0; i < data.mediafiles.length; i++) {\r\n          element = [];\r\n          element = (\r\n            <dir\r\n              className=\"profileCardBody\"\r\n              key={i}\r\n              id={i}\r\n              onClick={() => {\r\n                this.props.setUpdateModalState();\r\n              }}\r\n            >\r\n              <div className=\"profileCardInfo\">\r\n                <div className=\"profilePhoto\">\r\n                  <img\r\n                    src={`data:image/gif;base64,${data.mediafiles[i].fileContents}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </dir>\r\n          );\r\n          elements = elements.concat(element);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data.mediafiles.length > 0) {\r\n      return (\r\n        <>\r\n          <div className=\"tableFunctionality\">\r\n            <p className=\"title\">Mediafiles</p>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.setCreateModalState();\r\n              }}\r\n            >\r\n              Add new media\r\n            </button>\r\n            <EmployeeMediafilesByType />\r\n          </div>\r\n          <div className=\"dataTable\">\r\n            <div className=\"tableStyle media\">{elements}</div>\r\n          </div>\r\n          <CreateMediafileModal />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"tableFunctionality\">\r\n            <p className=\"title\">Mediafiles</p>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.setCreateModalState();\r\n                this.props.setButtonDisableState();\r\n              }}\r\n            >\r\n              Add new media\r\n            </button>\r\n            <EmployeeMediafilesByType />\r\n          </div>\r\n          <div className=\"dataTable\">\r\n            <div className=\"tableStyle media\">\r\n              {'There is no files satisfying the condition...'}\r\n            </div>\r\n          </div>\r\n          <CreateMediafileModal />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getAllMedia: (activeMenu, type, id) =>\r\n      dispatch(actions.FeetchAllMediafiles(activeMenu, type, id)),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaMenu);\r\n"]},"metadata":{},"sourceType":"module"}