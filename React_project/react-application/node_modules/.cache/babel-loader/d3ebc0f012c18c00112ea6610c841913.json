{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Feedbacks.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FeedbacksList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: this.props.responseDataList[i].feedbackId,\n            onClick: () => {\n              this.props.setActiveId(this.props.responseDataList[i].feedbackId);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.props.responseDataList[i].createdOn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.props.responseDataList[i].feedbackTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.props.responseDataList[i].feedbackText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [this.props.responseDataList[i].client.firstName, ' ', this.props.responseDataList[i].client.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: this.props.responseDataList[i].isVerify\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, this.props.responseDataList[i].feedbackId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n        elements = elements.concat(element);\n      }\n\n      console.log('elements', elements);\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setActiveId: id => dispatch(SetActiveIdentifier(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList); // import React from 'react';\n// import { connect } from 'react-redux';\n// import { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\n// class FeedbacksList extends React.PureComponent {\n//   render() {\n//     if (this.props.responseDataList !== '') {\n//       var elements = [];\n//       var element;\n//       var header = (\n//         <thead>\n//           <tr>\n//             <th>Date</th>\n//             <th>Title</th>\n//             <th>Text</th>\n//             <th>Author</th>\n//             <th>Is verify</th>\n//           </tr>\n//         </thead>\n//       );\n//       for (let i = 0; i < this.props.responseDataList.length; i++) {\n//         element = '';\n//         element = (\n//           <tr\n//             key={this.props.responseDataList[i].feedbackId}\n//             id={this.props.responseDataList[i].feedbackId}\n//             onClick={() => {\n//               this.props.setActiveId(this.props.responseDataList[i].feedbackId);\n//             }}\n//           >\n//             <td>{this.props.responseDataList[i].createdOn}</td>\n//             <td>{this.props.responseDataList[i].feedbackTitle}</td>\n//             <td>{this.props.responseDataList[i].feedbackText}</td>\n//             <td>\n//               {this.props.responseDataList[i].client.firstName}{' '}\n//               {this.props.responseDataList[i].client.lastName}\n//             </td>\n//             <td>\n//               <input\n//                 type=\"radio\"\n//                 value={this.props.responseDataList[i].isVerify}\n//               />\n//             </td>\n//           </tr>\n//         );\n//         elements = elements.concat(element);\n//       }\n//       console.log('elements', elements);\n//     }\n//     if (this.props.responseDataList !== '') {\n//       return (\n//         <>\n//           <div className=\"dataTable\">\n//             <table className=\"tableStyle\">\n//               {header}\n//               <tbody>{elements}</tbody>\n//             </table>\n//           </div>\n//         </>\n//       );\n//     } else {\n//       return (\n//         <>\n//           <p>There is no Data in DB...</p>\n//         </>\n//       );\n//     }\n//   }\n// }\n// function mapStateToProps(state) {\n//   return {\n//     responseDataList: state.responseDataList,\n//     activeId: state.activeId,\n//   };\n// }\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\n//   };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Feedbacks.js"],"names":["React","connect","SetActiveIdentifier","FeedbacksList","PureComponent","render","props","responseDataList","elements","element","header","i","length","feedbackId","setActiveId","createdOn","feedbackTitle","feedbackText","client","firstName","lastName","isVerify","concat","console","log","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\r\n\r\nclass FeedbacksList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Title</th>\r\n            <th>Text</th>\r\n            <th>Author</th>\r\n            <th>Is verify</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <>\r\n            <tr\r\n              key={this.props.responseDataList[i].feedbackId}\r\n              id={this.props.responseDataList[i].feedbackId}\r\n              onClick={() => {\r\n                this.props.setActiveId(\r\n                  this.props.responseDataList[i].feedbackId,\r\n                );\r\n              }}\r\n            >\r\n              <td>{this.props.responseDataList[i].createdOn}</td>\r\n              <td>{this.props.responseDataList[i].feedbackTitle}</td>\r\n              <td>{this.props.responseDataList[i].feedbackText}</td>\r\n              <td>\r\n                {this.props.responseDataList[i].client.firstName}{' '}\r\n                {this.props.responseDataList[i].client.lastName}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"radio\"\r\n                  value={this.props.responseDataList[i].isVerify}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      console.log('elements', elements);\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\r\n\r\n// class FeedbacksList extends React.PureComponent {\r\n//   render() {\r\n//     if (this.props.responseDataList !== '') {\r\n//       var elements = [];\r\n//       var element;\r\n//       var header = (\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Date</th>\r\n//             <th>Title</th>\r\n//             <th>Text</th>\r\n//             <th>Author</th>\r\n//             <th>Is verify</th>\r\n//           </tr>\r\n//         </thead>\r\n//       );\r\n\r\n//       for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n//         element = '';\r\n//         element = (\r\n//           <tr\r\n//             key={this.props.responseDataList[i].feedbackId}\r\n//             id={this.props.responseDataList[i].feedbackId}\r\n//             onClick={() => {\r\n//               this.props.setActiveId(this.props.responseDataList[i].feedbackId);\r\n//             }}\r\n//           >\r\n//             <td>{this.props.responseDataList[i].createdOn}</td>\r\n//             <td>{this.props.responseDataList[i].feedbackTitle}</td>\r\n//             <td>{this.props.responseDataList[i].feedbackText}</td>\r\n//             <td>\r\n//               {this.props.responseDataList[i].client.firstName}{' '}\r\n//               {this.props.responseDataList[i].client.lastName}\r\n//             </td>\r\n//             <td>\r\n//               <input\r\n//                 type=\"radio\"\r\n//                 value={this.props.responseDataList[i].isVerify}\r\n//               />\r\n//             </td>\r\n//           </tr>\r\n//         );\r\n//         elements = elements.concat(element);\r\n//       }\r\n//       console.log('elements', elements);\r\n//     }\r\n\r\n//     if (this.props.responseDataList !== '') {\r\n//       return (\r\n//         <>\r\n//           <div className=\"dataTable\">\r\n//             <table className=\"tableStyle\">\r\n//               {header}\r\n//               <tbody>{elements}</tbody>\r\n//             </table>\r\n//           </div>\r\n//         </>\r\n//       );\r\n//     } else {\r\n//       return (\r\n//         <>\r\n//           <p>There is no Data in DB...</p>\r\n//         </>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//   return {\r\n//     responseDataList: state.responseDataList,\r\n//     activeId: state.activeId,\r\n//   };\r\n// }\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {\r\n//     setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n//   };\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);\r\n"]},"metadata":{},"sourceType":"module"}