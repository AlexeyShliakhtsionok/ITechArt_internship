{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateServiceTypeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateServiceTypeModal extends React.PureComponent {\n  render() {\n    var serviceInfoArea;\n    var actionButtons;\n    var serviceTypeToCreate = {\n      procedureTypeName: ''\n    };\n    actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmServiceTypeInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.SetProcedureTypeCreateModalState();\n            this.props.onCreate(serviceTypeToCreate);\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n    serviceInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Service type name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            id: \"submForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Service type name...\",\n                onChange: e => {\n                  serviceTypeToCreate.procedureTypeName = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"profilePhotoInput\",\n              id: \"profilePhoto\",\n              name: \"profilePhoto\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              type: \"submit\",\n              onClick: () => {\n                const formData = new FormData();\n                var profilePhoto = document.getElementById('profilePhoto');\n                formData.append('profilePhoto', profilePhoto.files[0]);\n                this.props.uploadPhoto(this.props.activeId, formData);\n                this.props.onEdit();\n                this.props.setUpdateModalState();\n              },\n              children: \"Create service type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createProcedureTypeModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setProcedureTypeCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: serviceInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    createProcedureTypeModalOpen: state.createProcedureTypeModalOpen,\n    updateProcedureTypeModalOpen: state.updateProcedureTypeModalOpen,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setProcedureTypeCreateModalState: () => dispatch(actions.SetProcedureTypeCreateModalState()),\n    onCreate: data => dispatch(actions.CreateNewProcedureType(data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateServiceTypeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateServiceTypeModal.js"],"names":["React","connect","Modal","actions","CreateServiceTypeModal","PureComponent","render","serviceInfoArea","actionButtons","serviceTypeToCreate","procedureTypeName","props","SetProcedureTypeCreateModalState","onCreate","onSubmit","e","target","value","formData","FormData","profilePhoto","document","getElementById","append","files","uploadPhoto","activeId","onEdit","setUpdateModalState","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","createProcedureTypeModalOpen","setProcedureTypeCreateModalState","mapStateToProps","state","createModalOpen","pagedTablesData","updateProcedureTypeModalOpen","singleResponseData","activeMenu","mapDispatchToProps","dispatch","data","CreateNewProcedureType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;;AAEA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,aAA3C,CAAyD;AACvDC,EAAAA,MAAM,GAAG;AACP,QAAIC,eAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,mBAAmB,GAAG;AACxBC,MAAAA,iBAAiB,EAAE;AADK,KAA1B;AAIAF,IAAAA,aAAa,gBACX;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKG,KAAL,CAAWC,gCAAX;AACA,iBAAKD,KAAL,CAAWE,QAAX,CAAoBJ,mBAApB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBAF,IAAAA,eAAe,gBACb;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAM,YAAA,QAAQ,EAAE,KAAKO,QAArB;AAA+B,YAAA,EAAE,EAAC,UAAlC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,WAAW,EAAC,sBAFd;AAGE,gBAAA,QAAQ,EAAGC,CAAD,IAAO;AACfN,kBAAAA,mBAAmB,CAACC,iBAApB,GAAwCK,CAAC,CAACC,MAAF,CAASC,KAAjD;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AACE,cAAA,SAAS,EAAC,mBADZ;AAEE,cAAA,EAAE,EAAC,cAFL;AAGE,cAAA,IAAI,EAAC,cAHP;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,oBAVF,eAgBE;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,sBAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,oBAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB;AACAJ,gBAAAA,QAAQ,CAACK,MAAT,CAAgB,cAAhB,EAAgCH,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAhC;AACA,qBAAKb,KAAL,CAAWc,WAAX,CAAuB,KAAKd,KAAL,CAAWe,QAAlC,EAA4CR,QAA5C;AACA,qBAAKP,KAAL,CAAWgB,MAAX;AACA,qBAAKhB,KAAL,CAAWiB,mBAAX;AACD,eAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2CA,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,aADL;AAELC,UAAAA,UAAU,EAAE,SAFP;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,UAAU,EAAE,MAJP;AAKLC,UAAAA,UAAU,EAAE,QALP;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,mBAPH;AAQLC,UAAAA,YAAY,EAAE;AART;AADD,OADV;AAaE,MAAA,IAAI,EAAE,KAAK1B,KAAL,CAAW2B,4BAbnB;AAcE,MAAA,MAAM,EAAE,IAdV;AAeE,MAAA,aAAa,EAAE,KAfjB;AAgBE,MAAA,cAAc,EAAE,KAAK3B,KAAL,CAAW4B,gCAhB7B;AAAA,6BAkBE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BhC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGC,aAFH;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA5FsD;;AA+FzD,SAASgC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACC,eADlB;AAELC,IAAAA,eAAe,EAAEF,KAAK,CAACE,eAFlB;AAGLL,IAAAA,4BAA4B,EAAEG,KAAK,CAACH,4BAH/B;AAILM,IAAAA,4BAA4B,EAAEH,KAAK,CAACG,4BAJ/B;AAKLC,IAAAA,kBAAkB,EAAEJ,KAAK,CAACI,kBALrB;AAMLnB,IAAAA,QAAQ,EAAEe,KAAK,CAACf,QANX;AAOLoB,IAAAA,UAAU,EAAEL,KAAK,CAACK;AAPb,GAAP;AASD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLT,IAAAA,gCAAgC,EAAE,MAChCS,QAAQ,CAAC7C,OAAO,CAACS,gCAAR,EAAD,CAFL;AAGLC,IAAAA,QAAQ,EAAGoC,IAAD,IAAUD,QAAQ,CAAC7C,OAAO,CAAC+C,sBAAR,CAA+BD,IAA/B,CAAD;AAHvB,GAAP;AAKD;;AAED,eAAehD,OAAO,CACpBuC,eADoB,EAEpBO,kBAFoB,CAAP,CAGb3C,sBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\n\r\nclass CreateServiceTypeModal extends React.PureComponent {\r\n  render() {\r\n    var serviceInfoArea;\r\n    var actionButtons;\r\n    var serviceTypeToCreate = {\r\n      procedureTypeName: '',\r\n    };\r\n\r\n    actionButtons = (\r\n      <div className=\"confirmServiceTypeInfo\">\r\n        <div>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.SetProcedureTypeCreateModalState();\r\n              this.props.onCreate(serviceTypeToCreate);\r\n            }}\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    serviceInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Service type name:</p>\r\n          </div>\r\n          <div>\r\n            <form onSubmit={this.onSubmit} id=\"submForm\">\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Service type name...\"\r\n                  onChange={(e) => {\r\n                    serviceTypeToCreate.procedureTypeName = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n              <input\r\n                className=\"profilePhotoInput\"\r\n                id=\"profilePhoto\"\r\n                name=\"profilePhoto\"\r\n                type=\"file\"\r\n              />\r\n              <button\r\n                className=\"modalButton\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  const formData = new FormData();\r\n                  var profilePhoto = document.getElementById('profilePhoto');\r\n                  formData.append('profilePhoto', profilePhoto.files[0]);\r\n                  this.props.uploadPhoto(this.props.activeId, formData);\r\n                  this.props.onEdit();\r\n                  this.props.setUpdateModalState();\r\n                }}\r\n              >\r\n                Create service type\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createProcedureTypeModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setProcedureTypeCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{serviceInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    createProcedureTypeModalOpen: state.createProcedureTypeModalOpen,\r\n    updateProcedureTypeModalOpen: state.updateProcedureTypeModalOpen,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setProcedureTypeCreateModalState: () =>\r\n      dispatch(actions.SetProcedureTypeCreateModalState()),\r\n    onCreate: (data) => dispatch(actions.CreateNewProcedureType(data)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateServiceTypeModal);\r\n"]},"metadata":{},"sourceType":"module"}