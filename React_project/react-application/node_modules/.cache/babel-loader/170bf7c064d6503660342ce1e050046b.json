{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\StuffComponents\\\\Employees.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SetActiveIdentifier, SetModalState, EmployeeFetchData } from '../../Redux/Actions/actions.js';\nimport EmployeeModal from '../Modals/EmployeeModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EmployeeList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qualification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\n        var role;\n        var specialization;\n        var qualification;\n\n        for (let i = 0; i < this.props.responseDataList.qualification.length; i++) {\n          if (this.props.responseDataList.employees[i].qualification === this.props.responseDataList.qualification[i].value) {\n            qualification = this.props.responseDataList.qualification[i].name;\n          }\n        } //---------------------------------\n\n\n        for (let i = 0; i < this.props.responseDataList.role.length; i++) {\n          if (this.props.responseDataList.employees[i].role === this.props.responseDataList.role[i].value) {\n            role = this.props.responseDataList.role[i].value;\n          }\n        }\n\n        for (let i = 0; i < this.props.responseDataList.specialization.length; i++) {\n          if (this.props.responseDataList.employees[i].specialization === this.props.responseDataList.specialization[i].value) {\n            specialization = this.props.responseDataList.specialization[i].value;\n          }\n        }\n\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: this.props.responseDataList.employees[i].employeeId,\n          onClick: () => {\n            this.props.setActiveId(this.props.responseDataList.employees[i].employeeId);\n            this.props.getEmployee(this.props.responseDataList.employees[i].employeeId);\n            this.props.setModalState();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: specialization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: qualification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, this.props.responseDataList.employees[i].employeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EmployeeModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    checkStateForRender: state.checkStateForRender,\n    responseDataList: state.responseDataList,\n    activeId: state.activeId\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setModalState: () => dispatch(SetModalState()),\n    setActiveId: id => dispatch(SetActiveIdentifier(id)),\n    getEmployee: id => dispatch(EmployeeFetchData(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/StuffComponents/Employees.js"],"names":["React","connect","SetActiveIdentifier","SetModalState","EmployeeFetchData","EmployeeModal","EmployeeList","PureComponent","render","props","responseDataList","elements","element","header","i","employees","length","role","specialization","qualification","value","name","employeeId","setActiveId","getEmployee","setModalState","firstName","lastName","phoneNumber","email","concat","mapStateToProps","state","checkStateForRender","activeId","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  SetActiveIdentifier,\r\n  SetModalState,\r\n  EmployeeFetchData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport EmployeeModal from '../Modals/EmployeeModal.js';\r\n\r\nclass EmployeeList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>FirstName</th>\r\n            <th>Lastname</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Specialization</th>\r\n            <th>Qualification</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\r\n        var role;\r\n        var specialization;\r\n        var qualification;\r\n        for (\r\n          let i = 0;\r\n          i < this.props.responseDataList.qualification.length;\r\n          i++\r\n        ) {\r\n          if (\r\n            this.props.responseDataList.employees[i].qualification ===\r\n            this.props.responseDataList.qualification[i].value\r\n          ) {\r\n            qualification = this.props.responseDataList.qualification[i].name;\r\n          }\r\n        }\r\n\r\n        //---------------------------------\r\n        for (let i = 0; i < this.props.responseDataList.role.length; i++) {\r\n          if (\r\n            this.props.responseDataList.employees[i].role ===\r\n            this.props.responseDataList.role[i].value\r\n          ) {\r\n            role = this.props.responseDataList.role[i].value;\r\n          }\r\n        }\r\n\r\n        for (\r\n          let i = 0;\r\n          i < this.props.responseDataList.specialization.length;\r\n          i++\r\n        ) {\r\n          if (\r\n            this.props.responseDataList.employees[i].specialization ===\r\n            this.props.responseDataList.specialization[i].value\r\n          ) {\r\n            specialization =\r\n              this.props.responseDataList.specialization[i].value;\r\n          }\r\n        }\r\n\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={this.props.responseDataList.employees[i].employeeId}\r\n            id={this.props.responseDataList.employees[i].employeeId}\r\n            onClick={() => {\r\n              this.props.setActiveId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n              this.props.getEmployee(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n              this.props.setModalState();\r\n            }}\r\n          >\r\n            <td>{this.props.responseDataList.employees[i].firstName}</td>\r\n            <td>{this.props.responseDataList.employees[i].lastName}</td>\r\n            <td>{this.props.responseDataList.employees[i].phoneNumber}</td>\r\n            <td>{this.props.responseDataList.employees[i].email}</td>\r\n            <td>{role}</td>\r\n            <td>{specialization}</td>\r\n            <td>{qualification}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n              <EmployeeModal />\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    checkStateForRender: state.checkStateForRender,\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setModalState: () => dispatch(SetModalState()),\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n    getEmployee: (id) => dispatch(EmployeeFetchData(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\r\n"]},"metadata":{},"sourceType":"module"}