{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateFeedbackModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateFeedbacktModal extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n    var singleData = this.props.singleResponseData;\n    var isDisabled = false;\n\n    if (singleData === '') {\n      isDisabled = false;\n    } else {\n      isDisabled = true;\n    }\n\n    var feedbackInfoArea;\n    var emailCheck;\n    var actionButton;\n    var feedbackToCreate = {\n      client: singleData,\n      feedbackTitle: '',\n      feedbackText: '',\n      isVerify: false,\n      createdOn: new Date()\n    };\n    actionButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            console.log(Date.now()); // feedbackToCreate.createdOn = Date.now();\n\n            this.props.setCreateModalState();\n            this.props.onCreate('feedbacksPage', feedbackToCreate);\n          },\n          children: \"Create feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n    emailCheck = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileTextItem\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem-right\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email...\",\n          onChange: e => {\n            data.clients.forEach(client => {\n              if (client.email === e.target.value) feedbackToCreate.client = this.props.getByEmail(client.email);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n    feedbackInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title...\",\n            onChange: e => {\n              feedbackToCreate.feedbackTitle = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"feedbackBodyText\",\n            placeholder: \"Text...\",\n            onChange: e => {\n              feedbackToCreate.feedbackText = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n\n    if (isDisabled) {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        styles: {\n          modal: {\n            maxWidth: 'fit-content',\n            background: '#6c3636',\n            fontFamily: 'Play',\n            alignItems: 'center',\n            textAlign: 'center',\n            border: '6px solid #f7f6f6',\n            borderRadius: '10px'\n          }\n        },\n        open: this.props.createModalOpen,\n        center: true,\n        showCloseIcon: false,\n        onOverlayClick: this.props.setCreateModalState,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"New feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileBody\",\n            children: feedbackInfoArea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), actionButton]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        styles: {\n          modal: {\n            maxWidth: 'fit-content',\n            background: '#6c3636',\n            fontFamily: 'Play',\n            alignItems: 'center',\n            textAlign: 'center',\n            border: '6px solid #f7f6f6',\n            borderRadius: '10px'\n          }\n        },\n        open: this.props.createModalOpen,\n        center: true,\n        showCloseIcon: false,\n        onOverlayClick: this.props.setCreateModalState,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailCheckMessage\",\n            children: \"Please, enter the email of your own account...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileBody\",\n            children: emailCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    onCreate: (activeMenu, data) => dispatch(actions.CreateFeedback(activeMenu, data)),\n    getByEmail: email => dispatch(actions.FetchClientByEmail(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFeedbacktModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateFeedbackModal.js"],"names":["React","connect","Modal","actions","CreateFeedbacktModal","PureComponent","render","data","props","pagedTablesData","singleData","singleResponseData","isDisabled","feedbackInfoArea","emailCheck","actionButton","feedbackToCreate","client","feedbackTitle","feedbackText","isVerify","createdOn","Date","console","log","now","setCreateModalState","onCreate","e","clients","forEach","email","target","value","getByEmail","modal","maxWidth","background","fontFamily","alignItems","textAlign","border","borderRadius","createModalOpen","mapStateToProps","state","activeId","activeMenu","mapDispatchToProps","dispatch","SetCreateModalState","CreateFeedback","FetchClientByEmail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;;AAEA,MAAMC,oBAAN,SAAmCJ,KAAK,CAACK,aAAzC,CAAuD;AACrDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,eAAtB;AACA,QAAIC,UAAU,GAAG,KAAKF,KAAL,CAAWG,kBAA5B;AACA,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAIF,UAAU,KAAK,EAAnB,EAAuB;AACrBE,MAAAA,UAAU,GAAG,KAAb;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,GAAG,IAAb;AACD;;AACD,QAAIC,gBAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,gBAAgB,GAAG;AACrBC,MAAAA,MAAM,EAAEP,UADa;AAErBQ,MAAAA,aAAa,EAAE,EAFM;AAGrBC,MAAAA,YAAY,EAAE,EAHO;AAIrBC,MAAAA,QAAQ,EAAE,KAJW;AAKrBC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALU,KAAvB;AAQAP,IAAAA,YAAY,gBACV;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbQ,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL,EAAZ,EADa,CAEb;;AACA,iBAAKjB,KAAL,CAAWkB,mBAAX;AACA,iBAAKlB,KAAL,CAAWmB,QAAX,CAAoB,eAApB,EAAqCX,gBAArC;AACD,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBAF,IAAAA,UAAU,gBACR;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,QAAQ,EAAGc,CAAD,IAAO;AACfrB,YAAAA,IAAI,CAACsB,OAAL,CAAaC,OAAb,CAAsBb,MAAD,IAAY;AAC/B,kBAAIA,MAAM,CAACc,KAAP,KAAiBH,CAAC,CAACI,MAAF,CAASC,KAA9B,EACEjB,gBAAgB,CAACC,MAAjB,GAA0B,KAAKT,KAAL,CAAW0B,UAAX,CAAsBjB,MAAM,CAACc,KAA7B,CAA1B;AACH,aAHD;AAID;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBAlB,IAAAA,gBAAgB,gBACd;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,QAAQ,EAAGe,CAAD,IAAO;AACfZ,cAAAA,gBAAgB,CAACE,aAAjB,GAAiCU,CAAC,CAACI,MAAF,CAASC,KAA1C;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,kBAFZ;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,QAAQ,EAAGL,CAAD,IAAO;AACfZ,cAAAA,gBAAgB,CAACG,YAAjB,GAAgCS,CAAC,CAACI,MAAF,CAASC,KAAzC;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAmCA,QAAIrB,UAAJ,EAAgB;AACd,0BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAE;AACNuB,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,aADL;AAELC,YAAAA,UAAU,EAAE,SAFP;AAGLC,YAAAA,UAAU,EAAE,MAHP;AAILC,YAAAA,UAAU,EAAE,QAJP;AAKLC,YAAAA,SAAS,EAAE,QALN;AAMLC,YAAAA,MAAM,EAAE,mBANH;AAOLC,YAAAA,YAAY,EAAE;AAPT;AADD,SADV;AAYE,QAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWmC,eAZnB;AAaE,QAAA,MAAM,EAAE,IAbV;AAcE,QAAA,aAAa,EAAE,KAdjB;AAeE,QAAA,cAAc,EAAE,KAAKnC,KAAL,CAAWkB,mBAf7B;AAAA,+BAiBE;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8Bb;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGE,YAHH;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BD,MA0BO;AACL,0BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAE;AACNoB,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,aADL;AAELC,YAAAA,UAAU,EAAE,SAFP;AAGLC,YAAAA,UAAU,EAAE,MAHP;AAILC,YAAAA,UAAU,EAAE,QAJP;AAKLC,YAAAA,SAAS,EAAE,QALN;AAMLC,YAAAA,MAAM,EAAE,mBANH;AAOLC,YAAAA,YAAY,EAAE;AAPT;AADD,SADV;AAYE,QAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWmC,eAZnB;AAaE,QAAA,MAAM,EAAE,IAbV;AAcE,QAAA,aAAa,EAAE,KAdjB;AAeE,QAAA,cAAc,EAAE,KAAKnC,KAAL,CAAWkB,mBAf7B;AAAA,+BAiBE;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BZ;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,cADF;AA0BD;AACF;;AAjJoD;;AAoJvD,SAAS8B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACF,eADlB;AAELlC,IAAAA,eAAe,EAAEoC,KAAK,CAACpC,eAFlB;AAGLE,IAAAA,kBAAkB,EAAEkC,KAAK,CAAClC,kBAHrB;AAILmC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAJX;AAKLC,IAAAA,UAAU,EAAEF,KAAK,CAACE;AALb,GAAP;AAOD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLvB,IAAAA,mBAAmB,EAAE,MAAMuB,QAAQ,CAAC9C,OAAO,CAAC+C,mBAAR,EAAD,CAD9B;AAELvB,IAAAA,QAAQ,EAAE,CAACoB,UAAD,EAAaxC,IAAb,KACR0C,QAAQ,CAAC9C,OAAO,CAACgD,cAAR,CAAuBJ,UAAvB,EAAmCxC,IAAnC,CAAD,CAHL;AAIL2B,IAAAA,UAAU,EAAGH,KAAD,IAAWkB,QAAQ,CAAC9C,OAAO,CAACiD,kBAAR,CAA2BrB,KAA3B,CAAD;AAJ1B,GAAP;AAMD;;AAED,eAAe9B,OAAO,CACpB2C,eADoB,EAEpBI,kBAFoB,CAAP,CAGb5C,oBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\n\r\nclass CreateFeedbacktModal extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var singleData = this.props.singleResponseData;\r\n    var isDisabled = false;\r\n    if (singleData === '') {\r\n      isDisabled = false;\r\n    } else {\r\n      isDisabled = true;\r\n    }\r\n    var feedbackInfoArea;\r\n    var emailCheck;\r\n    var actionButton;\r\n    var feedbackToCreate = {\r\n      client: singleData,\r\n      feedbackTitle: '',\r\n      feedbackText: '',\r\n      isVerify: false,\r\n      createdOn: new Date(),\r\n    };\r\n\r\n    actionButton = (\r\n      <div className=\"confirmUserInfo\">\r\n        <div>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              console.log(Date.now());\r\n              // feedbackToCreate.createdOn = Date.now();\r\n              this.props.setCreateModalState();\r\n              this.props.onCreate('feedbacksPage', feedbackToCreate);\r\n            }}\r\n          >\r\n            Create feedback\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    emailCheck = (\r\n      <div className=\"profileTextItem\">\r\n        <div className=\"profileTextItem-right\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email...\"\r\n            onChange={(e) => {\r\n              data.clients.forEach((client) => {\r\n                if (client.email === e.target.value)\r\n                  feedbackToCreate.client = this.props.getByEmail(client.email);\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    feedbackInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Title</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title...\"\r\n              onChange={(e) => {\r\n                feedbackToCreate.feedbackTitle = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Text:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"feedbackBodyText\"\r\n              placeholder=\"Text...\"\r\n              onChange={(e) => {\r\n                feedbackToCreate.feedbackText = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (isDisabled) {\r\n      return (\r\n        <Modal\r\n          styles={{\r\n            modal: {\r\n              maxWidth: 'fit-content',\r\n              background: '#6c3636',\r\n              fontFamily: 'Play',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n              border: '6px solid #f7f6f6',\r\n              borderRadius: '10px',\r\n            },\r\n          }}\r\n          open={this.props.createModalOpen}\r\n          center={true}\r\n          showCloseIcon={false}\r\n          onOverlayClick={this.props.setCreateModalState}\r\n        >\r\n          <>\r\n            <p className=\"title\">New feedback</p>\r\n            <div className=\"profileBody\">{feedbackInfoArea}</div>\r\n            {actionButton}\r\n          </>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      return (\r\n        <Modal\r\n          styles={{\r\n            modal: {\r\n              maxWidth: 'fit-content',\r\n              background: '#6c3636',\r\n              fontFamily: 'Play',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n              border: '6px solid #f7f6f6',\r\n              borderRadius: '10px',\r\n            },\r\n          }}\r\n          open={this.props.createModalOpen}\r\n          center={true}\r\n          showCloseIcon={false}\r\n          onOverlayClick={this.props.setCreateModalState}\r\n        >\r\n          <>\r\n            <p className=\"emailCheckMessage\">\r\n              Please, enter the email of your own account...\r\n            </p>\r\n            <div className=\"profileBody\">{emailCheck}</div>\r\n          </>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    onCreate: (activeMenu, data) =>\r\n      dispatch(actions.CreateFeedback(activeMenu, data)),\r\n    getByEmail: (email) => dispatch(actions.FetchClientByEmail(email)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateFeedbacktModal);\r\n"]},"metadata":{},"sourceType":"module"}