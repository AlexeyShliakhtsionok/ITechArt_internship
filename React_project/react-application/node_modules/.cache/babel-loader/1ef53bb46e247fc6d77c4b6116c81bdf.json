{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\EmployeesNew.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EmployeeList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\n        // eslint-disable-next-line no-loop-func\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"profileCardBody\",\n          id: this.props.responseDataList.employees[i].employeeId,\n          onClick: () => {\n            this.props.setActiveId(this.props.responseDataList.employees[i].employeeId);\n            this.props.getEmployee(this.props.responseDataList.employees[i].employeeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n            this.props.getProfilePhotoByEmployeeId(this.props.responseDataList.employees[i].employeeId);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileCardInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name:\", ' ', this.props.responseDataList.employees[i].firstName + ' ' + this.props.responseDataList.employees[i].lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileCardPhoto\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: this.props.responseDataList.employees[i].mediaFiles[0],\n                alt: \"../../../public/images/gallery.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, this.props.responseDataList.employees[i].employeeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n          },\n          children: \"New employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CreateEmployeeModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UpdateEmployeeModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    getEmployee: (id, activeMenu) => dispatch(actions.FetchSingleData(id, activeMenu)),\n    getProfilePhotoByEmployeeId: id => dispatch(actions.GetProfilePhotoByEmployeeId(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/EmployeesNew.js"],"names":["React","connect","actions","CreateEmployeeModal","UpdateEmployeeModal","EmployeeList","PureComponent","render","props","responseDataList","elements","element","i","employees","length","employeeId","setActiveId","getEmployee","activeMenu","setUpdateModalState","getProfilePhotoByEmployeeId","firstName","lastName","mediaFiles","concat","setCreateModalState","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetUpdateModalState","SetCreateModalState","id","SetActiveIdentifier","FetchSingleData","GetProfilePhotoByEmployeeId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\r\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\r\n\r\nclass EmployeeList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n\r\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\r\n        // eslint-disable-next-line no-loop-func\r\n        element = '';\r\n        element = (\r\n          <dir\r\n            className=\"profileCardBody\"\r\n            key={this.props.responseDataList.employees[i].employeeId}\r\n            id={this.props.responseDataList.employees[i].employeeId}\r\n            onClick={() => {\r\n              this.props.setActiveId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n              this.props.getEmployee(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n                this.props.activeMenu,\r\n              );\r\n              this.props.setUpdateModalState();\r\n              this.props.getProfilePhotoByEmployeeId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"profileCardInfo\">\r\n              <p>\r\n                Name:{' '}\r\n                {this.props.responseDataList.employees[i].firstName +\r\n                  ' ' +\r\n                  this.props.responseDataList.employees[i].lastName}\r\n              </p>\r\n              <div className=\"profileCardPhoto\">\r\n                <img\r\n                  src={this.props.responseDataList.employees[i].mediaFiles[0]}\r\n                  alt=\"../../../public/images/gallery.png\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </dir>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n            }}\r\n          >\r\n            New employee\r\n          </button>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              <tbody>{elements}</tbody>\r\n              <CreateEmployeeModal />\r\n              <UpdateEmployeeModal />\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    getEmployee: (id, activeMenu) =>\r\n      dispatch(actions.FetchSingleData(id, activeMenu)),\r\n    getProfilePhotoByEmployeeId: (id) =>\r\n      dispatch(actions.GetProfilePhotoByEmployeeId(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\r\n"]},"metadata":{},"sourceType":"module"}