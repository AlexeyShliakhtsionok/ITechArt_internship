{"ast":null,"code":"export default function EmployeeListChange(employeesResponsData, objectToCreate, employeeList) {\n  employeesResponsData.forEach(element => {\n    if (objectToCreate.procedure.procedureId === element.procedure.procedureId) employeeList.push({\n      value: element.employeeId,\n      label: element.firstName + ' ' + element.lastName\n    });\n  });\n  return employeeList;\n} // this.props.responseDataList.employees.forEach((element) => {\n//     if (\n//       orderToCreate.procedure.procedureId ===\n//       element.procedure.procedureId\n//     )\n//       employeeList.push({\n//         value: element.employeeId,\n//         label: element.firstName + ' ' + element.lastName,\n//       });\n//   });\n\n_c = EmployeeListChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeListChange\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Functions/employeeListChange.js"],"names":["EmployeeListChange","employeesResponsData","objectToCreate","employeeList","forEach","element","procedure","procedureId","push","value","employeeId","label","firstName","lastName"],"mappings":"AAAA,eAAe,SAASA,kBAAT,CACbC,oBADa,EAEbC,cAFa,EAGbC,YAHa,EAIb;AACAF,EAAAA,oBAAoB,CAACG,OAArB,CAA8BC,OAAD,IAAa;AACxC,QAAIH,cAAc,CAACI,SAAf,CAAyBC,WAAzB,KAAyCF,OAAO,CAACC,SAAR,CAAkBC,WAA/D,EACEJ,YAAY,CAACK,IAAb,CAAkB;AAChBC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,UADC;AAEhBC,MAAAA,KAAK,EAAEN,OAAO,CAACO,SAAR,GAAoB,GAApB,GAA0BP,OAAO,CAACQ;AAFzB,KAAlB;AAIH,GAND;AAOA,SAAOV,YAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAxBwBH,kB","sourcesContent":["export default function EmployeeListChange(\r\n  employeesResponsData,\r\n  objectToCreate,\r\n  employeeList,\r\n) {\r\n  employeesResponsData.forEach((element) => {\r\n    if (objectToCreate.procedure.procedureId === element.procedure.procedureId)\r\n      employeeList.push({\r\n        value: element.employeeId,\r\n        label: element.firstName + ' ' + element.lastName,\r\n      });\r\n  });\r\n  return employeeList;\r\n}\r\n\r\n// this.props.responseDataList.employees.forEach((element) => {\r\n//     if (\r\n//       orderToCreate.procedure.procedureId ===\r\n//       element.procedure.procedureId\r\n//     )\r\n//       employeeList.push({\r\n//         value: element.employeeId,\r\n//         label: element.firstName + ' ' + element.lastName,\r\n//       });\r\n//   });\r\n"]},"metadata":{},"sourceType":"module"}