{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Materials.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\nimport CreateMaterialModal from '../ModalWindowsComponents/CreateMaterialModal.js';\nimport UpdateMaterialModal from '../ModalWindowsComponents/UpdateMaterialModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MaterialsList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Productiond date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Best before date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manufacturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.responseDataList.materials.length; i++) {\n        var date = this.props.responseDataList.materials[i].productionDate.substr(0, 10);\n        var time = this.props.responseDataList.materials[i].productionDate.substr(11, 5);\n        var manufacturer;\n        this.props.responseDataList.manufacturerSelectList.forEach( // eslint-disable-next-line no-loop-func\n        element => {\n          if (element.value == this.props.responseDataList.materials[i].materialManufacturer.manufacturerId) {\n            manufacturer = element.text;\n          }\n        });\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: this.props.responseDataList.materials[i].materialId,\n          onClick: () => {\n            this.props.setActiveId(this.props.responseDataList.materials[i].materialId);\n            this.props.getMaterial(this.props.responseDataList.materials[i].materialId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.materials[i].materialName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.materials[i].materialAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.materials[i].productionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.materials[i].bestBeforeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: manufacturer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, this.props.responseDataList.materials[i].materialId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n          },\n          children: \"Add new material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateMaterialModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UpdateMaterialModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    setActiveId: id => dispatch(SetActiveIdentifier(id)),\n    getMaterial: (id, activeMenu) => dispatch(actions.FetchSingleData(id, activeMenu))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Materials.js"],"names":["React","connect","actions","SetActiveIdentifier","CreateMaterialModal","UpdateMaterialModal","MaterialsList","PureComponent","render","props","responseDataList","elements","element","header","i","materials","length","date","productionDate","substr","time","manufacturer","manufacturerSelectList","forEach","value","materialManufacturer","manufacturerId","text","materialId","setActiveId","getMaterial","activeMenu","setUpdateModalState","materialName","materialAmount","bestBeforeDate","concat","setCreateModalState","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetUpdateModalState","SetCreateModalState","id","FetchSingleData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\r\nimport CreateMaterialModal from '../ModalWindowsComponents/CreateMaterialModal.js';\r\nimport UpdateMaterialModal from '../ModalWindowsComponents/UpdateMaterialModal.js';\r\n\r\nclass MaterialsList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Amount</th>\r\n            <th>Productiond date</th>\r\n            <th>Best before date</th>\r\n            <th>Manufacturer</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.responseDataList.materials.length; i++) {\r\n        var date = this.props.responseDataList.materials[\r\n          i\r\n        ].productionDate.substr(0, 10);\r\n        var time = this.props.responseDataList.materials[\r\n          i\r\n        ].productionDate.substr(11, 5);\r\n        var manufacturer;\r\n        this.props.responseDataList.manufacturerSelectList.forEach(\r\n          // eslint-disable-next-line no-loop-func\r\n          (element) => {\r\n            if (\r\n              element.value ==\r\n              this.props.responseDataList.materials[i].materialManufacturer\r\n                .manufacturerId\r\n            ) {\r\n              manufacturer = element.text;\r\n            }\r\n          },\r\n        );\r\n\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={this.props.responseDataList.materials[i].materialId}\r\n            id={this.props.responseDataList.materials[i].materialId}\r\n            onClick={() => {\r\n              this.props.setActiveId(\r\n                this.props.responseDataList.materials[i].materialId,\r\n              );\r\n              this.props.getMaterial(\r\n                this.props.responseDataList.materials[i].materialId,\r\n                this.props.activeMenu,\r\n              );\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            <td>{this.props.responseDataList.materials[i].materialName}</td>\r\n            <td>{this.props.responseDataList.materials[i].materialAmount}</td>\r\n            <td>{this.props.responseDataList.materials[i].productionDate}</td>\r\n            <td>{this.props.responseDataList.materials[i].bestBeforeDate}</td>\r\n            <td>{manufacturer}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n            }}\r\n          >\r\n            Add new material\r\n          </button>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n            <CreateMaterialModal />\r\n            <UpdateMaterialModal />\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n    getMaterial: (id, activeMenu) =>\r\n      dispatch(actions.FetchSingleData(id, activeMenu)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsList);\r\n"]},"metadata":{},"sourceType":"module"}