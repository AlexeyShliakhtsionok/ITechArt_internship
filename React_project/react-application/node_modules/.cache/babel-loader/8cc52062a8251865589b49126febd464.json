{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateOrderModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css'; // import '../../style.css';\n\nimport { Modal } from 'react-responsive-modal';\nimport { SetCreateModalState, AddData, GetProceduresByType, GetEmployeesByProcedureType } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateOrderModal extends React.PureComponent {\n  render() {\n    var orderInfoArea;\n    var actionButtons;\n    var orderToCreate = {\n      dateOfService: '',\n      client: '',\n      procedure: '',\n      employee: ''\n    };\n    var clientsList = [];\n    this.props.responseDataList.clients.forEach(element => {\n      clientsList.push({\n        value: element.clientId,\n        label: element.firstName + ' ' + element.lastName\n      });\n    });\n    var procedureTypesList = [];\n    this.props.responseDataList.procedureTypes.forEach(element => {\n      procedureTypesList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var procedureList = [];\n\n    if (this.props.procedures !== '') {\n      this.props.procedures.forEach(element => {\n        procedureList.push({\n          value: element.procedureId,\n          label: element.procedureName\n        });\n      });\n    }\n\n    var employeeList = [];\n\n    if (this.props.employees !== '') {\n      this.props.employees.forEach(element => {\n        employeeList.push({\n          value: element.employeeId,\n          label: element.firstName + ' ' + element.lastName\n        });\n      });\n    }\n\n    actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n            this.props.onCreate(this.props.activeMenu, orderToCreate);\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n    orderInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date of service:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"Date...\",\n            onChange: e => {\n              orderToCreate.dateOfService = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ClientName:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            maxMenuHeight: 100,\n            options: clientsList,\n            onChange: data => {\n              this.props.responseDataList.clients.forEach(client => {\n                if (client.clientId == data.value) orderToCreate.client = client;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            maxMenuHeight: 100,\n            options: procedureTypesList,\n            onChange: data => {\n              let test = document.getElementById('test');\n              console.log(test);\n              console.log(test.getAttribute('value'));\n              test.setAttribute.value = null;\n              this.props.getProcedures(data.value);\n              this.props.getEmployees(data.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            isDisabled: this.props.procedureInputStatus,\n            maxMenuHeight: 100,\n            onChange: data => {\n              this.props.procedures.forEach(procedure => {\n                if (procedure.procedureId == data.value) orderToCreate.procedure = procedure;\n              });\n            },\n            options: procedureList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Employee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            id: \"test\",\n            isDisabled: this.props.procedureInputStatus,\n            maxMenuHeight: 100,\n            onChange: data => {\n              this.props.employees.forEach(employee => {\n                if (employee.employeeId == data.value) orderToCreate.employee = employee;\n              });\n            },\n            options: employeeList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Time of service:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            isDisabled: this.props.procedureInputStatus,\n            maxMenuHeight: 100,\n            onChange: data => {\n              orderToCreate.dateOfService = data;\n            } // options={timeList}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          fontSize: '45px',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: orderInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    procedures: state.procedures,\n    employees: state.employees,\n    procedureInputStatus: state.procedureInputStatus\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCreateModalState: () => dispatch(SetCreateModalState()),\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data)),\n    getProcedures: typeId => dispatch(GetProceduresByType(typeId)),\n    getEmployees: typeId => dispatch(GetEmployeesByProcedureType(typeId))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrderModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateOrderModal.js"],"names":["React","connect","Modal","SetCreateModalState","AddData","GetProceduresByType","GetEmployeesByProcedureType","Select","CreateOrderModal","PureComponent","render","orderInfoArea","actionButtons","orderToCreate","dateOfService","client","procedure","employee","clientsList","props","responseDataList","clients","forEach","element","push","value","clientId","label","firstName","lastName","procedureTypesList","procedureTypes","text","procedureList","procedures","procedureId","procedureName","employeeList","employees","employeeId","setCreateModalState","onCreate","activeMenu","e","target","data","test","document","getElementById","console","log","getAttribute","setAttribute","getProcedures","getEmployees","procedureInputStatus","modal","background","padding","fontFamily","alignItems","textAlign","fontSize","border","borderRadius","createModalOpen","mapStateToProps","state","singleResponseData","activeId","mapDispatchToProps","dispatch","typeId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\n// import '../../style.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetCreateModalState,\r\n  AddData,\r\n  GetProceduresByType,\r\n  GetEmployeesByProcedureType,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass CreateOrderModal extends React.PureComponent {\r\n  render() {\r\n    var orderInfoArea;\r\n    var actionButtons;\r\n    var orderToCreate = {\r\n      dateOfService: '',\r\n      client: '',\r\n      procedure: '',\r\n      employee: '',\r\n    };\r\n\r\n    var clientsList = [];\r\n    this.props.responseDataList.clients.forEach((element) => {\r\n      clientsList.push({\r\n        value: element.clientId,\r\n        label: element.firstName + ' ' + element.lastName,\r\n      });\r\n    });\r\n\r\n    var procedureTypesList = [];\r\n    this.props.responseDataList.procedureTypes.forEach((element) => {\r\n      procedureTypesList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n\r\n    var procedureList = [];\r\n    if (this.props.procedures !== '') {\r\n      this.props.procedures.forEach((element) => {\r\n        procedureList.push({\r\n          value: element.procedureId,\r\n          label: element.procedureName,\r\n        });\r\n      });\r\n    }\r\n\r\n    var employeeList = [];\r\n    if (this.props.employees !== '') {\r\n      this.props.employees.forEach((element) => {\r\n        employeeList.push({\r\n          value: element.employeeId,\r\n          label: element.firstName + ' ' + element.lastName,\r\n        });\r\n      });\r\n    }\r\n\r\n    actionButtons = (\r\n      <div className=\"confirmUserInfo\">\r\n        <div>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n              this.props.onCreate(this.props.activeMenu, orderToCreate);\r\n            }}\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    orderInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Date of service:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Date...\"\r\n              onChange={(e) => {\r\n                orderToCreate.dateOfService = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>ClientName:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              maxMenuHeight={100}\r\n              options={clientsList}\r\n              onChange={(data) => {\r\n                this.props.responseDataList.clients.forEach((client) => {\r\n                  if (client.clientId == data.value)\r\n                    orderToCreate.client = client;\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure type:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              maxMenuHeight={100}\r\n              options={procedureTypesList}\r\n              onChange={(data) => {\r\n                let test = document.getElementById('test');\r\n                console.log(test);\r\n                console.log(test.getAttribute('value'));\r\n                test.setAttribute.value = null;\r\n                this.props.getProcedures(data.value);\r\n                this.props.getEmployees(data.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              isDisabled={this.props.procedureInputStatus}\r\n              maxMenuHeight={100}\r\n              onChange={(data) => {\r\n                this.props.procedures.forEach((procedure) => {\r\n                  if (procedure.procedureId == data.value)\r\n                    orderToCreate.procedure = procedure;\r\n                });\r\n              }}\r\n              options={procedureList}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Employee:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              id=\"test\"\r\n              isDisabled={this.props.procedureInputStatus}\r\n              maxMenuHeight={100}\r\n              onChange={(data) => {\r\n                this.props.employees.forEach((employee) => {\r\n                  if (employee.employeeId == data.value)\r\n                    orderToCreate.employee = employee;\r\n                });\r\n              }}\r\n              options={employeeList}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Time of service:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              isDisabled={this.props.procedureInputStatus}\r\n              maxMenuHeight={100}\r\n              onChange={(data) => {\r\n                orderToCreate.dateOfService = data;\r\n              }}\r\n              // options={timeList}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            fontSize: '45px',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{orderInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    procedures: state.procedures,\r\n    employees: state.employees,\r\n    procedureInputStatus: state.procedureInputStatus,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCreateModalState: () => dispatch(SetCreateModalState()),\r\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data)),\r\n    getProcedures: (typeId) => dispatch(GetProceduresByType(typeId)),\r\n    getEmployees: (typeId) => dispatch(GetEmployeesByProcedureType(typeId)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrderModal);\r\n"]},"metadata":{},"sourceType":"module"}