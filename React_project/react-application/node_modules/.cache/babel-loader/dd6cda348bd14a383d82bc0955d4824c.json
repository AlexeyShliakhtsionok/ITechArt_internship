{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateEmployeeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetUpdateModalState, SetEditState, DeleteData, UpdateData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport testImage from '../../temporaryFiles/example3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  render() {\n    var date = this.props.singleResponseData.hireDate;\n    var firstName = this.props.singleResponseData.firstName;\n    var lastName = this.props.singleResponseData.lastName;\n    var phone = this.props.singleResponseData.phoneNumber;\n    var email = this.props.singleResponseData.email;\n    var qualification;\n    this.props.responseDataList.qualification.forEach(element => {\n      if (element.value === this.props.singleResponseData.qualification) qualification = element.name;\n    });\n    var role;\n    this.props.responseDataList.roles.forEach(element => {\n      if (element.value === this.props.singleResponseData.role) role = element.name;\n    });\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: this.props.activeId,\n      firstName: this.props.singleResponseData.firstName,\n      lastName: this.props.singleResponseData.lastName,\n      phoneNumber: this.props.singleResponseData.phoneNumber,\n      password: this.props.singleResponseData.password,\n      email: this.props.singleResponseData.email,\n      procedureType: this.props.singleResponseData.procedureType,\n      qualification: this.props.singleResponseData.qualification,\n      role: this.props.singleResponseData.role,\n      hireDate: this.props.singleResponseData.hireDate,\n      profile: this.props.singleResponseData.profile,\n      profileId: this.props.singleResponseData.profileId,\n      orders: null\n    };\n    var roles = [];\n    this.props.responseDataList.roles.forEach(element => {\n      roles.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    roles.forEach(element => {\n      if (element.value === qualification) qualification = element.value;\n    });\n    var procedureTypesSL = [];\n    this.props.responseDataList.procedureTypesSelectList.forEach(element => {\n      procedureTypesSL.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var qualifications = [];\n    this.props.responseDataList.qualification.forEach(element => {\n      qualifications.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First name: \", firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last name: \", lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hired: \", date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone: \", phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ProcedureType: \", procedureType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Qualification: \", qualification]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Role: \", role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: firstName,\n              onChange: e => {\n                employeeToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: lastName,\n              onChange: e => {\n                employeeToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hired:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: date,\n              onChange: e => {\n                employeeToUpdate.hireDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              defaultValue: phone,\n              onChange: e => {\n                employeeToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              defaultValue: email,\n              onChange: e => {\n                employeeToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                employeeToUpdate.role = data.value;\n              },\n              options: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ProcedureType:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: procedureTypesSL,\n              onChange: data => {\n                this.props.responseDataList.procedureTypes.forEach(element => {\n                  if (element.procedureTypeName === data.label) {\n                    employeeToUpdate.procedureType = element;\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Qualification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: qualifications,\n              onChange: data => {\n                employeeToUpdate.qualification = data.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          fontSize: '45px',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilePhoto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: testImage,\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), employeeInfoArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: (id, menu) => {\n      dispatch(DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateEmployeeModal.js"],"names":["React","connect","Modal","SetUpdateModalState","SetEditState","DeleteData","UpdateData","Select","testImage","UpdateEmployeeModal","PureComponent","render","date","props","singleResponseData","hireDate","firstName","lastName","phone","phoneNumber","email","qualification","responseDataList","forEach","element","value","name","role","roles","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","activeId","password","procedureType","profile","profileId","orders","push","label","procedureTypesSL","procedureTypesSelectList","text","qualifications","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","onUpdate","e","target","data","procedureTypes","procedureTypeName","modal","background","padding","fontFamily","alignItems","textAlign","fontSize","border","borderRadius","updateModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","id","menu"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SACEC,mBADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,gCALP;AAMA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;;;AAEA,MAAMC,mBAAN,SAAkCT,KAAK,CAACU,aAAxC,CAAsD;AACpDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,kBAAX,CAA8BC,QAAzC;AACA,QAAIC,SAAS,GAAG,KAAKH,KAAL,CAAWC,kBAAX,CAA8BE,SAA9C;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWC,kBAAX,CAA8BG,QAA7C;AACA,QAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWC,kBAAX,CAA8BK,WAA1C;AACA,QAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWC,kBAAX,CAA8BM,KAA1C;AACA,QAAIC,aAAJ;AACA,SAAKR,KAAL,CAAWS,gBAAX,CAA4BD,aAA5B,CAA0CE,OAA1C,CAAmDC,OAAD,IAAa;AAC7D,UAAIA,OAAO,CAACC,KAAR,KAAkB,KAAKZ,KAAL,CAAWC,kBAAX,CAA8BO,aAApD,EACEA,aAAa,GAAGG,OAAO,CAACE,IAAxB;AACH,KAHD;AAIA,QAAIC,IAAJ;AACA,SAAKd,KAAL,CAAWS,gBAAX,CAA4BM,KAA5B,CAAkCL,OAAlC,CAA2CC,OAAD,IAAa;AACrD,UAAIA,OAAO,CAACC,KAAR,KAAkB,KAAKZ,KAAL,CAAWC,kBAAX,CAA8Ba,IAApD,EACEA,IAAI,GAAGH,OAAO,CAACE,IAAf;AACH,KAHD;AAIA,QAAIG,gBAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,gBAAgB,GAAG;AACrBC,MAAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWoB,QADF;AAErBjB,MAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,kBAAX,CAA8BE,SAFpB;AAGrBC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,kBAAX,CAA8BG,QAHnB;AAIrBE,MAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,kBAAX,CAA8BK,WAJtB;AAKrBe,MAAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,kBAAX,CAA8BoB,QALnB;AAMrBd,MAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,kBAAX,CAA8BM,KANhB;AAOrBe,MAAAA,aAAa,EAAE,KAAKtB,KAAL,CAAWC,kBAAX,CAA8BqB,aAPxB;AAQrBd,MAAAA,aAAa,EAAE,KAAKR,KAAL,CAAWC,kBAAX,CAA8BO,aARxB;AASrBM,MAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,kBAAX,CAA8Ba,IATf;AAUrBZ,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,kBAAX,CAA8BC,QAVnB;AAWrBqB,MAAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,kBAAX,CAA8BsB,OAXlB;AAYrBC,MAAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWC,kBAAX,CAA8BuB,SAZpB;AAarBC,MAAAA,MAAM,EAAE;AAba,KAAvB;AAgBA,QAAIV,KAAK,GAAG,EAAZ;AACA,SAAKf,KAAL,CAAWS,gBAAX,CAA4BM,KAA5B,CAAkCL,OAAlC,CAA2CC,OAAD,IAAa;AACrDI,MAAAA,KAAK,CAACW,IAAN,CAAW;AAAEd,QAAAA,KAAK,EAAED,OAAO,CAACC,KAAjB;AAAwBe,QAAAA,KAAK,EAAEhB,OAAO,CAACE;AAAvC,OAAX;AACD,KAFD;AAIAE,IAAAA,KAAK,CAACL,OAAN,CAAeC,OAAD,IAAa;AACzB,UAAIA,OAAO,CAACC,KAAR,KAAkBJ,aAAtB,EAAqCA,aAAa,GAAGG,OAAO,CAACC,KAAxB;AACtC,KAFD;AAIA,QAAIgB,gBAAgB,GAAG,EAAvB;AACA,SAAK5B,KAAL,CAAWS,gBAAX,CAA4BoB,wBAA5B,CAAqDnB,OAArD,CAA8DC,OAAD,IAAa;AACxEiB,MAAAA,gBAAgB,CAACF,IAAjB,CAAsB;AAAEd,QAAAA,KAAK,EAAED,OAAO,CAACC,KAAjB;AAAwBe,QAAAA,KAAK,EAAEhB,OAAO,CAACmB;AAAvC,OAAtB;AACD,KAFD;AAIA,QAAIC,cAAc,GAAG,EAArB;AACA,SAAK/B,KAAL,CAAWS,gBAAX,CAA4BD,aAA5B,CAA0CE,OAA1C,CAAmDC,OAAD,IAAa;AAC7DoB,MAAAA,cAAc,CAACL,IAAf,CAAoB;AAAEd,QAAAA,KAAK,EAAED,OAAO,CAACC,KAAjB;AAAwBe,QAAAA,KAAK,EAAEhB,OAAO,CAACE;AAAvC,OAApB;AACD,KAFD;;AAIA,QAAI,CAAC,KAAKb,KAAL,CAAWgC,SAAhB,EAA2B;AACzBf,MAAAA,aAAa,gBACX;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWiC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKjC,KAAL,CAAWkC,QAAX,CAAoB,KAAKlC,KAAL,CAAWoB,QAA/B,EAAyC,KAAKpB,KAAL,CAAWmC,UAApD;AACA,iBAAKnC,KAAL,CAAWoC,mBAAX;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBApB,MAAAA,gBAAgB,gBACd;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,uCAAgBb,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,sCAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,kCAAWL,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAaE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,kCAAWM,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF,eAiBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,kCAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAqBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,0CAAmBe,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF,eAyBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,0CAAmBd,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA6BE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAA,iCAAUM,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAmCD,KArDD,MAqDO;AACLG,MAAAA,aAAa,gBACX;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACb,mBAAKjB,KAAL,CAAWiC,MAAX;AACA,mBAAKjC,KAAL,CAAWoC,mBAAX;AACA,mBAAKpC,KAAL,CAAWqC,QAAX,CAAoB,KAAKrC,KAAL,CAAWmC,UAA/B,EAA2CjB,gBAA3C;AACD,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAoBAF,MAAAA,gBAAgB,gBACd;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,YAAY,EAAEb,SAFhB;AAGE,cAAA,QAAQ,EAAGmC,CAAD,IAAO;AACfpB,gBAAAA,gBAAgB,CAACf,SAAjB,GAA6BmC,CAAC,CAACC,MAAF,CAAS3B,KAAtC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,YAAY,EAAER,QAFhB;AAGE,cAAA,QAAQ,EAAGkC,CAAD,IAAO;AACfpB,gBAAAA,gBAAgB,CAACd,QAAjB,GAA4BkC,CAAC,CAACC,MAAF,CAAS3B,KAArC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA+BE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,YAAY,EAAEb,IAFhB;AAGE,cAAA,QAAQ,EAAGuC,CAAD,IAAO;AACfpB,gBAAAA,gBAAgB,CAAChB,QAAjB,GAA4BoC,CAAC,CAACC,MAAF,CAAS3B,KAArC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,eA8CE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,YAAY,EAAEP,KAFhB;AAGE,cAAA,QAAQ,EAAGiC,CAAD,IAAO;AACfpB,gBAAAA,gBAAgB,CAACZ,WAAjB,GAA+BgC,CAAC,CAACC,MAAF,CAAS3B,KAAxC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CF,eA6DE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,YAAY,EAAEL,KAFhB;AAGE,cAAA,QAAQ,EAAG+B,CAAD,IAAO;AACfpB,gBAAAA,gBAAgB,CAACX,KAAjB,GAAyB+B,CAAC,CAACC,MAAF,CAAS3B,KAAlC;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DF,eA4EE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,QAAQ,EAAG4B,IAAD,IAAU;AAClBtB,gBAAAA,gBAAgB,CAACJ,IAAjB,GAAwB0B,IAAI,CAAC5B,KAA7B;AACD,eAHH;AAIE,cAAA,OAAO,EAAEG;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5EF,eA0FE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAEa,gBADX;AAEE,cAAA,QAAQ,EAAGY,IAAD,IAAU;AAClB,qBAAKxC,KAAL,CAAWS,gBAAX,CAA4BgC,cAA5B,CAA2C/B,OAA3C,CACGC,OAAD,IAAa;AACX,sBAAIA,OAAO,CAAC+B,iBAAR,KAA8BF,IAAI,CAACb,KAAvC,EAA8C;AAC5CT,oBAAAA,gBAAgB,CAACI,aAAjB,GAAiCX,OAAjC;AACD;AACF,iBALH;AAOD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1FF,eA8GE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAEoB,cADX;AAEE,cAAA,QAAQ,EAAGS,IAAD,IAAU;AAClBtB,gBAAAA,gBAAgB,CAACV,aAAjB,GAAiCgC,IAAI,CAAC5B,KAAtC;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9GF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA8HD;;AAED,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACN+B,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,OADP;AAELC,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,UAAU,EAAE,MAHP;AAILC,UAAAA,UAAU,EAAE,QAJP;AAKLC,UAAAA,SAAS,EAAE,QALN;AAMLC,UAAAA,QAAQ,EAAE,MANL;AAOLC,UAAAA,MAAM,EAAE,iBAPH;AAQLC,UAAAA,YAAY,EAAE;AART;AADD,OADV;AAaE,MAAA,IAAI,EAAE,KAAKnD,KAAL,CAAWoD,eAbnB;AAcE,MAAA,MAAM,EAAE,IAdV;AAeE,MAAA,aAAa,EAAE,KAfjB;AAgBE,MAAA,cAAc,EAAE,KAAKpD,KAAL,CAAWoC,mBAhB7B;AAAA,6BAkBE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEzC,SAAV;AAAqB,cAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGqB,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGC,aAPH;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AA9RmD;;AAiStD,SAASoC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACF,eADlB;AAEL3C,IAAAA,gBAAgB,EAAE6C,KAAK,CAAC7C,gBAFnB;AAGLR,IAAAA,kBAAkB,EAAEqD,KAAK,CAACrD,kBAHrB;AAIL+B,IAAAA,SAAS,EAAEsB,KAAK,CAACtB,SAJZ;AAKLZ,IAAAA,QAAQ,EAAEkC,KAAK,CAAClC,QALX;AAMLe,IAAAA,UAAU,EAAEmB,KAAK,CAACnB;AANb,GAAP;AAQD;;AAED,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLpB,IAAAA,mBAAmB,EAAE,MAAMoB,QAAQ,CAAClE,mBAAmB,EAApB,CAD9B;AAEL2C,IAAAA,MAAM,EAAE,MAAMuB,QAAQ,CAACjE,YAAY,EAAb,CAFjB;AAGL2C,IAAAA,QAAQ,EAAE,CAACuB,EAAD,EAAKC,IAAL,KAAc;AACtBF,MAAAA,QAAQ,CAAChE,UAAU,CAACiE,EAAD,EAAKC,IAAL,CAAX,CAAR;AACD,KALI;AAMLrB,IAAAA,QAAQ,EAAE,CAACF,UAAD,EAAaK,IAAb,KAAsBgB,QAAQ,CAAC/D,UAAU,CAAC0C,UAAD,EAAaK,IAAb,CAAX;AANnC,GAAP;AAQD;;AAED,eAAepD,OAAO,CACpBiE,eADoB,EAEpBE,kBAFoB,CAAP,CAGb3D,mBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetUpdateModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n  UpdateData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\nimport testImage from '../../temporaryFiles/example3.jpg';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  render() {\r\n    var date = this.props.singleResponseData.hireDate;\r\n    var firstName = this.props.singleResponseData.firstName;\r\n    var lastName = this.props.singleResponseData.lastName;\r\n    var phone = this.props.singleResponseData.phoneNumber;\r\n    var email = this.props.singleResponseData.email;\r\n    var qualification;\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.qualification)\r\n        qualification = element.name;\r\n    });\r\n    var role;\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.role)\r\n        role = element.name;\r\n    });\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: this.props.activeId,\r\n      firstName: this.props.singleResponseData.firstName,\r\n      lastName: this.props.singleResponseData.lastName,\r\n      phoneNumber: this.props.singleResponseData.phoneNumber,\r\n      password: this.props.singleResponseData.password,\r\n      email: this.props.singleResponseData.email,\r\n      procedureType: this.props.singleResponseData.procedureType,\r\n      qualification: this.props.singleResponseData.qualification,\r\n      role: this.props.singleResponseData.role,\r\n      hireDate: this.props.singleResponseData.hireDate,\r\n      profile: this.props.singleResponseData.profile,\r\n      profileId: this.props.singleResponseData.profileId,\r\n      orders: null,\r\n    };\r\n\r\n    var roles = [];\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      roles.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    roles.forEach((element) => {\r\n      if (element.value === qualification) qualification = element.value;\r\n    });\r\n\r\n    var procedureTypesSL = [];\r\n    this.props.responseDataList.procedureTypesSelectList.forEach((element) => {\r\n      procedureTypesSL.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    var qualifications = [];\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      qualifications.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <p>First name: {firstName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Last name: {lastName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Hired: {date}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Phone: {phone}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Email: {email}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>ProcedureType: {procedureType}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Qualification: {qualification}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Role: {role}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <input type=\"file\" />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={firstName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={lastName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Hired:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={date}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.hireDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                defaultValue={phone}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                defaultValue={email}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Role:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  employeeToUpdate.role = data.value;\r\n                }}\r\n                options={roles}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>ProcedureType:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={procedureTypesSL}\r\n                onChange={(data) => {\r\n                  this.props.responseDataList.procedureTypes.forEach(\r\n                    (element) => {\r\n                      if (element.procedureTypeName === data.label) {\r\n                        employeeToUpdate.procedureType = element;\r\n                      }\r\n                    },\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Qualification:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={qualifications}\r\n                onChange={(data) => {\r\n                  employeeToUpdate.qualification = data.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            fontSize: '45px',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">\r\n            <div className=\"profilePhoto\">\r\n              <img src={testImage} alt=\"profile\" />\r\n            </div>\r\n            {employeeInfoArea}\r\n          </div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}