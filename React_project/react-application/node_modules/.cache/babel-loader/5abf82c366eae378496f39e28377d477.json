{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateServiceTypeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateServiceTypeModal extends React.PureComponent {\n  render() {\n    var serviceInfoArea;\n    var actionButtons;\n    var serviceTypeToCreate = {\n      procedureTypeName: ''\n    }; // actionButtons = (\n    //   <div className=\"confirmServiceTypeInfo\">\n    //     <div>\n    //       <button\n    //         className=\"modalButton\"\n    //         onClick={() => {\n    //           this.props.SetProcedureTypeCreateModalState();\n    //           this.props.onCreate(serviceTypeToCreate);\n    //         }}\n    //       >\n    //         Create\n    //       </button>\n    //     </div>\n    //   </div>\n    // );\n    // serviceInfoArea = (\n    //   <div className=\"profileText\">\n    //     <div className=\"profileTextItem\">\n    //       <div className=\"profileTextItem-left\">\n    //         <p>Service type name:</p>\n    //       </div>\n    //       <div className=\"profileTextItem-right\">\n    //         <input\n    //           type=\"text\"\n    //           placeholder=\"Service type name...\"\n    //           onChange={(e) => {\n    //             serviceTypeToCreate.procedureTypeName = e.target.value;\n    //           }}\n    //         />\n    //       </div>\n    //     </div>\n    //   </div>\n    // );\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.SetProcedureTypeCreateModalState,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setServiceTypeCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: serviceInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    SetProcedureTypeCreateModalState: () => dispatch(actions.SetProcedureTypeCreateModalState()),\n    onCreate: data => dispatch(actions.CreateNewProcedureType(data)) // !!!!!!!!!!!!!!!!!!!!!!\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateServiceTypeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateServiceTypeModal.js"],"names":["React","connect","Modal","actions","CreateServiceTypeModal","PureComponent","render","serviceInfoArea","actionButtons","serviceTypeToCreate","procedureTypeName","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","props","SetProcedureTypeCreateModalState","setServiceTypeCreateModalState","mapStateToProps","state","createModalOpen","pagedTablesData","singleResponseData","activeId","activeMenu","mapDispatchToProps","dispatch","onCreate","data","CreateNewProcedureType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;;AAEA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,aAA3C,CAAyD;AACvDC,EAAAA,MAAM,GAAG;AACP,QAAIC,eAAJ;AACA,QAAIC,aAAJ;AACA,QAAIC,mBAAmB,GAAG;AACxBC,MAAAA,iBAAiB,EAAE;AADK,KAA1B,CAHO,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,aADL;AAELC,UAAAA,UAAU,EAAE,SAFP;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,UAAU,EAAE,MAJP;AAKLC,UAAAA,UAAU,EAAE,QALP;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,mBAPH;AAQLC,UAAAA,YAAY,EAAE;AART;AADD,OADV;AAaE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,gCAbnB;AAcE,MAAA,MAAM,EAAE,IAdV;AAeE,MAAA,aAAa,EAAE,KAfjB;AAgBE,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWE,8BAhB7B;AAAA,6BAkBE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8Bf;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGC,aAFH;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AApEsD;;AAuEzD,SAASe,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACC,eADlB;AAELC,IAAAA,eAAe,EAAEF,KAAK,CAACE,eAFlB;AAGLC,IAAAA,kBAAkB,EAAEH,KAAK,CAACG,kBAHrB;AAILC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAJX;AAKLC,IAAAA,UAAU,EAAEL,KAAK,CAACK;AALb,GAAP;AAOD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLV,IAAAA,gCAAgC,EAAE,MAChCU,QAAQ,CAAC5B,OAAO,CAACkB,gCAAR,EAAD,CAFL;AAGLW,IAAAA,QAAQ,EAAGC,IAAD,IAAUF,QAAQ,CAAC5B,OAAO,CAAC+B,sBAAR,CAA+BD,IAA/B,CAAD,CAHvB,CAG+D;;AAH/D,GAAP;AAKD;;AAED,eAAehC,OAAO,CACpBsB,eADoB,EAEpBO,kBAFoB,CAAP,CAGb1B,sBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\n\r\nclass CreateServiceTypeModal extends React.PureComponent {\r\n  render() {\r\n    var serviceInfoArea;\r\n    var actionButtons;\r\n    var serviceTypeToCreate = {\r\n      procedureTypeName: '',\r\n    };\r\n\r\n    // actionButtons = (\r\n    //   <div className=\"confirmServiceTypeInfo\">\r\n    //     <div>\r\n    //       <button\r\n    //         className=\"modalButton\"\r\n    //         onClick={() => {\r\n    //           this.props.SetProcedureTypeCreateModalState();\r\n    //           this.props.onCreate(serviceTypeToCreate);\r\n    //         }}\r\n    //       >\r\n    //         Create\r\n    //       </button>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n\r\n    // serviceInfoArea = (\r\n    //   <div className=\"profileText\">\r\n    //     <div className=\"profileTextItem\">\r\n    //       <div className=\"profileTextItem-left\">\r\n    //         <p>Service type name:</p>\r\n    //       </div>\r\n    //       <div className=\"profileTextItem-right\">\r\n    //         <input\r\n    //           type=\"text\"\r\n    //           placeholder=\"Service type name...\"\r\n    //           onChange={(e) => {\r\n    //             serviceTypeToCreate.procedureTypeName = e.target.value;\r\n    //           }}\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.SetProcedureTypeCreateModalState}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setServiceTypeCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{serviceInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    SetProcedureTypeCreateModalState: () =>\r\n      dispatch(actions.SetProcedureTypeCreateModalState()),\r\n    onCreate: (data) => dispatch(actions.CreateNewProcedureType(data)), // !!!!!!!!!!!!!!!!!!!!!!\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateServiceTypeModal);\r\n"]},"metadata":{},"sourceType":"module"}