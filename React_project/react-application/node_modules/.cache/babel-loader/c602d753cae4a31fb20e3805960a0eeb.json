{"ast":null,"code":"import * as TYPES from './actionTypes'; // Authorization of employees -----------------------------------------------------------------------------\n\nexport function EmployeeAutorization(email, password) {\n  const requestURL = `https://localhost:7275/Employee/GetToken?employeeEmail=${email}&password=${password}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeAutorizationSuccess(data));\n    });\n  };\n}\n_c = EmployeeAutorization;\nexport function ResetActiveMenu() {\n  return {\n    type: TYPES.RESET_ACTIVE_MENU\n  };\n}\n_c2 = ResetActiveMenu;\nexport function EmployeeAutorizationSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\n    payload: data\n  };\n}\n_c3 = EmployeeAutorizationSuccess;\nexport function EmployeeLogout() {\n  return {\n    type: TYPES.EMPLOYEE_LOGOUT\n  };\n} //Active identifier setting------------------------------\n\n_c4 = EmployeeLogout;\nexport function SetActiveIdentifier(id) {\n  return {\n    type: TYPES.ACTIVE_ID_SET,\n    payload: id\n  };\n} // Data fetching -----------------------------------------\n//Get ALL depending on active menu\n\n_c5 = SetActiveIdentifier;\nexport function FeetchAllData(activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = 'https://localhost:7275/Client/GetAllClients';\n      break;\n\n    case 'materialsPage':\n      requestURL = 'https://localhost:7275/Material/GetAllMaterials';\n      break;\n\n    case 'servicesPage':\n      requestURL = 'https://localhost:7275/Procedure/GetAllProcedures';\n      break;\n\n    case 'ordersPage':\n      requestURL = 'https://localhost:7275/Order/GetAllOrders';\n      break;\n\n    case 'profilesPage':\n      requestURL = 'https://localhost:7275/Profile/GetAllProfiles';\n      break;\n\n    case 'promoPage':\n      requestURL = 'https://localhost:7275/Profile/GetAllProfiles';\n      break;\n\n    case 'feedbacksPage':\n      requestURL = 'https://localhost:7275/Feedback/GetAllFeedbacks';\n      break;\n\n    case 'staffPage':\n      requestURL = 'https://localhost:7275/Employee/GetAllEmployees';\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `https://localhost:7275/MediaFile/GetAllMediaFiles`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchAllDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c6 = FeetchAllData;\nexport function FeetchAllDataSuccess(data, id) {\n  return {\n    type: TYPES.FETCH_DATA_SUCCESS,\n    payload: data,\n    identifier: id\n  };\n} //Get by id depending on id and active menu----------------------------------------------------\n\n_c7 = FeetchAllDataSuccess;\nexport function FetchSingleData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `https://localhost:7275/Client/GetClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `https://localhost:7275/Material/GetMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `https://localhost:7275/Procedure/GetServiceById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `https://localhost:7275/Order/GetOrderById?id=${id}`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `https://localhost:7275/Profile/GetProfileById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `https://localhost:7275/Profile/GetProfileById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `https://localhost:7275/Feedback/GetFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `https://localhost:7275/Employee/GetEmployeeById?id=${id}`;\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `https://localhost:7275/MediaFile/GetFileById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchSingleDataSuccess(data));\n    });\n  };\n}\n_c8 = FetchSingleData;\nexport function FetchClientByEmail(email) {\n  var requestURL = `https://localhost:7275/Client/GetClientByEmail?email=${email}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        dispatch(FeetchSingleDataSuccess('Not found'));\n      }\n\n      console.log(response);\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchSingleDataSuccess(data));\n    });\n  };\n}\n_c9 = FetchClientByEmail;\nexport function FeetchSingleDataSuccess(data) {\n  return {\n    type: TYPES.SINGLE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //--------------------------------------------------------\n// States processing functions\n\n_c10 = FeetchSingleDataSuccess;\nexport function SetEditState() {\n  return {\n    type: TYPES.EDIT_STATE\n  };\n}\n_c11 = SetEditState;\nexport function SetUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE\n  };\n}\n_c12 = SetUpdateModalState;\nexport function SetCreateModalState() {\n  return {\n    type: TYPES.CREATE_MODAL_WINDOW_STATE\n  };\n} //Delete data depending on id and active menu\n\n_c13 = SetCreateModalState;\nexport function DeleteData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `https://localhost:7275/Client/DeleteClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `https://localhost:7275/Material/DeleteMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `https://localhost:7275/Procedure/DeleteServiceById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `https://localhost:7275/Order/DeleteOrderById?id=${id}`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `https://localhost:7275/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `https://localhost:7275/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `https://localhost:7275/Feedback/DeleteFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `https://localhost:7275/Employee/DeleteEmployeeById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchAllData(activeMenu)));\n  };\n} // Update data depending on id and active menu---------------------------------\n\n_c14 = DeleteData;\nexport function UpdateData(activeMenu, dataObject) {\n  var requestURL;\n  console.log(activeMenu);\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = 'https://localhost:7275/Client/UpdateClient';\n      break;\n\n    case 'materialsPage':\n      requestURL = 'https://localhost:7275/Material/UpdateMaterial';\n      break;\n\n    case 'servicesPage':\n      requestURL = 'https://localhost:7275/Procedure/UpdateService';\n      break;\n\n    case 'ordersPage':\n      requestURL = 'https://localhost:7275/Order/UpdateOrder';\n      break;\n\n    case 'profilesPage':\n      requestURL = 'https://localhost:7275/Profile/UpdateProfile';\n      break;\n\n    case 'promoPage':\n      requestURL = 'https://localhost:7275/Profile/UpdateProfile';\n      break;\n\n    case 'feedbacksPage':\n      requestURL = 'https://localhost:7275/Feedback/UpdateFeedback';\n      break;\n\n    case 'staffPage':\n      requestURL = 'https://localhost:7275/Employee/UpdateEmployee';\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchAllData(activeMenu)));\n  };\n} //Add data depending on id and active menu---------------------------------\n\n_c15 = UpdateData;\nexport function AddData(activeMenu, dataObject) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = 'https://localhost:7275/Client/CreateClient';\n      break;\n\n    case 'materialsPage':\n      requestURL = 'https://localhost:7275/Material/CreateMaterial';\n      break;\n\n    case 'servicesPage':\n      requestURL = 'https://localhost:7275/Procedure/CreateProcedure';\n      break;\n\n    case 'ordersPage':\n      requestURL = 'https://localhost:7275/Order/CreateOrder';\n      break;\n\n    case 'profilesPage':\n      requestURL = 'https://localhost:7275/Profile/CreateProfile';\n      break;\n\n    case 'promoPage':\n      requestURL = 'https://localhost:7275/Profile/CreateProfile';\n      break;\n\n    case 'feedbacksPage':\n      requestURL = 'https://localhost:7275/Feedback/CreateFeedback';\n      break;\n\n    case 'staffPage':\n      requestURL = 'https://localhost:7275/Employee/CreateEmployee';\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchAllData(activeMenu)));\n  };\n} // Feetcing of procedures by their types\n\n_c16 = AddData;\nexport function GetProceduresByType(id) {\n  return dispatch => {\n    fetch(`https://localhost:7275/Procedure/GetAllProceduresByType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchProcedureSuccess(data));\n    });\n  };\n}\n_c17 = GetProceduresByType;\nexport function FeetchProcedureSuccess(data) {\n  return {\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of employees by procedures types\n\n_c18 = FeetchProcedureSuccess;\nexport function GetEmployeesByProcedureType(id) {\n  return dispatch => {\n    fetch(`https://localhost:7275/Employee/GetAllByProcedureType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchEmployeesSuccess(data));\n    });\n  };\n}\n_c19 = GetEmployeesByProcedureType;\nexport function FeetchEmployeesSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of schedule with avaliable time intervals\n\n_c20 = FeetchEmployeesSuccess;\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\n  return dispatch => {\n    fetch(`https://localhost:7275/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchAvaliableTimesSuccess(data));\n    });\n  };\n}\n_c21 = GetAvaliableTimes;\nexport function FeetchAvaliableTimesSuccess(data) {\n  return {\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Setting of active day and procedure during making order\n\n_c22 = FeetchAvaliableTimesSuccess;\nexport function SetActiveDate(data) {\n  return {\n    type: TYPES.SET_ACTIVE_DATE,\n    payload: data\n  };\n}\n_c23 = SetActiveDate;\nexport function SetActiveTime(data) {\n  return {\n    type: TYPES.SET_ACTIVE_TIME,\n    payload: data\n  };\n}\n_c24 = SetActiveTime;\nexport function SetActiveProcedure(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE,\n    payload: data\n  };\n}\n_c25 = SetActiveProcedure;\nexport function SetActiveClient(data) {\n  return {\n    type: TYPES.SET_ACTIVE_CLIENT,\n    payload: data\n  };\n}\n_c26 = SetActiveClient;\nexport function SetActiveEmployee(data) {\n  return {\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\n    payload: data\n  };\n} //-------------------------------------------???????????????????????????????????????????????????????????????????????\n\n_c27 = SetActiveEmployee;\nexport function GetImage(id) {\n  var requestURL = `https://localhost:7275/MediaFile/GetFileById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchSingleDataSuccess(imageObjectURL));\n    });\n  };\n} // Reset react-select single value\n\n_c28 = GetImage;\nexport function ResetSingleData() {\n  return {\n    type: TYPES.RESET_SINGLE_DATA\n  };\n} // Reset react-select values\n\n_c29 = ResetSingleData;\nexport function ResetSelectedValues() {\n  return {\n    type: TYPES.RESET_SELECTED_VALUES\n  };\n} // Set react-select values\n\n_c30 = ResetSelectedValues;\nexport function SetSelectedValue(inputName) {\n  return {\n    type: TYPES.SET_SELECTED_VALUE,\n    payload: inputName\n  };\n} // Set booking status\n\n_c31 = SetSelectedValue;\nexport function SetBookingStatus() {\n  return {\n    type: TYPES.SET_BOOKING_STATUS\n  };\n} // Set client authentification status\n\n_c32 = SetBookingStatus;\nexport function RedirectToOrdering() {\n  return {\n    type: TYPES.REDIRECT_TO_ORDERING\n  };\n} // Set order creation status (from main by client)\n\n_c33 = RedirectToOrdering;\nexport function SetOrderStatus() {\n  return {\n    type: TYPES.SET_ORDER_CREATION_STATUS\n  };\n}\n_c34 = SetOrderStatus;\nexport function GetAllApprovedFeedbacks(activeMenu) {\n  const requestURL = 'https://localhost:7275/Feedback/GetAllApprovedFeedbacks';\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      console.log(activeMenu);\n      dispatch(FeetchAllDataSuccess(data, activeMenu));\n    });\n  };\n} // ================Add order from main menu\n\n_c35 = GetAllApprovedFeedbacks;\nexport function AddOrder(dataObject) {\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} // Profile photo uploading ???????????????????????\n\n_c36 = AddOrder;\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\n  console.log('!!!!!!!!!!!!!!!!', profilePhoto);\n  var requestURL = `https://localhost:7275/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        // Accept: 'multipart/form-data',\n        'content-type': 'multipart/form-data; boundary=---------------------------974767299852498929531610575'\n      }),\n      body: profilePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c37 = UploadProfilePhoto;\nexport function GetProfilePhotoByEmployeeId(employeeId) {\n  var requestURL = `https://localhost:7275/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\n    });\n  };\n}\n_c38 = GetProfilePhotoByEmployeeId;\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\n  console.log('imageObjectURL', imageObjectURL);\n  return {\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n}\n_c39 = FeetchProfilePhotoSuccess;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39;\n\n$RefreshReg$(_c, \"EmployeeAutorization\");\n$RefreshReg$(_c2, \"ResetActiveMenu\");\n$RefreshReg$(_c3, \"EmployeeAutorizationSuccess\");\n$RefreshReg$(_c4, \"EmployeeLogout\");\n$RefreshReg$(_c5, \"SetActiveIdentifier\");\n$RefreshReg$(_c6, \"FeetchAllData\");\n$RefreshReg$(_c7, \"FeetchAllDataSuccess\");\n$RefreshReg$(_c8, \"FetchSingleData\");\n$RefreshReg$(_c9, \"FetchClientByEmail\");\n$RefreshReg$(_c10, \"FeetchSingleDataSuccess\");\n$RefreshReg$(_c11, \"SetEditState\");\n$RefreshReg$(_c12, \"SetUpdateModalState\");\n$RefreshReg$(_c13, \"SetCreateModalState\");\n$RefreshReg$(_c14, \"DeleteData\");\n$RefreshReg$(_c15, \"UpdateData\");\n$RefreshReg$(_c16, \"AddData\");\n$RefreshReg$(_c17, \"GetProceduresByType\");\n$RefreshReg$(_c18, \"FeetchProcedureSuccess\");\n$RefreshReg$(_c19, \"GetEmployeesByProcedureType\");\n$RefreshReg$(_c20, \"FeetchEmployeesSuccess\");\n$RefreshReg$(_c21, \"GetAvaliableTimes\");\n$RefreshReg$(_c22, \"FeetchAvaliableTimesSuccess\");\n$RefreshReg$(_c23, \"SetActiveDate\");\n$RefreshReg$(_c24, \"SetActiveTime\");\n$RefreshReg$(_c25, \"SetActiveProcedure\");\n$RefreshReg$(_c26, \"SetActiveClient\");\n$RefreshReg$(_c27, \"SetActiveEmployee\");\n$RefreshReg$(_c28, \"GetImage\");\n$RefreshReg$(_c29, \"ResetSingleData\");\n$RefreshReg$(_c30, \"ResetSelectedValues\");\n$RefreshReg$(_c31, \"SetSelectedValue\");\n$RefreshReg$(_c32, \"SetBookingStatus\");\n$RefreshReg$(_c33, \"RedirectToOrdering\");\n$RefreshReg$(_c34, \"SetOrderStatus\");\n$RefreshReg$(_c35, \"GetAllApprovedFeedbacks\");\n$RefreshReg$(_c36, \"AddOrder\");\n$RefreshReg$(_c37, \"UploadProfilePhoto\");\n$RefreshReg$(_c38, \"GetProfilePhotoByEmployeeId\");\n$RefreshReg$(_c39, \"FeetchProfilePhotoSuccess\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Redux/Actions/actions.js"],"names":["TYPES","EmployeeAutorization","email","password","requestURL","dispatch","fetch","method","then","response","ok","Error","statusText","data","json","EmployeeAutorizationSuccess","ResetActiveMenu","type","RESET_ACTIVE_MENU","EMPLOYEE_AUTORIZATION_SUCCESS","payload","EmployeeLogout","EMPLOYEE_LOGOUT","SetActiveIdentifier","id","ACTIVE_ID_SET","FeetchAllData","activeMenu","FeetchAllDataSuccess","FETCH_DATA_SUCCESS","identifier","FetchSingleData","FeetchSingleDataSuccess","FetchClientByEmail","console","log","SINGLE_FETCH_DATA_SUCCESS","SetEditState","EDIT_STATE","SetUpdateModalState","UPDATE_MODAL_WINDOW_STATE","SetCreateModalState","CREATE_MODAL_WINDOW_STATE","DeleteData","cors","UpdateData","dataObject","headers","Headers","Accept","body","JSON","stringify","status","catch","err","AddData","GetProceduresByType","FeetchProcedureSuccess","PROCEDURE_FETCH_DATA_SUCCESS","GetEmployeesByProcedureType","FeetchEmployeesSuccess","EMPLOYEE_FETCH_DATA_SUCCESS","GetAvaliableTimes","date","procedureId","open","close","FeetchAvaliableTimesSuccess","SCHEDULE_FETCH_DATA_SUCCESS","SetActiveDate","SET_ACTIVE_DATE","SetActiveTime","SET_ACTIVE_TIME","SetActiveProcedure","SET_ACTIVE_PROCEDURE","SetActiveClient","SET_ACTIVE_CLIENT","SetActiveEmployee","SET_ACTIVE_EMPLOYEE","GetImage","blob","imageBlob","imageObjectURL","URL","createObjectURL","ResetSingleData","RESET_SINGLE_DATA","ResetSelectedValues","RESET_SELECTED_VALUES","SetSelectedValue","inputName","SET_SELECTED_VALUE","SetBookingStatus","SET_BOOKING_STATUS","RedirectToOrdering","REDIRECT_TO_ORDERING","SetOrderStatus","SET_ORDER_CREATION_STATUS","GetAllApprovedFeedbacks","AddOrder","UploadProfilePhoto","employeeId","profilePhoto","GetProfilePhotoByEmployeeId","FeetchProfilePhotoSuccess","FETCH_PROFILE_PHOTO_SUCCESS"],"mappings":"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","sourcesContent":["import * as TYPES from './actionTypes';\r\n\r\n// Authorization of employees -----------------------------------------------------------------------------\r\n\r\nexport function EmployeeAutorization(email, password) {\r\n  const requestURL = `https://localhost:7275/Employee/GetToken?employeeEmail=${email}&password=${password}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'post',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeAutorizationSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function ResetActiveMenu() {\r\n  return {\r\n    type: TYPES.RESET_ACTIVE_MENU,\r\n  };\r\n}\r\n\r\nexport function EmployeeAutorizationSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function EmployeeLogout() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_LOGOUT,\r\n  };\r\n}\r\n\r\n//Active identifier setting------------------------------\r\n\r\nexport function SetActiveIdentifier(id) {\r\n  return {\r\n    type: TYPES.ACTIVE_ID_SET,\r\n    payload: id,\r\n  };\r\n}\r\n\r\n// Data fetching -----------------------------------------\r\n\r\n//Get ALL depending on active menu\r\nexport function FeetchAllData(activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = 'https://localhost:7275/Client/GetAllClients';\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = 'https://localhost:7275/Material/GetAllMaterials';\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = 'https://localhost:7275/Procedure/GetAllProcedures';\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = 'https://localhost:7275/Order/GetAllOrders';\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = 'https://localhost:7275/Profile/GetAllProfiles';\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = 'https://localhost:7275/Profile/GetAllProfiles';\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = 'https://localhost:7275/Feedback/GetAllFeedbacks';\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = 'https://localhost:7275/Employee/GetAllEmployees';\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `https://localhost:7275/MediaFile/GetAllMediaFiles`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchAllDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAllDataSuccess(data, id) {\r\n  return {\r\n    type: TYPES.FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n    identifier: id,\r\n  };\r\n}\r\n\r\n//Get by id depending on id and active menu----------------------------------------------------\r\n\r\nexport function FetchSingleData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `https://localhost:7275/Client/GetClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `https://localhost:7275/Material/GetMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `https://localhost:7275/Procedure/GetServiceById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `https://localhost:7275/Order/GetOrderById?id=${id}`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `https://localhost:7275/Profile/GetProfileById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `https://localhost:7275/Profile/GetProfileById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `https://localhost:7275/Feedback/GetFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `https://localhost:7275/Employee/GetEmployeeById?id=${id}`;\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `https://localhost:7275/MediaFile/GetFileById?id=${id}`;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchSingleDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchClientByEmail(email) {\r\n  var requestURL = `https://localhost:7275/Client/GetClientByEmail?email=${email}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(FeetchSingleDataSuccess('Not found'));\r\n        }\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchSingleDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchSingleDataSuccess(data) {\r\n  return {\r\n    type: TYPES.SINGLE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//--------------------------------------------------------\r\n\r\n// States processing functions\r\n\r\nexport function SetEditState() {\r\n  return {\r\n    type: TYPES.EDIT_STATE,\r\n  };\r\n}\r\n\r\nexport function SetUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\n//Delete data depending on id and active menu\r\n\r\nexport function DeleteData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `https://localhost:7275/Client/DeleteClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `https://localhost:7275/Material/DeleteMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `https://localhost:7275/Procedure/DeleteServiceById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `https://localhost:7275/Order/DeleteOrderById?id=${id}`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `https://localhost:7275/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `https://localhost:7275/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `https://localhost:7275/Feedback/DeleteFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `https://localhost:7275/Employee/DeleteEmployeeById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchAllData(activeMenu)),\r\n    );\r\n  };\r\n}\r\n\r\n// Update data depending on id and active menu---------------------------------\r\n\r\nexport function UpdateData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  console.log(activeMenu);\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = 'https://localhost:7275/Client/UpdateClient';\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = 'https://localhost:7275/Material/UpdateMaterial';\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = 'https://localhost:7275/Procedure/UpdateService';\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = 'https://localhost:7275/Order/UpdateOrder';\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = 'https://localhost:7275/Profile/UpdateProfile';\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = 'https://localhost:7275/Profile/UpdateProfile';\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = 'https://localhost:7275/Feedback/UpdateFeedback';\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = 'https://localhost:7275/Employee/UpdateEmployee';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchAllData(activeMenu)));\r\n  };\r\n}\r\n\r\n//Add data depending on id and active menu---------------------------------\r\n\r\nexport function AddData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = 'https://localhost:7275/Client/CreateClient';\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = 'https://localhost:7275/Material/CreateMaterial';\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = 'https://localhost:7275/Procedure/CreateProcedure';\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = 'https://localhost:7275/Order/CreateOrder';\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = 'https://localhost:7275/Profile/CreateProfile';\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = 'https://localhost:7275/Profile/CreateProfile';\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = 'https://localhost:7275/Feedback/CreateFeedback';\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = 'https://localhost:7275/Employee/CreateEmployee';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchAllData(activeMenu)));\r\n  };\r\n}\r\n\r\n// Feetcing of procedures by their types\r\nexport function GetProceduresByType(id) {\r\n  return (dispatch) => {\r\n    fetch(`https://localhost:7275/Procedure/GetAllProceduresByType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of employees by procedures types\r\n\r\nexport function GetEmployeesByProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`https://localhost:7275/Employee/GetAllByProcedureType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchEmployeesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchEmployeesSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of schedule with avaliable time intervals\r\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://localhost:7275/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`,\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchAvaliableTimesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAvaliableTimesSuccess(data) {\r\n  return {\r\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Setting of active day and procedure during making order\r\n\r\nexport function SetActiveDate(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_DATE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveTime(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_TIME,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedure(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveClient(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_CLIENT,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveEmployee(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//-------------------------------------------???????????????????????????????????????????????????????????????????????\r\nexport function GetImage(id) {\r\n  var requestURL = `https://localhost:7275/MediaFile/GetFileById?id=${id}`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchSingleDataSuccess(imageObjectURL));\r\n      });\r\n  };\r\n}\r\n\r\n// Reset react-select single value\r\nexport function ResetSingleData() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_DATA,\r\n  };\r\n}\r\n\r\n// Reset react-select values\r\n\r\nexport function ResetSelectedValues() {\r\n  return {\r\n    type: TYPES.RESET_SELECTED_VALUES,\r\n  };\r\n}\r\n\r\n// Set react-select values\r\n\r\nexport function SetSelectedValue(inputName) {\r\n  return {\r\n    type: TYPES.SET_SELECTED_VALUE,\r\n    payload: inputName,\r\n  };\r\n}\r\n\r\n// Set booking status\r\nexport function SetBookingStatus() {\r\n  return {\r\n    type: TYPES.SET_BOOKING_STATUS,\r\n  };\r\n}\r\n// Set client authentification status\r\nexport function RedirectToOrdering() {\r\n  return {\r\n    type: TYPES.REDIRECT_TO_ORDERING,\r\n  };\r\n}\r\n// Set order creation status (from main by client)\r\nexport function SetOrderStatus() {\r\n  return {\r\n    type: TYPES.SET_ORDER_CREATION_STATUS,\r\n  };\r\n}\r\n\r\nexport function GetAllApprovedFeedbacks(activeMenu) {\r\n  const requestURL = 'https://localhost:7275/Feedback/GetAllApprovedFeedbacks';\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        console.log(activeMenu);\r\n        dispatch(FeetchAllDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\n// ================Add order from main menu\r\n\r\nexport function AddOrder(dataObject) {\r\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\n// Profile photo uploading ???????????????????????\r\n\r\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\r\n  console.log('!!!!!!!!!!!!!!!!', profilePhoto);\r\n  var requestURL = `https://localhost:7275/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        // Accept: 'multipart/form-data',\r\n        'content-type':\r\n          'multipart/form-data; boundary=---------------------------974767299852498929531610575',\r\n      }),\r\n      body: profilePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProfilePhotoByEmployeeId(employeeId) {\r\n  var requestURL = `https://localhost:7275/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\r\n  console.log('imageObjectURL', imageObjectURL);\r\n  return {\r\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}