{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\project\\\\React_project\\\\react-application\\\\src\\\\Components\\\\UnauthenticatedMainMenu\\\\Booking\\\\Booking.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../Redux/Actions/actions';\nimport ClientCheck from './ClientCheck';\nimport CreateNewClient from './CreateNewClient';\nimport CreateNewOrder from './CreateNewOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Booking extends React.PureComponent {\n  render() {\n    if (this.props.bookingInProcess === true && this.props.singleResponseData === '') {\n      return /*#__PURE__*/_jsxDEV(ClientCheck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.bookingInProcess === true && this.props.singleResponseData !== '' && this.props.singleResponseData !== 'Not found') {\n      return /*#__PURE__*/_jsxDEV(CreateNewOrder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.bookingInProcess === true && this.props.singleResponseData === 'Not found') {\n      return /*#__PURE__*/_jsxDEV(CreateNewClient, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.newOrderSuccess) {}\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    bookingInProcess: state.bookingInProcess\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getByEmail: email => dispatch(actions.FetchClientByEmail(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Booking);","map":{"version":3,"sources":["C:/Users/aries/Desktop/project/React_project/react-application/src/Components/UnauthenticatedMainMenu/Booking/Booking.js"],"names":["React","connect","actions","ClientCheck","CreateNewClient","CreateNewOrder","Booking","PureComponent","render","props","bookingInProcess","singleResponseData","newOrderSuccess","mapStateToProps","state","pagedTablesData","mapDispatchToProps","dispatch","getByEmail","email","FetchClientByEmail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,aAA5B,CAA0C;AACxCC,EAAAA,MAAM,GAAG;AACP,QACE,KAAKC,KAAL,CAAWC,gBAAX,KAAgC,IAAhC,IACA,KAAKD,KAAL,CAAWE,kBAAX,KAAkC,EAFpC,EAGE;AACA,0BAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KALD,MAKO,IACL,KAAKF,KAAL,CAAWC,gBAAX,KAAgC,IAAhC,IACA,KAAKD,KAAL,CAAWE,kBAAX,KAAkC,EADlC,IAEA,KAAKF,KAAL,CAAWE,kBAAX,KAAkC,WAH7B,EAIL;AACA,0BAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KANM,MAMA,IACL,KAAKF,KAAL,CAAWC,gBAAX,KAAgC,IAAhC,IACA,KAAKD,KAAL,CAAWE,kBAAX,KAAkC,WAF7B,EAGL;AACA,0BAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KALM,MAKA,IAAI,KAAKF,KAAL,CAAWG,eAAf,EAAgC,CACtC;AACF;;AApBuC;;AAuB1C,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACC,eADlB;AAELJ,IAAAA,kBAAkB,EAAEG,KAAK,CAACH,kBAFrB;AAGLD,IAAAA,gBAAgB,EAAEI,KAAK,CAACJ;AAHnB,GAAP;AAKD;;AAED,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,UAAU,EAAGC,KAAD,IAAWF,QAAQ,CAACf,OAAO,CAACkB,kBAAR,CAA2BD,KAA3B,CAAD;AAD1B,GAAP;AAGD;;AAED,eAAelB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,OAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../Redux/Actions/actions';\r\nimport ClientCheck from './ClientCheck';\r\nimport CreateNewClient from './CreateNewClient';\r\nimport CreateNewOrder from './CreateNewOrder';\r\n\r\nclass Booking extends React.PureComponent {\r\n  render() {\r\n    if (\r\n      this.props.bookingInProcess === true &&\r\n      this.props.singleResponseData === ''\r\n    ) {\r\n      return <ClientCheck />;\r\n    } else if (\r\n      this.props.bookingInProcess === true &&\r\n      this.props.singleResponseData !== '' &&\r\n      this.props.singleResponseData !== 'Not found'\r\n    ) {\r\n      return <CreateNewOrder />;\r\n    } else if (\r\n      this.props.bookingInProcess === true &&\r\n      this.props.singleResponseData === 'Not found'\r\n    ) {\r\n      return <CreateNewClient />;\r\n    } else if (this.props.newOrderSuccess) {\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    bookingInProcess: state.bookingInProcess,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getByEmail: (email) => dispatch(actions.FetchClientByEmail(email)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Booking);\r\n"]},"metadata":{},"sourceType":"module"}