{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateEmployeeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetUpdateModalState, SetEditState, DeleteData, UpdateData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport testImage from '../../temporaryFiles/example3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  render() {\n    var hireDate = this.props.singleResponseData.hireDate;\n    var date = new Date(hireDate).toISOString().substring(0, 10);\n    alert(date);\n    var firstName = this.props.singleResponseData.firstName;\n    var lastName = this.props.singleResponseData.lastName;\n    var phone = this.props.singleResponseData.phoneNumber;\n    var email = this.props.singleResponseData.email;\n    var qualification;\n    this.props.responseDataList.qualification.forEach(element => {\n      if (element.value === this.props.singleResponseData.qualification) qualification = element.name;\n    });\n    var procedureType;\n    var role;\n    this.props.responseDataList.roles.forEach(element => {\n      if (element.value === this.props.singleResponseData.role) role = element.name;\n    });\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: this.props.activeId,\n      firstName: this.props.singleResponseData.firstName,\n      lastName: this.props.singleResponseData.lastName,\n      phoneNumber: this.props.singleResponseData.phoneNumber,\n      password: this.props.singleResponseData.password,\n      email: this.props.singleResponseData.email,\n      procedureType: this.props.singleResponseData.procedureType,\n      qualification: this.props.singleResponseData.qualification,\n      role: this.props.singleResponseData.role,\n      hireDate: this.props.singleResponseData.hireDate,\n      profile: this.props.singleResponseData.profile,\n      profileId: this.props.singleResponseData.profileId,\n      orders: null\n    };\n    var roles = [];\n    this.props.responseDataList.roles.forEach(element => {\n      roles.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    roles.forEach(element => {\n      if (element.value === qualification) qualification = element.value;\n    });\n    var procedureTypesSL = [];\n    this.props.responseDataList.procedureTypesSelectList.forEach(element => {\n      procedureTypesSL.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var qualifications = [];\n    this.props.responseDataList.qualification.forEach(element => {\n      qualifications.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    var orders = [];\n    this.props.responseDataList.orders.forEach(order => {\n      if (order.employee.employeeId === this.props.singleResponseData.employeeId) orders.push(order);\n    }); // Employee orders table\n\n    if (orders !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < orders.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: orders[i].orderId,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].dateOfService\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].procedure.procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].procedure.procedurePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders[i].employee.firstName + ' ' + orders[i].employee.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    } // End of employee orders table\n\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileText\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"First name: \", firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last name: \", lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hired: \", hireDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ProcedureType: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qualification: \", qualification]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"profilePhotoInput\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: firstName,\n              onChange: e => {\n                employeeToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: lastName,\n              onChange: e => {\n                employeeToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hired:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: hireDate,\n              onChange: e => {\n                employeeToUpdate.hireDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              defaultValue: phone,\n              onChange: e => {\n                employeeToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              defaultValue: email,\n              onChange: e => {\n                employeeToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                employeeToUpdate.role = data.value;\n              },\n              options: roles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ProcedureType:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: procedureTypesSL,\n              onChange: data => {\n                this.props.responseDataList.procedureTypes.forEach(element => {\n                  if (element.procedureTypeName === data.label) {\n                    employeeToUpdate.procedureType = element;\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Qualification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: qualifications,\n              onChange: data => {\n                employeeToUpdate.qualification = data.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilePhoto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: testImage,\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), employeeInfoArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: (id, menu) => {\n      dispatch(DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateEmployeeModal.js"],"names":["React","connect","Modal","SetUpdateModalState","SetEditState","DeleteData","UpdateData","Select","testImage","UpdateEmployeeModal","PureComponent","render","hireDate","props","singleResponseData","date","Date","toISOString","substring","alert","firstName","lastName","phone","phoneNumber","email","qualification","responseDataList","forEach","element","value","name","procedureType","role","roles","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","activeId","password","profile","profileId","orders","push","label","procedureTypesSL","procedureTypesSelectList","text","qualifications","order","employee","elements","header","i","length","orderId","dateOfService","client","procedure","procedureName","procedurePrice","concat","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","onUpdate","e","target","data","procedureTypes","procedureTypeName","modal","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","id","menu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetUpdateModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n  UpdateData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\nimport testImage from '../../temporaryFiles/example3.jpg';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  render() {\r\n    var hireDate = this.props.singleResponseData.hireDate;\r\n    var date = new Date(hireDate).toISOString().substring(0, 10);\r\n    alert(date);\r\n    var firstName = this.props.singleResponseData.firstName;\r\n    var lastName = this.props.singleResponseData.lastName;\r\n    var phone = this.props.singleResponseData.phoneNumber;\r\n    var email = this.props.singleResponseData.email;\r\n    var qualification;\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.qualification)\r\n        qualification = element.name;\r\n    });\r\n    var procedureType;\r\n    var role;\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      if (element.value === this.props.singleResponseData.role)\r\n        role = element.name;\r\n    });\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: this.props.activeId,\r\n      firstName: this.props.singleResponseData.firstName,\r\n      lastName: this.props.singleResponseData.lastName,\r\n      phoneNumber: this.props.singleResponseData.phoneNumber,\r\n      password: this.props.singleResponseData.password,\r\n      email: this.props.singleResponseData.email,\r\n      procedureType: this.props.singleResponseData.procedureType,\r\n      qualification: this.props.singleResponseData.qualification,\r\n      role: this.props.singleResponseData.role,\r\n      hireDate: this.props.singleResponseData.hireDate,\r\n      profile: this.props.singleResponseData.profile,\r\n      profileId: this.props.singleResponseData.profileId,\r\n      orders: null,\r\n    };\r\n\r\n    var roles = [];\r\n    this.props.responseDataList.roles.forEach((element) => {\r\n      roles.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    roles.forEach((element) => {\r\n      if (element.value === qualification) qualification = element.value;\r\n    });\r\n\r\n    var procedureTypesSL = [];\r\n    this.props.responseDataList.procedureTypesSelectList.forEach((element) => {\r\n      procedureTypesSL.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    var qualifications = [];\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      qualifications.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    var orders = [];\r\n    this.props.responseDataList.orders.forEach((order) => {\r\n      if (\r\n        order.employee.employeeId === this.props.singleResponseData.employeeId\r\n      )\r\n        orders.push(order);\r\n    });\r\n    // Employee orders table\r\n\r\n    if (orders !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < orders.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <tr key={orders[i].orderId} id={orders[i].orderId}>\r\n            <td>{orders[i].dateOfService}</td>\r\n            <td>{orders[i].client.firstName}</td>\r\n            <td>{orders[i].client.phoneNumber}</td>\r\n            <td>{orders[i].client.email}</td>\r\n            <td>{orders[i].procedure.procedureName}</td>\r\n            <td>{orders[i].procedure.procedurePrice}</td>\r\n            <td>\r\n              {orders[i].employee.firstName + ' ' + orders[i].employee.lastName}\r\n            </td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    // End of employee orders table\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <>\r\n          <div className=\"profileText\">\r\n            <div className=\"profileTextItem\">\r\n              <p>First name: {firstName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Last name: {lastName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Hired: {hireDate}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Email: {email}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>ProcedureType: </p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Qualification: {qualification}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Role: {role}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <input className=\"profilePhotoInput\" type=\"file\" />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={firstName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={lastName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Hired:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={hireDate}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.hireDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                defaultValue={phone}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                defaultValue={email}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Role:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  employeeToUpdate.role = data.value;\r\n                }}\r\n                options={roles}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>ProcedureType:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={procedureTypesSL}\r\n                onChange={(data) => {\r\n                  this.props.responseDataList.procedureTypes.forEach(\r\n                    (element) => {\r\n                      if (element.procedureTypeName === data.label) {\r\n                        employeeToUpdate.procedureType = element;\r\n                      }\r\n                    },\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Qualification:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={qualifications}\r\n                onChange={(data) => {\r\n                  employeeToUpdate.qualification = data.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">\r\n            <div className=\"profilePhoto\">\r\n              <img src={testImage} alt=\"profile\" />\r\n            </div>\r\n            {employeeInfoArea}\r\n          </div>\r\n          {actionButtons}\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}