{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\project\\\\React_project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\FeedbacksTable.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateFeedbackModal from '../ModalWindowsComponents/CreateFeedbackModal';\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FeedbacksList extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData.feedbacks;\n\n    if (data !== '') {\n      var elements = [];\n      var element;\n\n      for (let i = 0; i < data.length; i++) {\n        var actionButtons = '';\n        var createFeedbackButton = '';\n\n        if (this.props.employeeToken !== '') {\n          if (!data[i].isVerify) {\n            actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onApprove(this.props.activeMenu, data[i]);\n                  this.props.onNewFeedbacksCheck();\n                },\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onDelete(data[i].feedbackId, this.props.activeMenu);\n                  this.props.onNewFeedbacksCheck();\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true);\n          } else {\n            actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onDelete(data[i].feedbackId, this.props.activeMenu);\n                  this.props.onNewFeedbacksCheck();\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          }\n        } else {\n          var createFeedbackButton = /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"managementMenuButton\",\n            id: \"feedback\",\n            onClick: e => {\n              this.props.setCreateModalState();\n            },\n            children: \"Create feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this);\n        }\n\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          id: data[i].feedbackId,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackTitle\",\n            children: data[i].feedbackTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthor\",\n                children: data.clientFullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthorEmail\",\n                children: data[i].clientEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackDate\",\n                children: data[i].createdOn.substring(0, 10) + ' ' + data[i].createdOn.substring(11, 16)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: actionButtons\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackText\",\n              children: data[i].feedbackText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, data[i].feedbackId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      console.log('elements', elements);\n    }\n\n    if (data !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tableFunctionality\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"Feedbacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RecordsPerPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), createFeedbackButton]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), elements, /*#__PURE__*/_jsxDEV(PageButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateFeedbackModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    unwachedFeedbacks: state.unwachedFeedbacks,\n    employeeToken: state.employeeToken,\n    pagedTablesData: state.pagedTablesData,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onNewFeedbacksCheck: () => dispatch(actions.CheckUnwachedFeedbacks()),\n    onApprove: (activeMenu, feedback) => dispatch(actions.UpdateFeedback(activeMenu, feedback)),\n    onDelete: (id, activeMenu) => dispatch(actions.DeleteFeedback(id, activeMenu)),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/project/React_project/react-application/src/Components/DataTablesComponents/FeedbacksTable.js"],"names":["React","connect","actions","CreateFeedbackModal","RecordsPerPage","PageButtons","FeedbacksList","PureComponent","render","data","props","pagedTablesData","feedbacks","elements","element","i","length","actionButtons","createFeedbackButton","employeeToken","isVerify","onApprove","activeMenu","onNewFeedbacksCheck","onDelete","feedbackId","e","setCreateModalState","feedbackTitle","clientFullName","clientEmail","createdOn","substring","feedbackText","concat","console","log","mapStateToProps","state","unwachedFeedbacks","mapDispatchToProps","dispatch","CheckUnwachedFeedbacks","feedback","UpdateFeedback","id","DeleteFeedback","SetCreateModalState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateFeedbackModal from '../ModalWindowsComponents/CreateFeedbackModal';\r\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\r\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\r\n\r\nclass FeedbacksList extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData.feedbacks;\r\n    if (data !== '') {\r\n      var elements = [];\r\n      var element;\r\n      for (let i = 0; i < data.length; i++) {\r\n        var actionButtons = '';\r\n        var createFeedbackButton = '';\r\n        if (this.props.employeeToken !== '') {\r\n          if (!data[i].isVerify) {\r\n            actionButtons = (\r\n              <>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onApprove(this.props.activeMenu, data[i]);\r\n                    this.props.onNewFeedbacksCheck();\r\n                  }}\r\n                >\r\n                  Approve\r\n                </button>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onDelete(\r\n                      data[i].feedbackId,\r\n                      this.props.activeMenu,\r\n                    );\r\n                    this.props.onNewFeedbacksCheck();\r\n                  }}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </>\r\n            );\r\n          } else {\r\n            actionButtons = (\r\n              <>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onDelete(\r\n                      data[i].feedbackId,\r\n                      this.props.activeMenu,\r\n                    );\r\n                    this.props.onNewFeedbacksCheck();\r\n                  }}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </>\r\n            );\r\n          }\r\n        } else {\r\n          var createFeedbackButton = (\r\n            <button\r\n              className=\"managementMenuButton\"\r\n              id=\"feedback\"\r\n              onClick={(e) => {\r\n                this.props.setCreateModalState();\r\n              }}\r\n            >\r\n              Create feedback\r\n            </button>\r\n          );\r\n        }\r\n\r\n        element = '';\r\n        element = (\r\n          <div\r\n            className=\"feedback\"\r\n            key={data[i].feedbackId}\r\n            id={data[i].feedbackId}\r\n          >\r\n            <div className=\"feedbackTitle\">{data[i].feedbackTitle}</div>\r\n            <div className=\"feedbackBody\">\r\n              <div className=\"feedbackInfo\">\r\n                <div className=\"feedbackAuthor\">{data.clientFullName}</div>\r\n                <div className=\"feedbackAuthorEmail\">{data[i].clientEmail}</div>\r\n                <div className=\"feedbackDate\">\r\n                  {data[i].createdOn.substring(0, 10) +\r\n                    ' ' +\r\n                    data[i].createdOn.substring(11, 16)}\r\n                </div>\r\n                <div>{actionButtons}</div>\r\n              </div>\r\n              <div className=\"feedbackText\">{data[i].feedbackText}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      console.log('elements', elements);\r\n    }\r\n\r\n    if (data !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"tableFunctionality\">\r\n            <p className=\"title\">Feedbacks</p>\r\n            <RecordsPerPage />\r\n            {createFeedbackButton}\r\n          </div>\r\n\r\n          {elements}\r\n          <PageButtons />\r\n          <CreateFeedbackModal />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    unwachedFeedbacks: state.unwachedFeedbacks,\r\n    employeeToken: state.employeeToken,\r\n    pagedTablesData: state.pagedTablesData,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onNewFeedbacksCheck: () => dispatch(actions.CheckUnwachedFeedbacks()),\r\n    onApprove: (activeMenu, feedback) =>\r\n      dispatch(actions.UpdateFeedback(activeMenu, feedback)),\r\n    onDelete: (id, activeMenu) =>\r\n      dispatch(actions.DeleteFeedback(id, activeMenu)),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);\r\n"]},"metadata":{},"sourceType":"module"}