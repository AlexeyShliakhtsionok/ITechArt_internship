{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Employees.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EmployeeList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qualification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\n        var role;\n        var qualification; // eslint-disable-next-line no-loop-func\n\n        this.props.responseDataList.roles.forEach(element => {\n          if (element.value === this.props.responseDataList.employees[i].role) {\n            role = element.name;\n          }\n        }); // eslint-disable-next-line no-loop-func\n\n        this.props.responseDataList.qualification.forEach(element => {\n          if (element.value === this.props.responseDataList.employees[i].qualification) {\n            qualification = element.name;\n          }\n        });\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: this.props.responseDataList.employees[i].employeeId,\n          onClick: () => {\n            this.props.setActiveId(this.props.responseDataList.employees[i].employeeId);\n            this.props.getEmployee(this.props.responseDataList.employees[i].employeeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n            this.props.getProfilePhotoByEmployeeId(this.props.singleResponseData.employeeId);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.responseDataList.employees[i].procedureType.procedureTypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: qualification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, this.props.responseDataList.employees[i].employeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.setCreateModalState();\n          },\n          children: \"New employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CreateEmployeeModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UpdateEmployeeModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    getEmployee: (id, activeMenu) => dispatch(actions.FetchSingleData(id, activeMenu)),\n    getProfilePhotoByEmployeeId: id => dispatch(actions.GetProfilePhotoByEmployeeId(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Employees.js"],"names":["React","connect","actions","CreateEmployeeModal","UpdateEmployeeModal","EmployeeList","PureComponent","render","props","responseDataList","elements","element","header","i","employees","length","role","qualification","roles","forEach","value","name","employeeId","setActiveId","getEmployee","activeMenu","setUpdateModalState","getProfilePhotoByEmployeeId","singleResponseData","firstName","lastName","phoneNumber","email","procedureType","procedureTypeName","concat","setCreateModalState","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","SetUpdateModalState","SetCreateModalState","id","SetActiveIdentifier","FetchSingleData","GetProfilePhotoByEmployeeId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateEmployeeModal from '../ModalWindowsComponents/CreateEmployeeModal.js';\r\nimport UpdateEmployeeModal from '../ModalWindowsComponents/UpdateEmployeeModal.js';\r\n\r\nclass EmployeeList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>FirstName</th>\r\n            <th>Lastname</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Procedure</th>\r\n            <th>Qualification</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.responseDataList.employees.length; i++) {\r\n        var role;\r\n        var qualification;\r\n\r\n        // eslint-disable-next-line no-loop-func\r\n        this.props.responseDataList.roles.forEach((element) => {\r\n          if (element.value === this.props.responseDataList.employees[i].role) {\r\n            role = element.name;\r\n          }\r\n        });\r\n\r\n        // eslint-disable-next-line no-loop-func\r\n        this.props.responseDataList.qualification.forEach((element) => {\r\n          if (\r\n            element.value ===\r\n            this.props.responseDataList.employees[i].qualification\r\n          ) {\r\n            qualification = element.name;\r\n          }\r\n        });\r\n\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={this.props.responseDataList.employees[i].employeeId}\r\n            id={this.props.responseDataList.employees[i].employeeId}\r\n            onClick={() => {\r\n              this.props.setActiveId(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n              );\r\n              this.props.getEmployee(\r\n                this.props.responseDataList.employees[i].employeeId,\r\n                this.props.activeMenu,\r\n              );\r\n              this.props.setUpdateModalState();\r\n              this.props.getProfilePhotoByEmployeeId(\r\n                this.props.singleResponseData.employeeId,\r\n              );\r\n            }}\r\n          >\r\n            <td>{this.props.responseDataList.employees[i].firstName}</td>\r\n            <td>{this.props.responseDataList.employees[i].lastName}</td>\r\n            <td>{this.props.responseDataList.employees[i].phoneNumber}</td>\r\n            <td>{this.props.responseDataList.employees[i].email}</td>\r\n            <td>{role}</td>\r\n            <td>\r\n              {\r\n                this.props.responseDataList.employees[i].procedureType\r\n                  .procedureTypeName\r\n              }\r\n            </td>\r\n            <td>{qualification}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.setCreateModalState();\r\n            }}\r\n          >\r\n            New employee\r\n          </button>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n              <CreateEmployeeModal />\r\n              <UpdateEmployeeModal />\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    getEmployee: (id, activeMenu) =>\r\n      dispatch(actions.FetchSingleData(id, activeMenu)),\r\n    getProfilePhotoByEmployeeId: (id) =>\r\n      dispatch(actions.GetProfilePhotoByEmployeeId(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\r\n"]},"metadata":{},"sourceType":"module"}