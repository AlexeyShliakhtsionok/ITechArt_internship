{"ast":null,"code":"import * as TYPES from './actionTypes';\nconst host = 'https://localhost:7275'; // Authorization of employees ==========================================\n\nexport function EmployeeAutorization(email, password) {\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeAutorizationSuccess(data));\n    });\n  };\n}\n_c = EmployeeAutorization;\nexport function EmployeeAutorizationSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\n    payload: data\n  };\n}\n_c2 = EmployeeAutorizationSuccess;\nexport function EmployeeLogout() {\n  return {\n    type: TYPES.EMPLOYEE_LOGOUT\n  };\n} //==============================================\n//==============================================\n//Get paged data of current table\n\n_c3 = EmployeeLogout;\nexport function FeetchMainTableData(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let sortOrder = arguments.length > 3 ? arguments[3] : undefined;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetAllClients${options}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetAllMaterials${options}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetAllProcedures${options}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetAllOrders${options}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetAllFeedbacks${options}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\n      break;\n\n    case 'ourStaffPage':\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu, sortOrder));\n    });\n  };\n}\n_c4 = FeetchMainTableData;\nexport function FeetchAllProcedureTypes() {\n  var requestURL = `${host}/ProcedureType/GetAllProcedureTypes`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, 'procedureTypesPage'));\n    });\n  };\n}\n_c5 = FeetchAllProcedureTypes;\nexport function FetchAllDonedOrders(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let sortOrder = arguments.length > 3 ? arguments[3] : undefined;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n} // export function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\n//   var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\n//   return (dispatch) => {\n//     fetch(requestURL)\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(response.statusText);\n//         }\n//         return response;\n//       })\n//       .then(async (response) => {\n//         const data = await response.json();\n//         dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n//       });\n//   };\n// }\n\n_c6 = FetchAllDonedOrders;\nexport function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\n  var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c7 = FeetchAllMediafiles;\nexport function FeetchMainTableDataSuccess(data, activeMenu, sortOrder) {\n  return {\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\n    payload: data,\n    identifier: activeMenu,\n    sortBy: sortOrder\n  };\n} //========================================================\n//========================================================\n//Get the data of choosen record of the table by ID\n\n_c8 = FeetchMainTableDataSuccess;\nexport function FetchActiveRecordData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\n      break;\n\n    case 'serviceTypesPage':\n      requestURL = `${host}/ProcedureType/GetProcedureTypeById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c9 = FetchActiveRecordData;\nexport function FetchClientByEmail(email) {\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        dispatch(FetchActiveRecordDataSuccess('Not found'));\n      }\n\n      console.log(response);\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c10 = FetchClientByEmail;\nexport function FetchActiveRecordDataSuccess(data) {\n  return {\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //Active identifier setting\n\n_c11 = FetchActiveRecordDataSuccess;\nexport function SetActiveIdentifier(id) {\n  return {\n    type: TYPES.ACTIVE_ID_SET,\n    payload: id\n  };\n} //========================================================\n//========================================================\n//Delete the data of choosen record of the table\n\n_c12 = SetActiveIdentifier;\nexport function DeleteServiceType(id) {\n  var requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c13 = DeleteServiceType;\nexport function DeleteData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\n      break;\n\n    case 'serviceTypesPage':\n      requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Update the data of choosen record of the table\n\n_c14 = DeleteData;\nexport function UpdateProcedureType(dataObject) {\n  var requestURL = `${host}/ProcedureType/UpdateProcedureType`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c15 = UpdateProcedureType;\nexport function UpdateData(activeMenu, dataObject) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/UpdateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/UpdateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/UpdateService`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/UpdateOrder`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/UpdateFeedback`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/UpdateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => {\n      dispatch(FeetchMainTableData(activeMenu));\n    });\n  };\n}\n_c16 = UpdateData;\nexport function UpdateMaterialAmount(dataObject) {\n  var requestURL = `${host}/Material/UpdateMaterialAmount`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c17 = UpdateMaterialAmount;\nexport function UpdateOrderStatus(id) {\n  var requestURL = `${host}/Order/UpdateOrderStatus`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(id)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FetchAllDonedOrders('donedOrdersPage')));\n  };\n} //========================================================\n//========================================================\n//Add new data\n\n_c18 = UpdateOrderStatus;\nexport function CreateNewProcedureType(dataObject) {\n  var requestURL = `${host}/ProcedureType/CreateProcedureType`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('servicesPage')));\n  };\n}\n_c19 = CreateNewProcedureType;\nexport function CreateNewManufacturer(dataObject) {\n  var requestURL = `${host}/MaterialManufacturer/CreateMaterialManufacturer`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('materialsPage')));\n  };\n}\n_c20 = CreateNewManufacturer;\nexport function CreateFeedback(activeMenu, dataObject) {\n  var requestURL = `${host}/Feedback/CreateFeedback`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(GetAllApprovedFeedbacks(activeMenu)));\n  };\n}\n_c21 = CreateFeedback;\nexport function CreateClientFromMain(dataObject) {\n  var requestURL = `${host}/Client/CreateClient`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData('ordersPage')));\n  };\n}\n_c22 = CreateClientFromMain;\nexport function AddData(activeMenu, dataObject) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/CreateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/CreateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/CreateProcedure`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/CreateOrder`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/CreateFeedback`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/CreateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Modal windows states processing functions\n\n_c23 = AddData;\nexport function SetEditModalState() {\n  return {\n    type: TYPES.EDIT_STATE\n  };\n}\n_c24 = SetEditModalState;\nexport function SetUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE\n  };\n}\n_c25 = SetUpdateModalState;\nexport function SetCreateModalState() {\n  return {\n    type: TYPES.CREATE_MODAL_WINDOW_STATE\n  };\n}\n_c26 = SetCreateModalState;\nexport function SetProcedureTypeCreateModalState() {\n  return {\n    type: TYPES.CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE\n  };\n}\n_c27 = SetProcedureTypeCreateModalState;\nexport function SetProcedureTypeUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE\n  };\n} //========================================================\n//========================================================\n// Order creation and updating functions\n// Feetcing of procedures by their types (for responsive select-list content change)\n\n_c28 = SetProcedureTypeUpdateModalState;\nexport function GetProceduresByType(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchProcedureSuccess(data));\n    });\n  };\n}\n_c29 = GetProceduresByType;\nexport function FeetchProcedureSuccess(data) {\n  return {\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of employees by procedures types (for responsive select-list content change)\n\n_c30 = FeetchProcedureSuccess;\nexport function GetEmployeesByProcedureType(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchEmployeesSuccess(data));\n    });\n  };\n}\n_c31 = GetEmployeesByProcedureType;\nexport function FeetchEmployeesSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of schedule with avaliable time intervals\n\n_c32 = FeetchEmployeesSuccess;\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\n  return dispatch => {\n    fetch(`${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchAvaliableTimesSuccess(data));\n    });\n  };\n}\n_c33 = GetAvaliableTimes;\nexport function FeetchAvaliableTimesSuccess(data) {\n  return {\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Setting of active day and procedure during making order\n\n_c34 = FeetchAvaliableTimesSuccess;\nexport function SetActiveDate(data) {\n  return {\n    type: TYPES.SET_ACTIVE_DATE,\n    payload: data\n  };\n}\n_c35 = SetActiveDate;\nexport function SetActiveTime(data) {\n  return {\n    type: TYPES.SET_ACTIVE_TIME,\n    payload: data\n  };\n}\n_c36 = SetActiveTime;\nexport function SetActiveProcedureType(id) {\n  return dispatch => {\n    fetch(`${host}/ProcedureType/GetProcedureTypeById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveProcedureTypeSuccess(data));\n    });\n  };\n}\n_c37 = SetActiveProcedureType;\nexport function SetActiveProcedureTypeSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE_TYPE,\n    payload: data\n  };\n}\n_c38 = SetActiveProcedureTypeSuccess;\nexport function SetActiveProcedure(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveProcedureSuccess(data));\n    });\n  };\n}\n_c39 = SetActiveProcedure;\nexport function SetActiveProcedureSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE,\n    payload: data\n  };\n}\n_c40 = SetActiveProcedureSuccess;\nexport function SetActiveClient(id) {\n  return dispatch => {\n    fetch(`${host}/Client/GetClientById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveClientSuccess(data));\n    });\n  };\n}\n_c41 = SetActiveClient;\nexport function SetActiveClientSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_CLIENT,\n    payload: data\n  };\n}\n_c42 = SetActiveClientSuccess;\nexport function SetActiveEmployee(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetEmployeeViewModelById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveEmployeeSuccess(data));\n    });\n  };\n}\n_c43 = SetActiveEmployee;\nexport function SetActiveEmployeeSuccess(data) {\n  console.log(data);\n  return {\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\n    payload: data\n  };\n} // Set booking status\n\n_c44 = SetActiveEmployeeSuccess;\nexport function SetBookingStatus() {\n  return {\n    type: TYPES.SET_BOOKING_STATUS\n  };\n} // Set client registration status\n\n_c45 = SetBookingStatus;\nexport function RedirectToOrdering() {\n  return {\n    type: TYPES.REDIRECT_TO_ORDERING\n  };\n} // Set order creation status (from main by client)\n\n_c46 = RedirectToOrdering;\nexport function SetOrderStatus() {\n  return {\n    type: TYPES.SET_ORDER_CREATION_STATUS\n  };\n}\n_c47 = SetOrderStatus;\nexport function ResetActiveSingleData() {\n  return {\n    type: TYPES.RESET_SINGLE_DATA\n  };\n} // Reset react-select single value (resetting of single select field value)\n\n_c48 = ResetActiveSingleData;\nexport function ResetSelectedValue() {\n  return {\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE\n  };\n} // Reset react-select values (resetting of all values of selects)\n\n_c49 = ResetSelectedValue;\nexport function ResetSelectedValues() {\n  return {\n    type: TYPES.RESET_SELECTED_VALUES\n  };\n} // Set react-select values (set each selected value to the state)\n\n_c50 = ResetSelectedValues;\nexport function SetSelectedValue(inputName) {\n  return {\n    type: TYPES.SET_SELECTED_VALUE,\n    payload: inputName\n  };\n} // ================Add order from main menu\n\n_c51 = SetSelectedValue;\nexport function AddOrder(dataObject) {\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} //========================================================\n//========================================================\n\n_c52 = AddOrder;\nexport function SetActiveMenu(activeMenu) {\n  return {\n    type: TYPES.SET_ACTIVE_MENU,\n    payload: activeMenu\n  };\n}\n_c53 = SetActiveMenu;\nexport function ResetActiveMenu() {\n  return {\n    type: TYPES.RESET_ACTIVE_MENU\n  };\n}\n_c54 = ResetActiveMenu;\nexport function SetActiveMediatype(type) {\n  return {\n    type: TYPES.SET_ACTIVE_MEDIA_TYPE,\n    payload: type\n  };\n}\n_c55 = SetActiveMediatype;\nexport function GetImage(id) {\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\n    });\n  };\n} //========================================================\n//========================================================\n// Get all feedback to display for the clients\n\n_c56 = GetImage;\nexport function GetAllApprovedFeedbacks(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  let pageNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}`;\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks${options}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      console.log(activeMenu);\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n} // Profile photo uploading\n\n_c57 = GetAllApprovedFeedbacks;\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: profilePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('staffPage'));\n      dispatch(GetProfilePhotoByEmployeeId(employeeId));\n      dispatch(FetchActiveRecordData(employeeId, 'staffPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} // Other photo uploading\n\n_c58 = UploadProfilePhoto;\nexport function UploadPhoto(employeeId, mediaType, mediafile) {\n  var requestURL = `${host}/MediaFile/UploadMediaFile?employeeId=${employeeId}&type=${mediaType}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: mediafile\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('mediaFilesPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c59 = UploadPhoto;\nexport function GetProfilePhotoByEmployeeId(employeeId) {\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\n    }).then(imageObjectURL => {\n      return imageObjectURL;\n    });\n  };\n}\n_c60 = GetProfilePhotoByEmployeeId;\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\n  return {\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n}\n_c61 = FeetchProfilePhotoSuccess;\nexport function UploadProcedureTypePhoto(procedureTypeId, procedureTypePhoto) {\n  var requestURL = `${host}/MediaFile/UploadProcedureTypePhoto?procedureTypeId=${procedureTypeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: procedureTypePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).then(() => {\n      dispatch(FeetchMainTableData('servicesPage'));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c62 = UploadProcedureTypePhoto;\nexport function GetProcedureTypePhotoById(procedureTypeId) {\n  var requestURL = `${host}/MediaFile/GetProcedureTypePhotoById?id=${procedureTypeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProcedureTypePhotoSuccess(imageObjectURL));\n    }).then(imageObjectURL => {\n      return imageObjectURL;\n    });\n  };\n}\n_c63 = GetProcedureTypePhotoById;\nexport function FeetchProcedureTypePhotoSuccess(imageObjectURL) {\n  return {\n    type: TYPES.FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n} // Set buttonState\n\n_c64 = FeetchProcedureTypePhotoSuccess;\nexport function SetButtonState() {\n  return {\n    type: TYPES.SET_BUTTON_MODAL_STATE\n  };\n}\n_c65 = SetButtonState;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65;\n\n$RefreshReg$(_c, \"EmployeeAutorization\");\n$RefreshReg$(_c2, \"EmployeeAutorizationSuccess\");\n$RefreshReg$(_c3, \"EmployeeLogout\");\n$RefreshReg$(_c4, \"FeetchMainTableData\");\n$RefreshReg$(_c5, \"FeetchAllProcedureTypes\");\n$RefreshReg$(_c6, \"FetchAllDonedOrders\");\n$RefreshReg$(_c7, \"FeetchAllMediafiles\");\n$RefreshReg$(_c8, \"FeetchMainTableDataSuccess\");\n$RefreshReg$(_c9, \"FetchActiveRecordData\");\n$RefreshReg$(_c10, \"FetchClientByEmail\");\n$RefreshReg$(_c11, \"FetchActiveRecordDataSuccess\");\n$RefreshReg$(_c12, \"SetActiveIdentifier\");\n$RefreshReg$(_c13, \"DeleteServiceType\");\n$RefreshReg$(_c14, \"DeleteData\");\n$RefreshReg$(_c15, \"UpdateProcedureType\");\n$RefreshReg$(_c16, \"UpdateData\");\n$RefreshReg$(_c17, \"UpdateMaterialAmount\");\n$RefreshReg$(_c18, \"UpdateOrderStatus\");\n$RefreshReg$(_c19, \"CreateNewProcedureType\");\n$RefreshReg$(_c20, \"CreateNewManufacturer\");\n$RefreshReg$(_c21, \"CreateFeedback\");\n$RefreshReg$(_c22, \"CreateClientFromMain\");\n$RefreshReg$(_c23, \"AddData\");\n$RefreshReg$(_c24, \"SetEditModalState\");\n$RefreshReg$(_c25, \"SetUpdateModalState\");\n$RefreshReg$(_c26, \"SetCreateModalState\");\n$RefreshReg$(_c27, \"SetProcedureTypeCreateModalState\");\n$RefreshReg$(_c28, \"SetProcedureTypeUpdateModalState\");\n$RefreshReg$(_c29, \"GetProceduresByType\");\n$RefreshReg$(_c30, \"FeetchProcedureSuccess\");\n$RefreshReg$(_c31, \"GetEmployeesByProcedureType\");\n$RefreshReg$(_c32, \"FeetchEmployeesSuccess\");\n$RefreshReg$(_c33, \"GetAvaliableTimes\");\n$RefreshReg$(_c34, \"FeetchAvaliableTimesSuccess\");\n$RefreshReg$(_c35, \"SetActiveDate\");\n$RefreshReg$(_c36, \"SetActiveTime\");\n$RefreshReg$(_c37, \"SetActiveProcedureType\");\n$RefreshReg$(_c38, \"SetActiveProcedureTypeSuccess\");\n$RefreshReg$(_c39, \"SetActiveProcedure\");\n$RefreshReg$(_c40, \"SetActiveProcedureSuccess\");\n$RefreshReg$(_c41, \"SetActiveClient\");\n$RefreshReg$(_c42, \"SetActiveClientSuccess\");\n$RefreshReg$(_c43, \"SetActiveEmployee\");\n$RefreshReg$(_c44, \"SetActiveEmployeeSuccess\");\n$RefreshReg$(_c45, \"SetBookingStatus\");\n$RefreshReg$(_c46, \"RedirectToOrdering\");\n$RefreshReg$(_c47, \"SetOrderStatus\");\n$RefreshReg$(_c48, \"ResetActiveSingleData\");\n$RefreshReg$(_c49, \"ResetSelectedValue\");\n$RefreshReg$(_c50, \"ResetSelectedValues\");\n$RefreshReg$(_c51, \"SetSelectedValue\");\n$RefreshReg$(_c52, \"AddOrder\");\n$RefreshReg$(_c53, \"SetActiveMenu\");\n$RefreshReg$(_c54, \"ResetActiveMenu\");\n$RefreshReg$(_c55, \"SetActiveMediatype\");\n$RefreshReg$(_c56, \"GetImage\");\n$RefreshReg$(_c57, \"GetAllApprovedFeedbacks\");\n$RefreshReg$(_c58, \"UploadProfilePhoto\");\n$RefreshReg$(_c59, \"UploadPhoto\");\n$RefreshReg$(_c60, \"GetProfilePhotoByEmployeeId\");\n$RefreshReg$(_c61, \"FeetchProfilePhotoSuccess\");\n$RefreshReg$(_c62, \"UploadProcedureTypePhoto\");\n$RefreshReg$(_c63, \"GetProcedureTypePhotoById\");\n$RefreshReg$(_c64, \"FeetchProcedureTypePhotoSuccess\");\n$RefreshReg$(_c65, \"SetButtonState\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Redux/Actions/actions.js"],"names":["TYPES","host","EmployeeAutorization","email","password","requestURL","dispatch","fetch","method","then","response","ok","Error","statusText","data","json","EmployeeAutorizationSuccess","type","EMPLOYEE_AUTORIZATION_SUCCESS","payload","EmployeeLogout","EMPLOYEE_LOGOUT","FeetchMainTableData","activeMenu","itemsPerPage","pageNumber","sortOrder","options","FeetchMainTableDataSuccess","FeetchAllProcedureTypes","FetchAllDonedOrders","FeetchAllMediafiles","mediafileType","employeeId","FETCH_TABLE_DATA_SUCCESS","identifier","sortBy","FetchActiveRecordData","id","FetchActiveRecordDataSuccess","FetchClientByEmail","console","log","SINGLE_RECORD_FETCH_DATA_SUCCESS","SetActiveIdentifier","ACTIVE_ID_SET","DeleteServiceType","cors","DeleteData","UpdateProcedureType","dataObject","headers","Headers","Accept","body","JSON","stringify","status","catch","err","UpdateData","UpdateMaterialAmount","UpdateOrderStatus","CreateNewProcedureType","CreateNewManufacturer","CreateFeedback","GetAllApprovedFeedbacks","CreateClientFromMain","AddData","SetEditModalState","EDIT_STATE","SetUpdateModalState","UPDATE_MODAL_WINDOW_STATE","SetCreateModalState","CREATE_MODAL_WINDOW_STATE","SetProcedureTypeCreateModalState","CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE","SetProcedureTypeUpdateModalState","UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE","GetProceduresByType","FeetchProcedureSuccess","PROCEDURE_FETCH_DATA_SUCCESS","GetEmployeesByProcedureType","FeetchEmployeesSuccess","EMPLOYEE_FETCH_DATA_SUCCESS","GetAvaliableTimes","date","procedureId","open","close","FeetchAvaliableTimesSuccess","SCHEDULE_FETCH_DATA_SUCCESS","SetActiveDate","SET_ACTIVE_DATE","SetActiveTime","SET_ACTIVE_TIME","SetActiveProcedureType","SetActiveProcedureTypeSuccess","SET_ACTIVE_PROCEDURE_TYPE","SetActiveProcedure","SetActiveProcedureSuccess","SET_ACTIVE_PROCEDURE","SetActiveClient","SetActiveClientSuccess","SET_ACTIVE_CLIENT","SetActiveEmployee","SetActiveEmployeeSuccess","SET_ACTIVE_EMPLOYEE","SetBookingStatus","SET_BOOKING_STATUS","RedirectToOrdering","REDIRECT_TO_ORDERING","SetOrderStatus","SET_ORDER_CREATION_STATUS","ResetActiveSingleData","RESET_SINGLE_DATA","ResetSelectedValue","RESET_SINGLE_SELECTED_VALUE","ResetSelectedValues","RESET_SELECTED_VALUES","SetSelectedValue","inputName","SET_SELECTED_VALUE","AddOrder","SetActiveMenu","SET_ACTIVE_MENU","ResetActiveMenu","RESET_ACTIVE_MENU","SetActiveMediatype","SET_ACTIVE_MEDIA_TYPE","GetImage","blob","imageBlob","imageObjectURL","URL","createObjectURL","UploadProfilePhoto","profilePhoto","GetProfilePhotoByEmployeeId","UploadPhoto","mediaType","mediafile","FeetchProfilePhotoSuccess","FETCH_PROFILE_PHOTO_SUCCESS","UploadProcedureTypePhoto","procedureTypeId","procedureTypePhoto","GetProcedureTypePhotoById","FeetchProcedureTypePhotoSuccess","FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS","SetButtonState","SET_BUTTON_MODAL_STATE"],"mappings":"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","sourcesContent":["import * as TYPES from './actionTypes';\r\nconst host = 'https://localhost:7275';\r\n\r\n// Authorization of employees ==========================================\r\n\r\nexport function EmployeeAutorization(email, password) {\r\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'post',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeAutorizationSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function EmployeeAutorizationSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function EmployeeLogout() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_LOGOUT,\r\n  };\r\n}\r\n\r\n//==============================================\r\n//==============================================\r\n//Get paged data of current table\r\n\r\nexport function FeetchMainTableData(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n  sortOrder,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetAllClients${options}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetAllMaterials${options}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetAllProcedures${options}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetAllOrders${options}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetAllFeedbacks${options}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\r\n      break;\r\n    case 'ourStaffPage':\r\n      requestURL = `${host}/Employee/GetAllEmployees${options}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu, sortOrder));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAllProcedureTypes() {\r\n  var requestURL = `${host}/ProcedureType/GetAllProcedureTypes`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, 'procedureTypesPage'));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchAllDonedOrders(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n  sortOrder,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}&sortBy=${sortOrder}`;\r\n  var requestURL = `${host}/Order/GetAllDonedOrders${options}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\n// export function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\r\n//   var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\r\n//   return (dispatch) => {\r\n//     fetch(requestURL)\r\n//       .then((response) => {\r\n//         if (!response.ok) {\r\n//           throw new Error(response.statusText);\r\n//         }\r\n//         return response;\r\n//       })\r\n//       .then(async (response) => {\r\n//         const data = await response.json();\r\n//         dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n//       });\r\n//   };\r\n// }\r\n\r\nexport function FeetchAllMediafiles(activeMenu, mediafileType, employeeId) {\r\n  var requestURL = `${host}/MediaFile/GetAllMediaFiles?type=${mediafileType}&employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchMainTableDataSuccess(data, activeMenu, sortOrder) {\r\n  return {\r\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\r\n    payload: data,\r\n    identifier: activeMenu,\r\n    sortBy: sortOrder,\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n//Get the data of choosen record of the table by ID\r\n\r\nexport function FetchActiveRecordData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\r\n      break;\r\n    case 'serviceTypesPage':\r\n      requestURL = `${host}/ProcedureType/GetProcedureTypeById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchClientByEmail(email) {\r\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(FetchActiveRecordDataSuccess('Not found'));\r\n        }\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchActiveRecordDataSuccess(data) {\r\n  return {\r\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//Active identifier setting\r\nexport function SetActiveIdentifier(id) {\r\n  return {\r\n    type: TYPES.ACTIVE_ID_SET,\r\n    payload: id,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n//Delete the data of choosen record of the table\r\n\r\nexport function DeleteServiceType(id) {\r\n  var requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchMainTableData('servicesPage')),\r\n    );\r\n  };\r\n}\r\n\r\nexport function DeleteData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\r\n      break;\r\n    case 'serviceTypesPage':\r\n      requestURL = `${host}/ProcedureType/DeleteProcedureTypeById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchMainTableData(activeMenu)),\r\n    );\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Update the data of choosen record of the table\r\n\r\nexport function UpdateProcedureType(dataObject) {\r\n  var requestURL = `${host}/ProcedureType/UpdateProcedureType`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('servicesPage')));\r\n  };\r\n}\r\n\r\nexport function UpdateData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/UpdateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/UpdateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/UpdateService`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/UpdateOrder`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/UpdateFeedback`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/UpdateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData(activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function UpdateMaterialAmount(dataObject) {\r\n  var requestURL = `${host}/Material/UpdateMaterialAmount`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function UpdateOrderStatus(id) {\r\n  var requestURL = `${host}/Order/UpdateOrderStatus`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(id),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FetchAllDonedOrders('donedOrdersPage')));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n//Add new data\r\n\r\nexport function CreateNewProcedureType(dataObject) {\r\n  var requestURL = `${host}/ProcedureType/CreateProcedureType`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('servicesPage')));\r\n  };\r\n}\r\n\r\nexport function CreateNewManufacturer(dataObject) {\r\n  var requestURL = `${host}/MaterialManufacturer/CreateMaterialManufacturer`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('materialsPage')));\r\n  };\r\n}\r\n\r\nexport function CreateFeedback(activeMenu, dataObject) {\r\n  var requestURL = `${host}/Feedback/CreateFeedback`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(GetAllApprovedFeedbacks(activeMenu)));\r\n  };\r\n}\r\n\r\nexport function CreateClientFromMain(dataObject) {\r\n  var requestURL = `${host}/Client/CreateClient`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData('ordersPage')));\r\n  };\r\n}\r\n\r\nexport function AddData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/CreateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/CreateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/CreateProcedure`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/CreateOrder`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/CreateFeedback`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/CreateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData(activeMenu)));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Modal windows states processing functions\r\n\r\nexport function SetEditModalState() {\r\n  return {\r\n    type: TYPES.EDIT_STATE,\r\n  };\r\n}\r\n\r\nexport function SetUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetProcedureTypeCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetProcedureTypeUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_PROCEDURE_TYPE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n// Order creation and updating functions\r\n// Feetcing of procedures by their types (for responsive select-list content change)\r\nexport function GetProceduresByType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of employees by procedures types (for responsive select-list content change)\r\nexport function GetEmployeesByProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchEmployeesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchEmployeesSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of schedule with avaliable time intervals\r\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`,\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchAvaliableTimesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAvaliableTimesSuccess(data) {\r\n  return {\r\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Setting of active day and procedure during making order\r\n\r\nexport function SetActiveDate(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_DATE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveTime(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_TIME,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/ProcedureType/GetProcedureTypeById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveProcedureTypeSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveProcedureTypeSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE_TYPE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedure(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveClient(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Client/GetClientById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveClientSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveClientSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_CLIENT,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveEmployee(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetEmployeeViewModelById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveEmployeeSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveEmployeeSuccess(data) {\r\n  console.log(data);\r\n  return {\r\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Set booking status\r\nexport function SetBookingStatus() {\r\n  return {\r\n    type: TYPES.SET_BOOKING_STATUS,\r\n  };\r\n}\r\n// Set client registration status\r\nexport function RedirectToOrdering() {\r\n  return {\r\n    type: TYPES.REDIRECT_TO_ORDERING,\r\n  };\r\n}\r\n// Set order creation status (from main by client)\r\nexport function SetOrderStatus() {\r\n  return {\r\n    type: TYPES.SET_ORDER_CREATION_STATUS,\r\n  };\r\n}\r\n\r\nexport function ResetActiveSingleData() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_DATA,\r\n  };\r\n}\r\n\r\n// Reset react-select single value (resetting of single select field value)\r\nexport function ResetSelectedValue() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE,\r\n  };\r\n}\r\n\r\n// Reset react-select values (resetting of all values of selects)\r\nexport function ResetSelectedValues() {\r\n  return {\r\n    type: TYPES.RESET_SELECTED_VALUES,\r\n  };\r\n}\r\n\r\n// Set react-select values (set each selected value to the state)\r\nexport function SetSelectedValue(inputName) {\r\n  return {\r\n    type: TYPES.SET_SELECTED_VALUE,\r\n    payload: inputName,\r\n  };\r\n}\r\n\r\n// ================Add order from main menu\r\nexport function AddOrder(dataObject) {\r\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\nexport function SetActiveMenu(activeMenu) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_MENU,\r\n    payload: activeMenu,\r\n  };\r\n}\r\n\r\nexport function ResetActiveMenu() {\r\n  return {\r\n    type: TYPES.RESET_ACTIVE_MENU,\r\n  };\r\n}\r\n\r\nexport function SetActiveMediatype(type) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_MEDIA_TYPE,\r\n    payload: type,\r\n  };\r\n}\r\n\r\nexport function GetImage(id) {\r\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\r\n      });\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Get all feedback to display for the clients\r\nexport function GetAllApprovedFeedbacks(\r\n  activeMenu,\r\n  itemsPerPage = 12,\r\n  pageNumber = 1,\r\n) {\r\n  var options = `?elementsPerPage=${itemsPerPage}&pageNumber=${pageNumber}`;\r\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks${options}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        console.log(activeMenu);\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\n// Profile photo uploading\r\n\r\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\r\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: profilePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('staffPage'));\r\n        dispatch(GetProfilePhotoByEmployeeId(employeeId));\r\n        dispatch(FetchActiveRecordData(employeeId, 'staffPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\n// Other photo uploading\r\n\r\nexport function UploadPhoto(employeeId, mediaType, mediafile) {\r\n  var requestURL = `${host}/MediaFile/UploadMediaFile?employeeId=${employeeId}&type=${mediaType}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: mediafile,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('mediaFilesPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProfilePhotoByEmployeeId(employeeId) {\r\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\r\n      })\r\n      .then((imageObjectURL) => {\r\n        return imageObjectURL;\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\r\n  return {\r\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n\r\nexport function UploadProcedureTypePhoto(procedureTypeId, procedureTypePhoto) {\r\n  var requestURL = `${host}/MediaFile/UploadProcedureTypePhoto?procedureTypeId=${procedureTypeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: procedureTypePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(FeetchMainTableData('servicesPage'));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProcedureTypePhotoById(procedureTypeId) {\r\n  var requestURL = `${host}/MediaFile/GetProcedureTypePhotoById?id=${procedureTypeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProcedureTypePhotoSuccess(imageObjectURL));\r\n      })\r\n      .then((imageObjectURL) => {\r\n        return imageObjectURL;\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureTypePhotoSuccess(imageObjectURL) {\r\n  return {\r\n    type: TYPES.FETCH_PROCEDURE_TYPE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n\r\n// Set buttonState\r\n\r\nexport function SetButtonState() {\r\n  return {\r\n    type: TYPES.SET_BUTTON_MODAL_STATE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}