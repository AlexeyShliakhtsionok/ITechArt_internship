{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\CompletedOrdersTable.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CompletedOrdersList extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n\n    if (data.orders !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Material\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < data.orders.length; i++) {\n        // 'Для списания материалов'\n        var materials = []; // eslint-disable-next-line no-loop-func\n\n        data.materials.forEach(material => {\n          material.procedures.forEach(procedure => {\n            if (procedure.procedureId === data.orders[i].procedureId) {\n              materials.push(material);\n            }\n          });\n        });\n        console.log(materials);\n        let materialsAmount = '';\n\n        for (let j = 0; j < 1; j++) {\n          let item = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [data.materials[i].materialName, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 48\n            }, this), \" ,mg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this);\n\n          materialsAmount.concat(item);\n        }\n\n        console.log(materialsAmount); //========================================\n\n        var serviceDateInfo = String(data.orders[i].dateOfService).substring(0, 10) + ' ' + String(data.orders[i].dateOfService).substring(11, 16);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: data.orders[i].orderId // eslint-disable-next-line no-loop-func\n          ,\n          onClick: () => {\n            if (this.props.isEditing) {\n              this.props.onEdit();\n            }\n\n            this.props.setActiveId(data.orders[i].orderId);\n            this.props.getOrder(data.orders[i].orderId, this.props.activeMenu);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: serviceDateInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].clientFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].clientPhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].clientEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].procedureCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.orders[i].employeeFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), materialsAmount]\n        }, data.orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      if (data !== '') {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableFunctionality\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"Completed orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RecordsPerPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataTable\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"tableStyle\",\n              children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: elements\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PageButtons, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There is no Data in DB...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    isEditing: state.isEditing\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getOrders: (rowsPerPage, pageNumber) => dispatch(actions.FeetchMainTableData('ordersPage', rowsPerPage, pageNumber)),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    getOrder: (id, activeMenu) => dispatch(actions.FetchActiveRecordData(id, activeMenu))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedOrdersList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/CompletedOrdersTable.js"],"names":["React","connect","actions","RecordsPerPage","PageButtons","SearchInput","CompletedOrdersList","PureComponent","render","data","props","pagedTablesData","orders","elements","element","header","i","length","materials","forEach","material","procedures","procedure","procedureId","push","console","log","materialsAmount","j","item","materialName","concat","serviceDateInfo","String","dateOfService","substring","orderId","isEditing","onEdit","setActiveId","getOrder","activeMenu","clientFullName","clientPhoneNumber","clientEmail","procedureName","procedureCost","employeeFullName","mapStateToProps","state","singleResponseData","activeId","mapDispatchToProps","dispatch","getOrders","rowsPerPage","pageNumber","FeetchMainTableData","id","SetActiveIdentifier","FetchActiveRecordData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport RecordsPerPage from './PagesCountAndNavigationComponrnts/RecordsPerPageButtons';\r\nimport PageButtons from './PagesCountAndNavigationComponrnts/PagesButtons';\r\nimport SearchInput from './PagesCountAndNavigationComponrnts/SearchInput.js';\r\n\r\nclass CompletedOrdersList extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    if (data.orders !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n            <th>Material</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n      for (let i = 0; i < data.orders.length; i++) {\r\n        // 'Для списания материалов'\r\n        var materials = [];\r\n        // eslint-disable-next-line no-loop-func\r\n        data.materials.forEach((material) => {\r\n          material.procedures.forEach((procedure) => {\r\n            if (procedure.procedureId === data.orders[i].procedureId) {\r\n              materials.push(material);\r\n            }\r\n          });\r\n        });\r\n\r\n        console.log(materials);\r\n        let materialsAmount = '';\r\n\r\n        for (let j = 0; j < 1; j++) {\r\n          let item = (\r\n            <p>\r\n              {data.materials[i].materialName} <input type=\"text\" /> ,mg\r\n            </p>\r\n          );\r\n          materialsAmount.concat(item);\r\n        }\r\n        console.log(materialsAmount);\r\n        //========================================\r\n        var serviceDateInfo =\r\n          String(data.orders[i].dateOfService).substring(0, 10) +\r\n          ' ' +\r\n          String(data.orders[i].dateOfService).substring(11, 16);\r\n\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={data.orders[i].orderId}\r\n            id={data.orders[i].orderId}\r\n            // eslint-disable-next-line no-loop-func\r\n            onClick={() => {\r\n              if (this.props.isEditing) {\r\n                this.props.onEdit();\r\n              }\r\n              this.props.setActiveId(data.orders[i].orderId);\r\n              this.props.getOrder(\r\n                data.orders[i].orderId,\r\n                this.props.activeMenu,\r\n              );\r\n            }}\r\n          >\r\n            <td>{serviceDateInfo}</td>\r\n            <td>{data.orders[i].clientFullName}</td>\r\n            <td>{data.orders[i].clientPhoneNumber}</td>\r\n            <td>{data.orders[i].clientEmail}</td>\r\n            <td>{data.orders[i].procedureName}</td>\r\n            <td>{data.orders[i].procedureCost}</td>\r\n            <td>{data.orders[i].employeeFullName}</td>\r\n            {materialsAmount}\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      if (data !== '') {\r\n        return (\r\n          <>\r\n            <div className=\"tableFunctionality\">\r\n              <p className=\"title\">Completed orders</p>\r\n              <RecordsPerPage />\r\n              <SearchInput />\r\n            </div>\r\n\r\n            <div className=\"dataTable\">\r\n              <table className=\"tableStyle\">\r\n                {header}\r\n                <tbody>{elements}</tbody>\r\n                <PageButtons />\r\n              </table>\r\n            </div>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <p>There is no Data in DB...</p>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    isEditing: state.isEditing,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getOrders: (rowsPerPage, pageNumber) =>\r\n      dispatch(\r\n        actions.FeetchMainTableData('ordersPage', rowsPerPage, pageNumber),\r\n      ),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    getOrder: (id, activeMenu) =>\r\n      dispatch(actions.FetchActiveRecordData(id, activeMenu)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CompletedOrdersList);\r\n"]},"metadata":{},"sourceType":"module"}