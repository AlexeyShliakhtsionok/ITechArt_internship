{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateOrderModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetUpdateModalState, SetEditState, DeleteData, UpdateData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateOrderModal extends React.PureComponent {\n  render() {\n    var orderInfoArea;\n    var actionButtons;\n\n    if (this.props.singleResponseData !== '') {\n      var clientName = this.props.singleResponseData.client.firstName + this.props.singleResponseData.client.lastName;\n      var employeeName = this.props.singleResponseData.employee.firstName + this.props.singleResponseData.employee.lastName;\n    }\n\n    var orderDate = this.props.singleResponseData.dateOfService;\n    var orderToUpdate = {\n      dateOfService: this.props.activeDate,\n      client: this.props.activeClient,\n      procedure: this.props.activeProcedure,\n      employee: this.props.activeEmployee\n    };\n    var clientList = [];\n    this.props.responseDataList.clients.forEach(element => {\n      clientList.push({\n        value: element.clientId,\n        label: element.firstName + ' ' + element.lastName\n      });\n    });\n    var procedureTypesList = [];\n    this.props.responseDataList.procedureTypes.forEach(element => {\n      procedureTypesList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var procedureList = [];\n    this.props.responseDataList.procedures.forEach(element => {\n      procedureList.push({\n        value: element.procedureId,\n        label: element.procedureName\n      });\n    });\n    var employeeList = [];\n    this.props.responseDataList.employees.forEach(element => {\n      employeeList.push({\n        value: element.employeeId,\n        label: element.firstName + ' ' + element.lastName\n      });\n    });\n\n    if (this.props.singleResponseData !== '') {\n      var scheduleTimesList = []; // this.props.schedule.forEach((time) => {\n      //   scheduleTimesList.push({\n      //     value: time,\n      //     label: time.substr(11),\n      //   });\n      // });\n    }\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n      orderInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date of service: \", orderDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Client name: \", clientName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Employee: \", employeeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time of service: \", orderDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, orderToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n      orderInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Date of service:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: orderDate,\n              onChange: e => {\n                orderToUpdate.dateOfService = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Client name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                this.props.clients.forEach(client => {\n                  if (client.clientId === data.value) orderToUpdate.client = client;\n                });\n              },\n              options: clientList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Procedure type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                this.props.procedureTypes.forEach(type => {\n                  if (type.procedureTypeId === data.value) orderToUpdate.procedureType = type;\n                });\n              },\n              options: procedureTypesList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Procedure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                this.props.procedures.forEach(procedure => {\n                  if (procedure.procedureId === data.value) orderToUpdate.procedure = procedure;\n                });\n              },\n              options: procedureList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Employee:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                this.props.employees.forEach(employee => {\n                  if (employee.employeeId === data.value) orderToUpdate.employee = employee;\n                });\n              },\n              options: employeeList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Time of service:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                orderToUpdate.employee = data.value;\n              },\n              options: scheduleTimesList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: orderInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    schedule: state.schedule\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: (id, menu) => {\n      dispatch(DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateOrderModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateOrderModal.js"],"names":["React","connect","Modal","SetUpdateModalState","SetEditState","DeleteData","UpdateData","Select","UpdateOrderModal","PureComponent","render","orderInfoArea","actionButtons","props","singleResponseData","clientName","client","firstName","lastName","employeeName","employee","orderDate","dateOfService","orderToUpdate","activeDate","activeClient","procedure","activeProcedure","activeEmployee","clientList","responseDataList","clients","forEach","element","push","value","clientId","label","procedureTypesList","procedureTypes","text","procedureList","procedures","procedureId","procedureName","employeeList","employees","employeeId","scheduleTimesList","isEditing","onEdit","onDelete","activeId","activeMenu","setUpdateModalState","onUpdate","e","target","data","type","procedureTypeId","procedureType","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","mapStateToProps","state","schedule","mapDispatchToProps","dispatch","id","menu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetUpdateModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n  UpdateData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass UpdateOrderModal extends React.PureComponent {\r\n  render() {\r\n    var orderInfoArea;\r\n    var actionButtons;\r\n    if (this.props.singleResponseData !== '') {\r\n      var clientName =\r\n        this.props.singleResponseData.client.firstName +\r\n        this.props.singleResponseData.client.lastName;\r\n      var employeeName =\r\n        this.props.singleResponseData.employee.firstName +\r\n        this.props.singleResponseData.employee.lastName;\r\n    }\r\n\r\n    var orderDate = this.props.singleResponseData.dateOfService;\r\n\r\n    var orderToUpdate = {\r\n      dateOfService: this.props.activeDate,\r\n      client: this.props.activeClient,\r\n      procedure: this.props.activeProcedure,\r\n      employee: this.props.activeEmployee,\r\n    };\r\n\r\n    var clientList = [];\r\n    this.props.responseDataList.clients.forEach((element) => {\r\n      clientList.push({\r\n        value: element.clientId,\r\n        label: element.firstName + ' ' + element.lastName,\r\n      });\r\n    });\r\n\r\n    var procedureTypesList = [];\r\n    this.props.responseDataList.procedureTypes.forEach((element) => {\r\n      procedureTypesList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n\r\n    var procedureList = [];\r\n    this.props.responseDataList.procedures.forEach((element) => {\r\n      procedureList.push({\r\n        value: element.procedureId,\r\n        label: element.procedureName,\r\n      });\r\n    });\r\n\r\n    var employeeList = [];\r\n\r\n    this.props.responseDataList.employees.forEach((element) => {\r\n      employeeList.push({\r\n        value: element.employeeId,\r\n        label: element.firstName + ' ' + element.lastName,\r\n      });\r\n    });\r\n\r\n    if (this.props.singleResponseData !== '') {\r\n      var scheduleTimesList = [];\r\n\r\n      // this.props.schedule.forEach((time) => {\r\n      //   scheduleTimesList.push({\r\n      //     value: time,\r\n      //     label: time.substr(11),\r\n      //   });\r\n      // });\r\n    }\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit order\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete order\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      orderInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <p>Date of service: {orderDate}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Client name: {clientName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>\r\n              Procedure type:\r\n              {/* {this.props.singleResponseData.procedureType.procedureTypeName} */}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>\r\n              Procedure:\r\n              {/* {this.props.singleResponseData.procedure.procedureName} */}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Employee: {employeeName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Time of service: {orderDate} </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, orderToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      orderInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Date of service:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={orderDate}\r\n                onChange={(e) => {\r\n                  orderToUpdate.dateOfService = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Client name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  this.props.clients.forEach((client) => {\r\n                    if (client.clientId === data.value)\r\n                      orderToUpdate.client = client;\r\n                  });\r\n                }}\r\n                options={clientList}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Procedure type:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  this.props.procedureTypes.forEach((type) => {\r\n                    if (type.procedureTypeId === data.value)\r\n                      orderToUpdate.procedureType = type;\r\n                  });\r\n                }}\r\n                options={procedureTypesList}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Procedure:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  this.props.procedures.forEach((procedure) => {\r\n                    if (procedure.procedureId === data.value)\r\n                      orderToUpdate.procedure = procedure;\r\n                  });\r\n                }}\r\n                options={procedureList}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Employee:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  this.props.employees.forEach((employee) => {\r\n                    if (employee.employeeId === data.value)\r\n                      orderToUpdate.employee = employee;\r\n                  });\r\n                }}\r\n                options={employeeList}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Time of service:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  orderToUpdate.employee = data.value;\r\n                }}\r\n                options={scheduleTimesList}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{orderInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    schedule: state.schedule,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateOrderModal);\r\n"]},"metadata":{},"sourceType":"module"}