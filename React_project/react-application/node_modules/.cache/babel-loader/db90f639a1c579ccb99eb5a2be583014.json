{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateServiceModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetCreateModalState, AddData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateServiceModal extends React.PureComponent {\n  render() {\n    var serviceInfoArea;\n    var actionButtons;\n    var serviceToCreate = {\n      procedureName: '',\n      procedureDescription: '',\n      timeAmount: '',\n      procedurePrice: '',\n      procedureType: '',\n      materials: []\n    };\n    var procedureTypesList = [];\n    this.props.responseDataList.procedureTypesList.forEach(element => {\n      procedureTypesList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var materialList = [];\n    this.props.responseDataList.materialsList.forEach(element => {\n      materialList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            console.log(serviceToCreate.materials);\n            this.props.setCreateModalState();\n            this.props.onCreate(this.props.activeMenu, serviceToCreate);\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n    serviceInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Procedure name...\",\n            onChange: e => {\n              serviceToCreate.procedureName = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Procedure description...\",\n            onChange: e => {\n              serviceToCreate.procedureDescription = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Time amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Time amount...\",\n            onChange: e => {\n              serviceToCreate.timeAmount = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Procedure price...\",\n            onChange: e => {\n              serviceToCreate.procedurePrice = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Procedure type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            maxMenuHeight: 100,\n            options: procedureTypesList,\n            onChange: data => {\n              this.props.responseDataList.procedureTypes.forEach(procedureType => {\n                if (procedureType.procedureTypeName === data.label) {\n                  serviceToCreate.procedureType = procedureType;\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Materials:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            maxMenuHeight: 100,\n            options: materialList,\n            onChange: data => {\n              serviceToCreate.materials = [];\n              this.props.responseDataList.materials.forEach(element => {\n                data.forEach(material => {\n                  console.log('from base ', element.materialName);\n\n                  if (element.materialName === data.label) {\n                    console.log('from selectlist ', data.label);\n                    console.log('from base ', element.materialName);\n                    serviceToCreate.materials.push(material);\n                  }\n                });\n              });\n              console.log(serviceToCreate.materials);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          fontSize: '45px',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: serviceInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCreateModalState: () => dispatch(SetCreateModalState()),\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateServiceModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateServiceModal.js"],"names":["React","connect","Modal","SetCreateModalState","AddData","Select","CreateServiceModal","PureComponent","render","serviceInfoArea","actionButtons","serviceToCreate","procedureName","procedureDescription","timeAmount","procedurePrice","procedureType","materials","procedureTypesList","props","responseDataList","forEach","element","push","value","label","text","materialList","materialsList","console","log","setCreateModalState","onCreate","activeMenu","e","target","data","procedureTypes","procedureTypeName","material","materialName","modal","background","padding","fontFamily","alignItems","textAlign","fontSize","border","borderRadius","createModalOpen","mapStateToProps","state","singleResponseData","activeId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport { SetCreateModalState, AddData } from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass CreateServiceModal extends React.PureComponent {\r\n  render() {\r\n    var serviceInfoArea;\r\n    var actionButtons;\r\n    var serviceToCreate = {\r\n      procedureName: '',\r\n      procedureDescription: '',\r\n      timeAmount: '',\r\n      procedurePrice: '',\r\n      procedureType: '',\r\n      materials: [],\r\n    };\r\n\r\n    var procedureTypesList = [];\r\n    this.props.responseDataList.procedureTypesList.forEach((element) => {\r\n      procedureTypesList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n\r\n    var materialList = [];\r\n    this.props.responseDataList.materialsList.forEach((element) => {\r\n      materialList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n\r\n    actionButtons = (\r\n      <div className=\"confirmUserInfo\">\r\n        <div>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              console.log(serviceToCreate.materials);\r\n              this.props.setCreateModalState();\r\n              this.props.onCreate(this.props.activeMenu, serviceToCreate);\r\n            }}\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    serviceInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure name:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Procedure name...\"\r\n              onChange={(e) => {\r\n                serviceToCreate.procedureName = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure description:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Procedure description...\"\r\n              onChange={(e) => {\r\n                serviceToCreate.procedureDescription = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Time amount:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Time amount...\"\r\n              onChange={(e) => {\r\n                serviceToCreate.timeAmount = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure price:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Procedure price...\"\r\n              onChange={(e) => {\r\n                serviceToCreate.procedurePrice = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Procedure type:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              maxMenuHeight={100}\r\n              options={procedureTypesList}\r\n              onChange={(data) => {\r\n                this.props.responseDataList.procedureTypes.forEach(\r\n                  (procedureType) => {\r\n                    if (procedureType.procedureTypeName === data.label) {\r\n                      serviceToCreate.procedureType = procedureType;\r\n                    }\r\n                  },\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Materials:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              isMulti={true}\r\n              maxMenuHeight={100}\r\n              options={materialList}\r\n              onChange={(data) => {\r\n                serviceToCreate.materials = [];\r\n                this.props.responseDataList.materials.forEach((element) => {\r\n                  data.forEach((material) => {\r\n                    console.log('from base ', element.materialName);\r\n                    if (element.materialName === data.label) {\r\n                      console.log('from selectlist ', data.label);\r\n                      console.log('from base ', element.materialName);\r\n                      serviceToCreate.materials.push(material);\r\n                    }\r\n                  });\r\n                });\r\n                console.log(serviceToCreate.materials);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            fontSize: '45px',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{serviceInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCreateModalState: () => dispatch(SetCreateModalState()),\r\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateServiceModal);\r\n"]},"metadata":{},"sourceType":"module"}