{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateEmployeeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var data = this.props.pagedTablesData;\n    var singleData = this.props.singleResponseData;\n    var hireDate = singleData.hireDate;\n    var firstName = singleData.firstName;\n    var lastName = singleData.lastName;\n    var phone = singleData.phoneNumber;\n    var email = singleData.email;\n    var qualification = singleData.qualification;\n    var procedureType = singleData.procedureType; // data.qualification.forEach((element) => {\n    //   if (element.value === singleData.qualification)\n    //     qualification = element.name;\n    // });\n\n    var role = singleData.role; // data.roles.forEach((element) => {\n    //   if (element.value === singleData.role) role = element.name;\n    // });\n    // if (singleData !== '') {\n    //   procedureType = singleData.procedureType.procedureTypeName;\n    // }\n\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: this.props.activeId,\n      firstName: singleData.firstName,\n      lastName: singleData.lastName,\n      phoneNumber: singleData.phoneNumber,\n      password: singleData.password,\n      email: singleData.email,\n      procedureType: singleData.procedureType,\n      qualification: singleData.qualification,\n      role: singleData.role,\n      hireDate: singleData.hireDate\n    };\n    var roles = [];\n    data.roles.forEach(element => {\n      roles.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    roles.forEach(element => {\n      if (element.value === qualification) qualification = element.value;\n    });\n    var procedureTypesSL = [];\n    data.procedureTypesSelectList.forEach(element => {\n      procedureTypesSL.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var qualifications = [];\n    this.props.responseDataList.qualification.forEach(element => {\n      qualifications.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    var orders = [];\n    this.props.responseDataList.orders.forEach(order => {\n      if (order.employee.employeeId === this.props.singleResponseData.employeeId) orders.push(order);\n    }); // Employee orders table\n\n    if (orders !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this); //   for (let i = 0; i < orders.length; i++) {\n      //     var date = orders[i].dateOfService.substr(0, 10);\n      //     var time = orders[i].dateOfService.substr(11, 5);\n      //     element = '';\n      //     element = (\n      //       <tr key={orders[i].orderId} id={orders[i].orderId}>\n      //         <td>{date + ' ' + time}</td>\n      //         <td>{orders[i].client.firstName}</td>\n      //         <td>{orders[i].client.phoneNumber}</td>\n      //         <td>{orders[i].client.email}</td>\n      //         <td>{orders[i].procedure.procedureName}</td>\n      //         <td>{orders[i].procedure.procedurePrice}</td>\n      //         <td>\n      //           {orders[i].employee.firstName + ' ' + orders[i].employee.lastName}\n      //         </td>\n      //       </tr>\n      //     );\n      //     elements = elements.concat(element);\n      //   }\n      // }\n      // End of employee orders table\n\n\n      if (!this.props.isEditing) {\n        actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editUserInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.onEdit,\n            children: \"Edit profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\n              this.props.setUpdateModalState();\n            },\n            children: \"Delete profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n        employeeInfoArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileText\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"First name: \", firstName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Last name: \", lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Hired: \", hireDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Phone: \", phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"ProcedureType: \", procedureType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Qualification: \", qualification]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Role: \", role]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      } else {\n        actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmUserInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onSubmit,\n              id: \"submForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"profilePhotoInput\",\n                id: \"profilePhoto\",\n                name: \"profilePhoto\",\n                type: \"file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                type: \"submit\",\n                onClick: () => {\n                  const formData = new FormData();\n                  var profilePhoto = document.getElementById('profilePhoto');\n                  formData.append('profilePhoto', profilePhoto.files[0]);\n                  this.props.uploadPhoto(this.props.activeId, formData);\n                },\n                children: \"Save photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: () => {\n                this.props.onEdit();\n                this.props.setUpdateModalState();\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this);\n        employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileText\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"First name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: firstName,\n                onChange: e => {\n                  employeeToUpdate.firstName = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Last name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: lastName,\n                onChange: e => {\n                  employeeToUpdate.lastName = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Hired:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: hireDate,\n                onChange: e => {\n                  employeeToUpdate.hireDate = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: phone,\n                onChange: e => {\n                  employeeToUpdate.phoneNumber = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: email,\n                onChange: e => {\n                  employeeToUpdate.email = e.target.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Role:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                onChange: data => {\n                  employeeToUpdate.role = data.value;\n                },\n                options: roles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"ProcedureType:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: procedureTypesSL,\n                onChange: data => {\n                  this.props.responseDataList.procedureTypes.forEach(element => {\n                    if (element.procedureTypeName === data.label) {\n                      employeeToUpdate.procedureType = element;\n                    }\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-left\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Qualification:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileTextItem-right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: qualifications,\n                onChange: data => {\n                  employeeToUpdate.qualification = data.value;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        styles: {\n          modal: {\n            maxWidth: 'fit-content',\n            background: '#6c3636',\n            padding: '40px',\n            fontFamily: 'Play',\n            alignItems: 'center',\n            textAlign: 'center',\n            border: '6px solid #f7f6f6',\n            borderRadius: '10px'\n          }\n        },\n        open: this.props.updateModalOpen,\n        center: true,\n        showCloseIcon: false,\n        onOverlayClick: this.props.setUpdateModalState,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profilePhoto\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: this.props.employeeProfilePhoto,\n                alt: \"profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), employeeInfoArea]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataTable\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"tableStyle\",\n              children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: elements\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    employeeProfilePhoto: state.employeeProfilePhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    onEdit: () => dispatch(actions.SetEditModalState()),\n    onDelete: (id, menu) => {\n      dispatch(actions.DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(actions.UpdateData(activeMenu, data)),\n    uploadPhoto: (id, profilePhoto) => dispatch(actions.UploadProfilePhoto(id, profilePhoto))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateEmployeeModal.js"],"names":["React","connect","Modal","actions","Select","UpdateEmployeeModal","PureComponent","onSubmit","e","preventDefault","render","data","props","pagedTablesData","singleData","singleResponseData","hireDate","firstName","lastName","phone","phoneNumber","email","qualification","procedureType","role","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","activeId","password","roles","forEach","element","push","value","label","name","procedureTypesSL","procedureTypesSelectList","text","qualifications","responseDataList","orders","order","employee","elements","header","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","formData","FormData","profilePhoto","document","getElementById","append","files","uploadPhoto","onUpdate","target","procedureTypes","procedureTypeName","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","employeeProfilePhoto","mapStateToProps","state","mapDispatchToProps","dispatch","SetUpdateModalState","SetEditModalState","id","menu","DeleteData","UpdateData","UploadProfilePhoto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var singleData = this.props.singleResponseData;\r\n\r\n    var hireDate = singleData.hireDate;\r\n    var firstName = singleData.firstName;\r\n    var lastName = singleData.lastName;\r\n    var phone = singleData.phoneNumber;\r\n    var email = singleData.email;\r\n    var qualification = singleData.qualification;\r\n    var procedureType = singleData.procedureType;\r\n\r\n    // data.qualification.forEach((element) => {\r\n    //   if (element.value === singleData.qualification)\r\n    //     qualification = element.name;\r\n    // });\r\n\r\n    var role = singleData.role;\r\n    // data.roles.forEach((element) => {\r\n    //   if (element.value === singleData.role) role = element.name;\r\n    // });\r\n\r\n    // if (singleData !== '') {\r\n    //   procedureType = singleData.procedureType.procedureTypeName;\r\n    // }\r\n\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: this.props.activeId,\r\n      firstName: singleData.firstName,\r\n      lastName: singleData.lastName,\r\n      phoneNumber: singleData.phoneNumber,\r\n      password: singleData.password,\r\n      email: singleData.email,\r\n      procedureType: singleData.procedureType,\r\n      qualification: singleData.qualification,\r\n      role: singleData.role,\r\n      hireDate: singleData.hireDate,\r\n    };\r\n\r\n    var roles = [];\r\n    data.roles.forEach((element) => {\r\n      roles.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    roles.forEach((element) => {\r\n      if (element.value === qualification) qualification = element.value;\r\n    });\r\n\r\n    var procedureTypesSL = [];\r\n    data.procedureTypesSelectList.forEach((element) => {\r\n      procedureTypesSL.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    var qualifications = [];\r\n    this.props.responseDataList.qualification.forEach((element) => {\r\n      qualifications.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    var orders = [];\r\n    this.props.responseDataList.orders.forEach((order) => {\r\n      if (\r\n        order.employee.employeeId === this.props.singleResponseData.employeeId\r\n      )\r\n        orders.push(order);\r\n    });\r\n    // Employee orders table\r\n\r\n    if (orders !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      //   for (let i = 0; i < orders.length; i++) {\r\n      //     var date = orders[i].dateOfService.substr(0, 10);\r\n      //     var time = orders[i].dateOfService.substr(11, 5);\r\n      //     element = '';\r\n      //     element = (\r\n      //       <tr key={orders[i].orderId} id={orders[i].orderId}>\r\n      //         <td>{date + ' ' + time}</td>\r\n      //         <td>{orders[i].client.firstName}</td>\r\n      //         <td>{orders[i].client.phoneNumber}</td>\r\n      //         <td>{orders[i].client.email}</td>\r\n      //         <td>{orders[i].procedure.procedureName}</td>\r\n      //         <td>{orders[i].procedure.procedurePrice}</td>\r\n      //         <td>\r\n      //           {orders[i].employee.firstName + ' ' + orders[i].employee.lastName}\r\n      //         </td>\r\n      //       </tr>\r\n      //     );\r\n      //     elements = elements.concat(element);\r\n      //   }\r\n      // }\r\n\r\n      // End of employee orders table\r\n\r\n      if (!this.props.isEditing) {\r\n        actionButtons = (\r\n          <div className=\"editUserInfo\">\r\n            <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n              Edit profile\r\n            </button>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n                this.props.setUpdateModalState();\r\n              }}\r\n            >\r\n              Delete profile\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n        employeeInfoArea = (\r\n          <>\r\n            <div className=\"profileText\">\r\n              <div className=\"profileTextItem\">\r\n                <p>First name: {firstName}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Last name: {lastName}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Hired: {hireDate}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Phone: {phone}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Email: {email}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>ProcedureType: {procedureType}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Qualification: {qualification}</p>\r\n              </div>\r\n\r\n              <div className=\"profileTextItem\">\r\n                <p>Role: {role}</p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      } else {\r\n        actionButtons = (\r\n          <div className=\"confirmUserInfo\">\r\n            <div>\r\n              <form onSubmit={this.onSubmit} id=\"submForm\">\r\n                <input\r\n                  className=\"profilePhotoInput\"\r\n                  id=\"profilePhoto\"\r\n                  name=\"profilePhoto\"\r\n                  type=\"file\"\r\n                />\r\n                <button\r\n                  className=\"modalButton\"\r\n                  type=\"submit\"\r\n                  onClick={() => {\r\n                    const formData = new FormData();\r\n                    var profilePhoto = document.getElementById('profilePhoto');\r\n                    formData.append('profilePhoto', profilePhoto.files[0]);\r\n                    this.props.uploadPhoto(this.props.activeId, formData);\r\n                  }}\r\n                >\r\n                  Save photo\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={() => {\r\n                  this.props.onEdit();\r\n                  this.props.setUpdateModalState();\r\n                  this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n                }}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n        employeeInfoArea = (\r\n          <div className=\"profileText\">\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>First name:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={firstName}\r\n                  onChange={(e) => {\r\n                    employeeToUpdate.firstName = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Last name:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={lastName}\r\n                  onChange={(e) => {\r\n                    employeeToUpdate.lastName = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Hired:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder={hireDate}\r\n                  onChange={(e) => {\r\n                    employeeToUpdate.hireDate = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Phone:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"tel\"\r\n                  placeholder={phone}\r\n                  onChange={(e) => {\r\n                    employeeToUpdate.phoneNumber = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Email:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder={email}\r\n                  onChange={(e) => {\r\n                    employeeToUpdate.email = e.target.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Role:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <Select\r\n                  onChange={(data) => {\r\n                    employeeToUpdate.role = data.value;\r\n                  }}\r\n                  options={roles}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>ProcedureType:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <Select\r\n                  options={procedureTypesSL}\r\n                  onChange={(data) => {\r\n                    this.props.responseDataList.procedureTypes.forEach(\r\n                      (element) => {\r\n                        if (element.procedureTypeName === data.label) {\r\n                          employeeToUpdate.procedureType = element;\r\n                        }\r\n                      },\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <div className=\"profileTextItem-left\">\r\n                <p>Qualification:</p>\r\n              </div>\r\n              <div className=\"profileTextItem-right\">\r\n                <Select\r\n                  options={qualifications}\r\n                  onChange={(data) => {\r\n                    employeeToUpdate.qualification = data.value;\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Modal\r\n          styles={{\r\n            modal: {\r\n              maxWidth: 'fit-content',\r\n              background: '#6c3636',\r\n              padding: '40px',\r\n              fontFamily: 'Play',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n              border: '6px solid #f7f6f6',\r\n              borderRadius: '10px',\r\n            },\r\n          }}\r\n          open={this.props.updateModalOpen}\r\n          center={true}\r\n          showCloseIcon={false}\r\n          onOverlayClick={this.props.setUpdateModalState}\r\n        >\r\n          <>\r\n            <div className=\"profileBody\">\r\n              <div className=\"profilePhoto\">\r\n                <img src={this.props.employeeProfilePhoto} alt=\"profile\" />\r\n              </div>\r\n              {employeeInfoArea}\r\n            </div>\r\n            {actionButtons}\r\n            <div className=\"dataTable\">\r\n              <table className=\"tableStyle\">\r\n                {header}\r\n                <tbody>{elements}</tbody>\r\n              </table>\r\n            </div>\r\n          </>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    employeeProfilePhoto: state.employeeProfilePhoto,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    onEdit: () => dispatch(actions.SetEditModalState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(actions.DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) =>\r\n      dispatch(actions.UpdateData(activeMenu, data)),\r\n    uploadPhoto: (id, profilePhoto) =>\r\n      dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}