{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\MediaFiles.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\nimport ImageLoader from 'react-image-file';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MediaFilesList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mediafile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this);\n\n      var arr = [];\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        arr = arr.concat(this.props.responseDataList[i]);\n      }\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(ImageLoader, {\n          file: this.props.responseDataList[i],\n          alt: \"some text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Data in DB...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeId: state.activeId\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setActiveId: id => dispatch(SetActiveIdentifier(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaFilesList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/MediaFiles.js"],"names":["React","connect","SetActiveIdentifier","ImageLoader","MediaFilesList","PureComponent","render","props","responseDataList","elements","element","header","arr","i","length","concat","mapStateToProps","state","activeId","mapDispatchToProps","dispatch","setActiveId","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,aAAnC,CAAiD;AAC/CC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,gBAAX,KAAgC,EAApC,EAAwC;AACtC,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,OAAJ;;AACA,UAAIC,MAAM,gBACR;AAAA,+BACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAQA,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWC,gBAAX,CAA4BM,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3DD,QAAAA,GAAG,GAAGA,GAAG,CAACG,MAAJ,CAAW,KAAKR,KAAL,CAAWC,gBAAX,CAA4BK,CAA5B,CAAX,CAAN;AACD;;AAED,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWC,gBAAX,CAA4BM,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3DH,QAAAA,OAAO,GAAG,EAAV;AACAA,QAAAA,OAAO,gBACL,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,gBAAX,CAA4BK,CAA5B,CAAnB;AAAmD,UAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF;AAGAJ,QAAAA,QAAQ,GAAGA,QAAQ,CAACM,MAAT,CAAgBL,OAAhB,CAAX;AACD;AACF;;AAED,QAAI,KAAKH,KAAL,CAAWC,gBAAX,KAAgC,EAApC,EAAwC;AACtC,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,YAAjB;AAAA,uBACGG,MADH,eAEE;AAAA,wBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAUD,KAXD,MAWO;AACL,0BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD;AACF;;AA7C8C;;AAgDjD,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLT,IAAAA,gBAAgB,EAAES,KAAK,CAACT,gBADnB;AAELU,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAFX,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,WAAW,EAAGC,EAAD,IAAQF,QAAQ,CAAClB,mBAAmB,CAACoB,EAAD,CAApB;AADxB,GAAP;AAGD;;AAED,eAAerB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,cAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\r\nimport ImageLoader from 'react-image-file';\r\n\r\nclass MediaFilesList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Mediafile</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      var arr = [];\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        arr = arr.concat(this.props.responseDataList[i]);\r\n      }\r\n\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <ImageLoader file={this.props.responseDataList[i]} alt=\"some text\" />\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>There is no Data in DB...</p>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeId: state.activeId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaFilesList);\r\n"]},"metadata":{},"sourceType":"module"}