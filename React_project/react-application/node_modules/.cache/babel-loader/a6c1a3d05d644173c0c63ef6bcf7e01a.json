{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\NavigationBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../Redux/Actions/actions';\nimport ManagementPage from './DataTablesComponents/Management';\nimport LoginModal from './ModalWindowsComponents/LoginModal';\nimport StyleChange from '../Functions/ChangeStyles';\nimport CreateFeedbackModal from './ModalWindowsComponents/CreateFeedbackModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NavigationBar extends React.PureComponent {\n  render() {\n    if (this.props.employeeToken === '') {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigationBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"managementMenuButton\",\n              id: \"ourServices\",\n              onClick: e => {\n                this.props.getServices();\n\n                if (this.props.bookingInProcess) {\n                  this.props.setOrderCreationStatus();\n                }\n\n                StyleChange(e.target.id);\n              },\n              children: \"Our services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"managementMenuButton\",\n              id: \"ourStaffPage\",\n              onClick: e => {\n                this.props.getAll(e.target.id);\n\n                if (this.props.bookingInProcess) {\n                  this.props.setOrderCreationStatus();\n                }\n\n                StyleChange(e.target.id);\n              },\n              children: \"Our staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"managementMenuButton\",\n              id: \"feedbacksPage\",\n              onClick: e => {\n                StyleChange(e.target.id);\n                this.props.resetSingleData();\n                this.props.getReviews(e.target.id);\n\n                if (this.props.bookingInProcess) {\n                  this.props.setOrderCreationStatus();\n                }\n              },\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"managementMenuButton\",\n              id: \"aboutUsPage\",\n              onClick: e => {\n                this.props.getGoogleMap('aboutUsPage');\n                StyleChange(e.target.id);\n\n                if (this.props.bookingInProcess) {\n                  this.props.setOrderCreationStatus();\n                }\n              },\n              children: \"About us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"managementMenuButton\",\n              id: \"aboutUsPage\",\n              onClick: () => {\n                if (this.props.bookingInProcess) {\n                  this.props.setOrderCreationStatus();\n                }\n\n                this.props.setLoginModalState();\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CreateFeedbackModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"booking\",\n          onClick: () => {\n            this.props.getAll('ordersPage');\n            this.props.setBookingState();\n          },\n          children: \"Book now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ManagementPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    employeeToken: state.employeeToken,\n    activeMemu: state.activeMenu,\n    bookingInProcess: state.bookingInProcess,\n    updateModalOpen: state.updateModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    resetSingleData: () => dispatch(actions.ResetActiveSingleData()),\n    setLoginModalState: () => dispatch(actions.SetUpdateModalState()),\n    getGoogleMap: activeMenu => dispatch(actions.SetActiveMenu(activeMenu)),\n    getServices: () => dispatch(actions.FeetchAllProcedureTypes()),\n    getAllClients: activePage => dispatch(actions.FeetchMainTableData(activePage)),\n    getReviews: activeMenu => dispatch(actions.GetAllApprovedFeedbacks(activeMenu)),\n    getAll: activePage => dispatch(actions.FeetchMainTableData(activePage)),\n    setBookingState: () => dispatch(actions.SetBookingStatus()),\n    setOrderCreationStatus: () => dispatch(actions.SetOrderStatus())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/NavigationBar.js"],"names":["React","connect","actions","ManagementPage","LoginModal","StyleChange","CreateFeedbackModal","NavigationBar","PureComponent","render","props","employeeToken","e","getServices","bookingInProcess","setOrderCreationStatus","target","id","getAll","resetSingleData","getReviews","getGoogleMap","setLoginModalState","setBookingState","mapStateToProps","state","activeMemu","activeMenu","updateModalOpen","mapDispatchToProps","dispatch","ResetActiveSingleData","SetUpdateModalState","SetActiveMenu","FeetchAllProcedureTypes","getAllClients","activePage","FeetchMainTableData","GetAllApprovedFeedbacks","SetBookingStatus","SetOrderStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../Redux/Actions/actions';\r\nimport ManagementPage from './DataTablesComponents/Management';\r\nimport LoginModal from './ModalWindowsComponents/LoginModal';\r\nimport StyleChange from '../Functions/ChangeStyles';\r\nimport CreateFeedbackModal from './ModalWindowsComponents/CreateFeedbackModal';\r\n\r\nclass NavigationBar extends React.PureComponent {\r\n  render() {\r\n    if (this.props.employeeToken === '') {\r\n      return (\r\n        <nav className=\"navigationBar\">\r\n          <ul>\r\n            <li>\r\n              <button\r\n                className=\"managementMenuButton\"\r\n                id=\"ourServices\"\r\n                onClick={(e) => {\r\n                  this.props.getServices();\r\n                  if (this.props.bookingInProcess) {\r\n                    this.props.setOrderCreationStatus();\r\n                  }\r\n                  StyleChange(e.target.id);\r\n                }}\r\n              >\r\n                Our services\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"managementMenuButton\"\r\n                id=\"ourStaffPage\"\r\n                onClick={(e) => {\r\n                  this.props.getAll(e.target.id);\r\n                  if (this.props.bookingInProcess) {\r\n                    this.props.setOrderCreationStatus();\r\n                  }\r\n                  StyleChange(e.target.id);\r\n                }}\r\n              >\r\n                Our staff\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"managementMenuButton\"\r\n                id=\"feedbacksPage\"\r\n                onClick={(e) => {\r\n                  StyleChange(e.target.id);\r\n                  this.props.resetSingleData();\r\n                  this.props.getReviews(e.target.id);\r\n                  if (this.props.bookingInProcess) {\r\n                    this.props.setOrderCreationStatus();\r\n                  }\r\n                }}\r\n              >\r\n                Reviews\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"managementMenuButton\"\r\n                id=\"aboutUsPage\"\r\n                onClick={(e) => {\r\n                  this.props.getGoogleMap('aboutUsPage');\r\n                  StyleChange(e.target.id);\r\n                  if (this.props.bookingInProcess) {\r\n                    this.props.setOrderCreationStatus();\r\n                  }\r\n                }}\r\n              >\r\n                About us\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"managementMenuButton\"\r\n                id=\"aboutUsPage\"\r\n                onClick={() => {\r\n                  if (this.props.bookingInProcess) {\r\n                    this.props.setOrderCreationStatus();\r\n                  }\r\n                  this.props.setLoginModalState();\r\n                }}\r\n              >\r\n                Login\r\n              </button>\r\n              <LoginModal />\r\n              <CreateFeedbackModal />\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className=\"booking\"\r\n            onClick={() => {\r\n              this.props.getAll('ordersPage');\r\n              this.props.setBookingState();\r\n            }}\r\n          >\r\n            Book now\r\n          </button>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return <ManagementPage />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    employeeToken: state.employeeToken,\r\n    activeMemu: state.activeMenu,\r\n    bookingInProcess: state.bookingInProcess,\r\n    updateModalOpen: state.updateModalOpen,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    resetSingleData: () => dispatch(actions.ResetActiveSingleData()),\r\n    setLoginModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    getGoogleMap: (activeMenu) => dispatch(actions.SetActiveMenu(activeMenu)),\r\n    getServices: () => dispatch(actions.FeetchAllProcedureTypes()),\r\n    getAllClients: (activePage) =>\r\n      dispatch(actions.FeetchMainTableData(activePage)),\r\n    getReviews: (activeMenu) =>\r\n      dispatch(actions.GetAllApprovedFeedbacks(activeMenu)),\r\n    getAll: (activePage) => dispatch(actions.FeetchMainTableData(activePage)),\r\n    setBookingState: () => dispatch(actions.SetBookingStatus()),\r\n    setOrderCreationStatus: () => dispatch(actions.SetOrderStatus()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\r\n"]},"metadata":{},"sourceType":"module"}