{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\EmployeeMenu\\\\ScheduleMenu.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../Redux/Actions/actions';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var singleData = this.props.singleResponseData;\n    var elements = [];\n\n    if (singleData !== '') {\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < singleData.orders.length; i++) {\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: singleData.orders[i].orderId,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date + ' ' + time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientPhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedureCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].employeeFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, singleData.orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profilePhoto\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.employeeProfilePhoto,\n            alt: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), employeeInfoArea]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTable\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"tableStyle\",\n          children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: elements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    employeeProfilePhoto: state.employeeProfilePhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    resetSingleData: () => dispatch(actions.ResetActiveSingleData()),\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    onEdit: () => dispatch(actions.SetEditModalState()),\n    onDelete: (id, menu) => {\n      dispatch(actions.DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(actions.UpdateData(activeMenu, data)),\n    uploadPhoto: (id, profilePhoto) => dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\n    getAll: id => dispatch(actions.FeetchMainTableData(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/EmployeeMenu/ScheduleMenu.js"],"names":["React","connect","actions","Select","UpdateEmployeeModal","PureComponent","onSubmit","e","preventDefault","render","singleData","props","singleResponseData","elements","element","header","i","orders","length","date","dateOfService","substr","time","orderId","clientFullName","clientPhoneNumber","clientEmail","procedureName","procedureCost","employeeFullName","concat","employeeProfilePhoto","employeeInfoArea","actionButtons","mapStateToProps","state","updateModalOpen","pagedTablesData","isEditing","activeId","activeMenu","mapDispatchToProps","dispatch","resetSingleData","ResetActiveSingleData","setUpdateModalState","SetUpdateModalState","onEdit","SetEditModalState","onDelete","id","menu","DeleteData","onUpdate","data","UpdateData","uploadPhoto","profilePhoto","UploadProfilePhoto","getAll","FeetchMainTableData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../Redux/Actions/actions';\r\nimport Select from 'react-select';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    var singleData = this.props.singleResponseData;\r\n\r\n    var elements = [];\r\n    if (singleData !== '') {\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < singleData.orders.length; i++) {\r\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\r\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={singleData.orders[i].orderId}\r\n            id={singleData.orders[i].orderId}\r\n          >\r\n            <td>{date + ' ' + time}</td>\r\n            <td>{singleData.orders[i].clientFullName}</td>\r\n            <td>{singleData.orders[i].clientPhoneNumber}</td>\r\n            <td>{singleData.orders[i].clientEmail}</td>\r\n            <td>{singleData.orders[i].procedureName}</td>\r\n            <td>{singleData.orders[i].procedureCost}</td>\r\n            <td>{singleData.orders[i].employeeFullName}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"profileBody\">\r\n          <div className=\"profilePhoto\">\r\n            <img src={this.props.employeeProfilePhoto} alt=\"profile\" />\r\n          </div>\r\n          {employeeInfoArea}\r\n        </div>\r\n        {actionButtons}\r\n        <div className=\"dataTable\">\r\n          <table className=\"tableStyle\">\r\n            {header}\r\n            <tbody>{elements}</tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    employeeProfilePhoto: state.employeeProfilePhoto,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    resetSingleData: () => dispatch(actions.ResetActiveSingleData()),\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    onEdit: () => dispatch(actions.SetEditModalState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(actions.DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) =>\r\n      dispatch(actions.UpdateData(activeMenu, data)),\r\n    uploadPhoto: (id, profilePhoto) =>\r\n      dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\r\n    getAll: (id) => dispatch(actions.FeetchMainTableData(id)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}