{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateMaterialModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetCreateModalState, AddData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateClientModal extends React.PureComponent {\n  render() {\n    var materialInfoArea;\n    var actionButtons;\n    var materialToCreate = {\n      materialName: '',\n      materialAmount: '',\n      productionDate: '',\n      bestBeforeDate: '',\n      materialManufacturer: ''\n    }; // Array for using in <Select /> dropdown list\n\n    var manufacturers = [];\n    this.props.responseDataList.manufacturerSelectList.forEach(element => {\n      manufacturers.push({\n        value: element.value,\n        label: element.text\n      });\n    }); // Elements to render conrent\n\n    actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalButton\",\n        onClick: () => {\n          this.props.setCreateModalState();\n          this.props.onCreate(this.props.activeMenu, materialToCreate);\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n    materialInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Material name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Material name...\",\n            onChange: e => {\n              materialToCreate.materialName = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Material amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Material amount...\",\n            onChange: e => {\n              materialToCreate.materialAmount = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Production date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"Phone number...\",\n            onChange: e => {\n              materialToCreate.productionDate = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Best before date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: \"Best before date...\",\n            onChange: e => {\n              materialToCreate.bestBeforeDate = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Manufacturer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            options: manufacturers,\n            onChange: data => {\n              this.props.responseDataList.manufacturers.forEach(element => {\n                if (element.manufacturerName === data.label) {\n                  materialToCreate.materialManufacturer = element;\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          fontSize: '45px',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: materialInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCreateModalState: () => dispatch(SetCreateModalState()),\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClientModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateMaterialModal.js"],"names":["React","connect","Modal","SetCreateModalState","AddData","Select","CreateClientModal","PureComponent","render","materialInfoArea","actionButtons","materialToCreate","materialName","materialAmount","productionDate","bestBeforeDate","materialManufacturer","manufacturers","props","responseDataList","manufacturerSelectList","forEach","element","push","value","label","text","setCreateModalState","onCreate","activeMenu","e","target","data","manufacturerName","modal","background","padding","fontFamily","alignItems","textAlign","fontSize","border","borderRadius","createModalOpen","mapStateToProps","state","singleResponseData","activeId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport { SetCreateModalState, AddData } from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass CreateClientModal extends React.PureComponent {\r\n  render() {\r\n    var materialInfoArea;\r\n    var actionButtons;\r\n    var materialToCreate = {\r\n      materialName: '',\r\n      materialAmount: '',\r\n      productionDate: '',\r\n      bestBeforeDate: '',\r\n      materialManufacturer: '',\r\n    };\r\n\r\n    // Array for using in <Select /> dropdown list\r\n    var manufacturers = [];\r\n    this.props.responseDataList.manufacturerSelectList.forEach((element) => {\r\n      manufacturers.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    // Elements to render conrent\r\n    actionButtons = (\r\n      <div className=\"confirmUserInfo\">\r\n        <button\r\n          className=\"modalButton\"\r\n          onClick={() => {\r\n            this.props.setCreateModalState();\r\n            this.props.onCreate(this.props.activeMenu, materialToCreate);\r\n          }}\r\n        >\r\n          Create\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    materialInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Material name:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Material name...\"\r\n              onChange={(e) => {\r\n                materialToCreate.materialName = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Material amount:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Material amount...\"\r\n              onChange={(e) => {\r\n                materialToCreate.materialAmount = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Production date:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Phone number...\"\r\n              onChange={(e) => {\r\n                materialToCreate.productionDate = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Best before date:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"Best before date...\"\r\n              onChange={(e) => {\r\n                materialToCreate.bestBeforeDate = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Manufacturer:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <Select\r\n              options={manufacturers}\r\n              onChange={(data) => {\r\n                this.props.responseDataList.manufacturers.forEach((element) => {\r\n                  if (element.manufacturerName === data.label) {\r\n                    materialToCreate.materialManufacturer = element;\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            fontSize: '45px',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{materialInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCreateModalState: () => dispatch(SetCreateModalState()),\r\n    onCreate: (activeMenu, data) => dispatch(AddData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClientModal);\r\n"]},"metadata":{},"sourceType":"module"}