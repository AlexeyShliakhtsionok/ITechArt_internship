{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateMaterialModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetUpdateModalState, SetEditState, DeleteData, UpdateData } from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateMaterialModal extends React.PureComponent {\n  render() {\n    var materialName = this.props.singleResponseData.materialName;\n    var materialAmount = this.props.singleResponseData.materialAmount;\n    var productionDate = this.props.singleResponseData.productionDate;\n    var bestBeforeDate = this.props.singleResponseData.bestBeforeDate;\n    var materialInfoArea;\n    var actionButtons;\n    var materialToUpdate = {\n      materialId: this.props.activeId,\n      materialName: this.props.singleResponseData.materialName,\n      materialAmount: this.props.singleResponseData.materialAmount,\n      productionDate: this.props.singleResponseData.productionDate,\n      bestBeforeDate: this.props.singleResponseData.bestBeforeDate,\n      phoneNumber: this.props.singleResponseData.phoneNumber,\n      materialManufacturer: this.props.singleResponseData.materialManufacturer\n    }; // Array for using in <Select /> dropdown list\n\n    var manufacturers = [];\n    this.props.responseDataList.manufacturerSelectList.forEach(element => {\n      manufacturers.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete material\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n      materialInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Material name: \", materialName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Material amount: \", materialAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Production date: \", productionDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Best before date: \", bestBeforeDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              console.log('MTU', materialToUpdate);\n              this.props.onUpdate(this.props.activeMenu, materialToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n      materialInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Material name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: materialName,\n              onChange: e => {\n                materialToUpdate.materialName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Material amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: materialAmount,\n              onChange: e => {\n                materialToUpdate.materialAmount = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Production date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: productionDate,\n              onChange: e => {\n                materialToUpdate.productionDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Best before date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: bestBeforeDate,\n              onChange: e => {\n                materialToUpdate.bestBeforeDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Manufacturer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: manufacturers,\n              onChange: data => {\n                this.props.responseDataList.manufacturers.forEach(element => {\n                  if (element.manufacturerName === data.label) {\n                    materialToUpdate.materialManufacturer = element;\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          background: 'wheat',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          fontSize: '45px',\n          border: '3px solid black',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: materialInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    responseDataList: state.responseDataList,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: (id, menu) => {\n      dispatch(DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateMaterialModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateMaterialModal.js"],"names":["React","connect","Modal","SetUpdateModalState","SetEditState","DeleteData","UpdateData","Select","UpdateMaterialModal","PureComponent","render","materialName","props","singleResponseData","materialAmount","productionDate","bestBeforeDate","materialInfoArea","actionButtons","materialToUpdate","materialId","activeId","phoneNumber","materialManufacturer","manufacturers","responseDataList","manufacturerSelectList","forEach","element","push","value","label","text","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","console","log","onUpdate","e","target","data","manufacturerName","modal","background","padding","fontFamily","alignItems","textAlign","fontSize","border","borderRadius","updateModalOpen","mapStateToProps","state","mapDispatchToProps","dispatch","id","menu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetUpdateModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n  UpdateData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass UpdateMaterialModal extends React.PureComponent {\r\n  render() {\r\n    var materialName = this.props.singleResponseData.materialName;\r\n    var materialAmount = this.props.singleResponseData.materialAmount;\r\n    var productionDate = this.props.singleResponseData.productionDate;\r\n    var bestBeforeDate = this.props.singleResponseData.bestBeforeDate;\r\n    var materialInfoArea;\r\n    var actionButtons;\r\n    var materialToUpdate = {\r\n      materialId: this.props.activeId,\r\n      materialName: this.props.singleResponseData.materialName,\r\n      materialAmount: this.props.singleResponseData.materialAmount,\r\n      productionDate: this.props.singleResponseData.productionDate,\r\n      bestBeforeDate: this.props.singleResponseData.bestBeforeDate,\r\n      phoneNumber: this.props.singleResponseData.phoneNumber,\r\n      materialManufacturer: this.props.singleResponseData.materialManufacturer,\r\n    };\r\n\r\n    // Array for using in <Select /> dropdown list\r\n    var manufacturers = [];\r\n    this.props.responseDataList.manufacturerSelectList.forEach((element) => {\r\n      manufacturers.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit material\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete material\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      materialInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <p>Material name: {materialName}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Material amount: {materialAmount}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Production date: {productionDate}</p>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <p>Best before date: {bestBeforeDate}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                console.log('MTU', materialToUpdate);\r\n                this.props.onUpdate(this.props.activeMenu, materialToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      materialInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Material name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={materialName}\r\n                onChange={(e) => {\r\n                  materialToUpdate.materialName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Material amount:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                defaultValue={materialAmount}\r\n                onChange={(e) => {\r\n                  materialToUpdate.materialAmount = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Production date:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={productionDate}\r\n                onChange={(e) => {\r\n                  materialToUpdate.productionDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Best before date:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={bestBeforeDate}\r\n                onChange={(e) => {\r\n                  materialToUpdate.bestBeforeDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Manufacturer:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={manufacturers}\r\n                onChange={(data) => {\r\n                  this.props.responseDataList.manufacturers.forEach(\r\n                    (element) => {\r\n                      if (element.manufacturerName === data.label) {\r\n                        materialToUpdate.materialManufacturer = element;\r\n                      }\r\n                    },\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            background: 'wheat',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            fontSize: '45px',\r\n            border: '3px solid black',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{materialInfoArea}</div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    responseDataList: state.responseDataList,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(SetUpdateModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) => dispatch(UpdateData(activeMenu, data)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateMaterialModal);\r\n"]},"metadata":{},"sourceType":"module"}