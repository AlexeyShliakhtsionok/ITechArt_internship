{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ClientsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ClientsFeetchData, SetActiveIdentifier } from '../Redux/Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActiveRowColoring() {\n  var row = document.getElementById(`${this.props.activeId}`);\n  row.classList.add('active');\n}\n\n_c = ActiveRowColoring;\n\nclass ClientsList extends React.PureComponent {\n  render() {\n    if (this.props.clientsList !== '') {\n      var elements = [];\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < this.props.clientsList.length; i++) {\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: this.props.clientsList[i].clientId,\n          onClick: (this.props.setActiveId(this.props.id), ActiveRowColoring()),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.clientsList[i].firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.clientsList[i].lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.clientsList[i].phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.clientsList[i].email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, this.props.clientsList[i].clientId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      console.log('elements', elements);\n    }\n\n    if (this.props.clientsList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.props.getClients,\n              children: \"ClientsList\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Push the button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.getClients,\n          children: \"ClientsList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    clientsList: state.clientsList,\n    activeId: state.clientId\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setActiveId: id => dispatch(SetActiveIdentifier(id)),\n    getClients: () => dispatch(ClientsFeetchData())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientsList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveRowColoring\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ClientsList.js"],"names":["React","connect","ClientsFeetchData","SetActiveIdentifier","ActiveRowColoring","row","document","getElementById","props","activeId","classList","add","ClientsList","PureComponent","render","clientsList","elements","element","header","i","length","clientId","setActiveId","id","firstName","lastName","phoneNumber","email","concat","console","log","getClients","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ClientsFeetchData,\r\n  SetActiveIdentifier,\r\n} from '../Redux/Actions/actions';\r\n\r\nfunction ActiveRowColoring() {\r\n  var row = document.getElementById(`${this.props.activeId}`);\r\n\r\n  row.classList.add('active');\r\n}\r\n\r\nclass ClientsList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.clientsList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Lastname</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < this.props.clientsList.length; i++) {\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={this.props.clientsList[i].clientId}\r\n            id={this.props.clientsList[i].clientId}\r\n            onClick={\r\n              (this.props.setActiveId(this.props.id), ActiveRowColoring())\r\n            }\r\n          >\r\n            <td>{this.props.clientsList[i].firstName}</td>\r\n            <td>{this.props.clientsList[i].lastName}</td>\r\n            <td>{this.props.clientsList[i].phoneNumber}</td>\r\n            <td>{this.props.clientsList[i].email}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      console.log('elements', elements);\r\n    }\r\n\r\n    if (this.props.clientsList !== '') {\r\n      return (\r\n        <>\r\n          <div className=\"clientTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n            <div className=\"tableButton\">\r\n              <button onClick={this.props.getClients}>ClientsList</button>\r\n              <button>Add client</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p>Push the button</p>\r\n          <button onClick={this.props.getClients}>ClientsList</button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    clientsList: state.clientsList,\r\n    activeId: state.clientId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveId: (id) => dispatch(SetActiveIdentifier(id)),\r\n    getClients: () => dispatch(ClientsFeetchData()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientsList);\r\n"]},"metadata":{},"sourceType":"module"}