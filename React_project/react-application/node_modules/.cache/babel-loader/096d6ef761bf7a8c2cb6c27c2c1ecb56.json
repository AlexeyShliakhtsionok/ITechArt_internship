{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Feedbacks.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport CreateFeedbackModal from '../ModalWindowsComponents/CreateFeedbackModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FeedbacksList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        var actionButtons = '';\n        var createFeedbackButton = '';\n\n        if (this.props.employeeToken !== '') {\n          if (!this.props.responseDataList[i].isVerify) {\n            actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onApprove(this.props.activeMenu, this.props.responseDataList[i]);\n                },\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onDelete(this.props.responseDataList[i].feedbackId, this.props.activeMenu);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true);\n          } else {\n            actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalButton\",\n                onClick: () => {\n                  this.props.onDelete(this.props.responseDataList[i].feedbackId, this.props.activeMenu);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          }\n        }\n\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          id: this.props.responseDataList.feedbacks[i].feedbackId,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackTitle\",\n            children: this.props.responseDataList.feedbacks[i].feedbackTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthor\",\n                children: [this.props.responseDataList.feedbacks[i].client.firstName, '', this.props.responseDataList.feedbacks[i].client.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthorEmail\",\n                children: this.props.responseDataList.feedbacks[i].client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackDate\",\n                children: this.props.responseDataList.feedbacks[i].createdOn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: actionButtons\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackText\",\n              children: this.props.responseDataList[i].feedbackText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, this.props.responseDataList.feedbacks[i].feedbackId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      console.log('elements', elements);\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: elements\n      }, void 0, false);\n\n      /*#__PURE__*/\n      _jsxDEV(CreateFeedbackModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeMenu: state.activeMenu,\n    employeeToken: state.employeeToken\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onApprove: (activeMenu, feedback) => dispatch(actions.UpdateData(activeMenu, feedback)),\n    onDelete: (id, activeMenu) => dispatch(actions.DeleteData(id, activeMenu)),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Feedbacks.js"],"names":["React","connect","actions","CreateFeedbackModal","FeedbacksList","PureComponent","render","props","responseDataList","elements","element","i","length","actionButtons","createFeedbackButton","employeeToken","isVerify","onApprove","activeMenu","onDelete","feedbackId","feedbacks","feedbackTitle","client","firstName","lastName","email","createdOn","feedbackText","concat","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","feedback","UpdateData","id","DeleteData","setCreateModalState","SetCreateModalState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport CreateFeedbackModal from '../ModalWindowsComponents/CreateFeedbackModal';\r\n\r\nclass FeedbacksList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        var actionButtons = '';\r\n        var createFeedbackButton = '';\r\n        if (this.props.employeeToken !== '') {\r\n          if (!this.props.responseDataList[i].isVerify) {\r\n            actionButtons = (\r\n              <>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onApprove(\r\n                      this.props.activeMenu,\r\n                      this.props.responseDataList[i],\r\n                    );\r\n                  }}\r\n                >\r\n                  Approve\r\n                </button>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onDelete(\r\n                      this.props.responseDataList[i].feedbackId,\r\n                      this.props.activeMenu,\r\n                    );\r\n                  }}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </>\r\n            );\r\n          } else {\r\n            actionButtons = (\r\n              <>\r\n                <button\r\n                  className=\"modalButton\"\r\n                  onClick={() => {\r\n                    this.props.onDelete(\r\n                      this.props.responseDataList[i].feedbackId,\r\n                      this.props.activeMenu,\r\n                    );\r\n                  }}\r\n                >\r\n                  Remove\r\n                </button>\r\n              </>\r\n            );\r\n          }\r\n        }\r\n\r\n        element = '';\r\n        element = (\r\n          <div\r\n            className=\"feedback\"\r\n            key={this.props.responseDataList.feedbacks[i].feedbackId}\r\n            id={this.props.responseDataList.feedbacks[i].feedbackId}\r\n          >\r\n            <div className=\"feedbackTitle\">\r\n              {this.props.responseDataList.feedbacks[i].feedbackTitle}\r\n            </div>\r\n            <div className=\"feedbackBody\">\r\n              <div className=\"feedbackInfo\">\r\n                <div className=\"feedbackAuthor\">\r\n                  {this.props.responseDataList.feedbacks[i].client.firstName}\r\n                  {''}\r\n                  {this.props.responseDataList.feedbacks[i].client.lastName}\r\n                </div>\r\n                <div className=\"feedbackAuthorEmail\">\r\n                  {this.props.responseDataList.feedbacks[i].client.email}\r\n                </div>\r\n                <div className=\"feedbackDate\">\r\n                  {this.props.responseDataList.feedbacks[i].createdOn}\r\n                </div>\r\n                <div>{actionButtons}</div>\r\n              </div>\r\n              <div className=\"feedbackText\">\r\n                {this.props.responseDataList[i].feedbackText}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      console.log('elements', elements);\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return <>{elements}</>;\r\n      <CreateFeedbackModal />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeMenu: state.activeMenu,\r\n    employeeToken: state.employeeToken,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onApprove: (activeMenu, feedback) =>\r\n      dispatch(actions.UpdateData(activeMenu, feedback)),\r\n    onDelete: (id, activeMenu) => dispatch(actions.DeleteData(id, activeMenu)),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);\r\n"]},"metadata":{},"sourceType":"module"}