{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\Authorization.js\";\nimport React from 'react';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { connect } from 'react-redux';\nimport { onSubmit } from './LoginModal';\nimport Modal from 'react-responsive-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Autorization extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px',\n          height: '300px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: () => {\n        this.props.setUpdateModalState();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          this.props.resetMenu();\n          this.props.onAuth(document.getElementById('employeeEmail').value, document.getElementById('employeePassword').value);\n          onSubmit();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"employeeCredentials\",\n          id: \"employeeEmail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"employeeCredentials\",\n          id: \"employeePassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            className: \"modalButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.setUpdateModalState()),\n    resetMenu: () => dispatch(actions.ResetActiveMenu()),\n    onAuth: (email, password) => dispatch(actions.EmployeeAutorization(email, password))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Autorization);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/Authorization.js"],"names":["React","actions","connect","onSubmit","Modal","Autorization","PureComponent","render","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","height","props","updateModalOpen","setUpdateModalState","e","preventDefault","resetMenu","onAuth","document","getElementById","value","mapStateToProps","state","mapDispatchToProps","dispatch","ResetActiveMenu","email","password","EmployeeAutorization"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,aAAjC,CAA+C;AAC7CC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,aADL;AAELC,UAAAA,UAAU,EAAE,SAFP;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,UAAU,EAAE,MAJP;AAKLC,UAAAA,UAAU,EAAE,QALP;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,mBAPH;AAQLC,UAAAA,YAAY,EAAE,MART;AASLC,UAAAA,MAAM,EAAE;AATH;AADD,OADV;AAcE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,eAdnB;AAeE,MAAA,MAAM,EAAE,IAfV;AAgBE,MAAA,aAAa,EAAE,KAhBjB;AAiBE,MAAA,cAAc,EAAE,MAAM;AACpB,aAAKD,KAAL,CAAWE,mBAAX;AACD,OAnBH;AAAA,6BAqBE;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACC,cAAF;AACA,eAAKJ,KAAL,CAAWK,SAAX;AACA,eAAKL,KAAL,CAAWM,MAAX,CACEC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAD3C,EAEEF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAF9C;AAIAxB,UAAAA,QAAQ;AACT,SATH;AAAA,gCAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,SAAS,EAAC,qBAFZ;AAGE,UAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,gBAZF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,SAAS,EAAC,qBAFZ;AAGE,UAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAuBE;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC,OAA3B;AAAmC,YAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBF;AAAA;AAAA;AAAA;AAAA,YADF;AAmDD;;AArD4C;;AAwD/C,SAASyB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,eAAe,EAAEU,KAAK,CAACV;AADlB,GAAP;AAGD;;AAED,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLX,IAAAA,mBAAmB,EAAE,MAAMW,QAAQ,CAAC9B,OAAO,CAACmB,mBAAR,EAAD,CAD9B;AAELG,IAAAA,SAAS,EAAE,MAAMQ,QAAQ,CAAC9B,OAAO,CAAC+B,eAAR,EAAD,CAFpB;AAGLR,IAAAA,MAAM,EAAE,CAACS,KAAD,EAAQC,QAAR,KACNH,QAAQ,CAAC9B,OAAO,CAACkC,oBAAR,CAA6BF,KAA7B,EAAoCC,QAApC,CAAD;AAJL,GAAP;AAMD;;AAED,eAAehC,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport { connect } from 'react-redux';\r\nimport { onSubmit } from './LoginModal';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nclass Autorization extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n            height: '300px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={() => {\r\n          this.props.setUpdateModalState();\r\n        }}\r\n      >\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            this.props.resetMenu();\r\n            this.props.onAuth(\r\n              document.getElementById('employeeEmail').value,\r\n              document.getElementById('employeePassword').value,\r\n            );\r\n            onSubmit();\r\n          }}\r\n        >\r\n          <p>Email: </p>\r\n          <input\r\n            type=\"email\"\r\n            className=\"employeeCredentials\"\r\n            id=\"employeeEmail\"\r\n          />\r\n          <p>Password: </p>\r\n          <input\r\n            type=\"password\"\r\n            className=\"employeeCredentials\"\r\n            id=\"employeePassword\"\r\n          />\r\n          <div>\r\n            <input type=\"submit\" value=\"Login\" className=\"modalButton\" />\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.setUpdateModalState()),\r\n    resetMenu: () => dispatch(actions.ResetActiveMenu()),\r\n    onAuth: (email, password) =>\r\n      dispatch(actions.EmployeeAutorization(email, password)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Autorization);\r\n"]},"metadata":{},"sourceType":"module"}