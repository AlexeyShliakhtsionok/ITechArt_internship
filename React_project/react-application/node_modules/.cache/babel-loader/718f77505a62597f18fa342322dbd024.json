{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateMediafileModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateMediafileModal extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n    var employeeList = [{\n      value: 0,\n      label: 'All employees'\n    }];\n    data.employeesSelectList.forEach(element => {\n      employeeList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var actionButtons;\n    var addMediaArea;\n    var submitId;\n\n    if (this.props.activeId !== '') {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const formData = new FormData();\n            var mediafile = document.getElementById('mediafile');\n            formData.append('mediafile', mediafile.files[0]);\n            this.props.uploadPhoto(this.props.activeId, submitId, formData);\n            this.props.setCreateModalState();\n          },\n          id: \"submForm\",\n          style: {\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"photoInput\",\n            id: \"mediafile\",\n            name: \"mediafile\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"modalButton\",\n            id: \"promo\",\n            type: \"submit\",\n            onMouseEnter: e => {\n              submitId = e.target.id;\n            },\n            value: \"Add as promo media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"modalButton\",\n            type: \"submit\",\n            onMouseEnter: e => {\n              submitId = e.target.id;\n            },\n            id: \"gallery\",\n            value: \"Add as gallery media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    addMediaArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      style: {\n        flexDirection: 'column',\n        height: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        maxMenuHeight: 100,\n        options: employeeList,\n        placeholder: \"Choose the employee...\",\n        onChange: data => {\n          this.props.setActiveId(data.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), actionButtons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px',\n          height: '400px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: () => {\n        this.props.setCreateModalState();\n        this.props.setActiveId('');\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Add new media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), addMediaArea]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    pagedTablesData: state.pagedTablesData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    uploadPhoto: (id, type, mediafile) => dispatch(actions.UploadPhoto(id, type, mediafile))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMediafileModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateMediafileModal.js"],"names":["React","connect","Modal","actions","Select","CreateMediafileModal","PureComponent","render","data","props","pagedTablesData","employeeList","value","label","employeesSelectList","forEach","element","push","text","actionButtons","addMediaArea","submitId","activeId","e","preventDefault","formData","FormData","mediafile","document","getElementById","append","files","uploadPhoto","setCreateModalState","marginTop","target","id","flexDirection","height","setActiveId","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","createModalOpen","mapStateToProps","state","activeMenu","mapDispatchToProps","dispatch","SetActiveIdentifier","SetCreateModalState","type","UploadPhoto"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,MAAMC,oBAAN,SAAmCL,KAAK,CAACM,aAAzC,CAAuD;AACrDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,eAAtB;AACA,QAAIC,YAAY,GAAG,CAAC;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KAAD,CAAnB;AACAL,IAAAA,IAAI,CAACM,mBAAL,CAAyBC,OAAzB,CAAkCC,OAAD,IAAa;AAC5CL,MAAAA,YAAY,CAACM,IAAb,CAAkB;AAChBL,QAAAA,KAAK,EAAEI,OAAO,CAACJ,KADC;AAEhBC,QAAAA,KAAK,EAAEG,OAAO,CAACE;AAFC,OAAlB;AAID,KALD;AAMA,QAAIC,aAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,QAAJ;;AAEA,QAAI,KAAKZ,KAAL,CAAWa,QAAX,KAAwB,EAA5B,EAAgC;AAC9BH,MAAAA,aAAa,gBACX;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGI,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AACA,kBAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,gBAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AACAJ,YAAAA,QAAQ,CAACK,MAAT,CAAgB,WAAhB,EAA6BH,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAA7B;AACA,iBAAKtB,KAAL,CAAWuB,WAAX,CAAuB,KAAKvB,KAAL,CAAWa,QAAlC,EAA4CD,QAA5C,EAAsDI,QAAtD;AACA,iBAAKhB,KAAL,CAAWwB,mBAAX;AACD,WARH;AASE,UAAA,EAAE,EAAC,UATL;AAUE,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAVT;AAAA,kCAYE;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,EAAE,EAAC,WAFL;AAGE,YAAA,IAAI,EAAC,WAHP;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBAZF,eAkBE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,YAAY,EAAGX,CAAD,IAAO;AACnBF,cAAAA,QAAQ,GAAGE,CAAC,CAACY,MAAF,CAASC,EAApB;AACD,aANH;AAOE,YAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA4BE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,YAAY,EAAGb,CAAD,IAAO;AACnBF,cAAAA,QAAQ,GAAGE,CAAC,CAACY,MAAF,CAASC,EAApB;AACD,aALH;AAME,YAAA,EAAE,EAAC,SANL;AAOE,YAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA0CD,KA3CD,MA2CO;AACLjB,MAAAA,aAAa,gBAAG,qCAAhB;AACD;;AACDC,IAAAA,YAAY,gBACV;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,aAAa,EAAE,QAAjB;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OAFT;AAAA,8BAIE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,OAAO,EAAE3B,YAFX;AAGE,QAAA,WAAW,EAAC,wBAHd;AAIE,QAAA,QAAQ,EAAGH,IAAD,IAAU;AAClB,eAAKC,KAAL,CAAW8B,WAAX,CAAuB/B,IAAI,CAACI,KAA5B;AACD;AANH;AAAA;AAAA;AAAA;AAAA,cAJF,EAYGO,aAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBA,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACNqB,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,aADL;AAELC,UAAAA,UAAU,EAAE,SAFP;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,UAAU,EAAE,MAJP;AAKLC,UAAAA,UAAU,EAAE,QALP;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLC,UAAAA,MAAM,EAAE,mBAPH;AAQLC,UAAAA,YAAY,EAAE,MART;AASLV,UAAAA,MAAM,EAAE;AATH;AADD,OADV;AAcE,MAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWwC,eAdnB;AAeE,MAAA,MAAM,EAAE,IAfV;AAgBE,MAAA,aAAa,EAAE,KAhBjB;AAiBE,MAAA,cAAc,EAAE,MAAM;AACpB,aAAKxC,KAAL,CAAWwB,mBAAX;AACA,aAAKxB,KAAL,CAAW8B,WAAX,CAAuB,EAAvB;AACD,OApBH;AAAA,6BAsBE;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGnB,YAHH;AAAA;AAtBF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AA1GoD;;AA6GvD,SAAS8B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACF,eADlB;AAEL3B,IAAAA,QAAQ,EAAE6B,KAAK,CAAC7B,QAFX;AAGL8B,IAAAA,UAAU,EAAED,KAAK,CAACC,UAHb;AAIL1C,IAAAA,eAAe,EAAEyC,KAAK,CAACzC;AAJlB,GAAP;AAMD;;AAED,SAAS2C,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,WAAW,EAAGH,EAAD,IAAQkB,QAAQ,CAACnD,OAAO,CAACoD,mBAAR,CAA4BnB,EAA5B,CAAD,CADxB;AAELH,IAAAA,mBAAmB,EAAE,MAAMqB,QAAQ,CAACnD,OAAO,CAACqD,mBAAR,EAAD,CAF9B;AAGLxB,IAAAA,WAAW,EAAE,CAACI,EAAD,EAAKqB,IAAL,EAAW9B,SAAX,KACX2B,QAAQ,CAACnD,OAAO,CAACuD,WAAR,CAAoBtB,EAApB,EAAwBqB,IAAxB,EAA8B9B,SAA9B,CAAD;AAJL,GAAP;AAMD;;AAED,eAAe1B,OAAO,CACpBiD,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhD,oBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass CreateMediafileModal extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var employeeList = [{ value: 0, label: 'All employees' }];\r\n    data.employeesSelectList.forEach((element) => {\r\n      employeeList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n    var actionButtons;\r\n    var addMediaArea;\r\n    var submitId;\r\n\r\n    if (this.props.activeId !== '') {\r\n      actionButtons = (\r\n        <div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const formData = new FormData();\r\n              var mediafile = document.getElementById('mediafile');\r\n              formData.append('mediafile', mediafile.files[0]);\r\n              this.props.uploadPhoto(this.props.activeId, submitId, formData);\r\n              this.props.setCreateModalState();\r\n            }}\r\n            id=\"submForm\"\r\n            style={{ marginTop: '30px' }}\r\n          >\r\n            <input\r\n              className=\"photoInput\"\r\n              id=\"mediafile\"\r\n              name=\"mediafile\"\r\n              type=\"file\"\r\n            />\r\n            <input\r\n              className=\"modalButton\"\r\n              id=\"promo\"\r\n              type=\"submit\"\r\n              onMouseEnter={(e) => {\r\n                submitId = e.target.id;\r\n              }}\r\n              value=\"Add as promo media\"\r\n            />\r\n\r\n            <input\r\n              className=\"modalButton\"\r\n              type=\"submit\"\r\n              onMouseEnter={(e) => {\r\n                submitId = e.target.id;\r\n              }}\r\n              id=\"gallery\"\r\n              value=\"Add as gallery media\"\r\n            />\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = <></>;\r\n    }\r\n    addMediaArea = (\r\n      <div\r\n        className=\"confirmUserInfo\"\r\n        style={{ flexDirection: 'column', height: '150px' }}\r\n      >\r\n        <Select\r\n          maxMenuHeight={100}\r\n          options={employeeList}\r\n          placeholder=\"Choose the employee...\"\r\n          onChange={(data) => {\r\n            this.props.setActiveId(data.value);\r\n          }}\r\n        />\r\n        {actionButtons}\r\n      </div>\r\n    );\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n            height: '400px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={() => {\r\n          this.props.setCreateModalState();\r\n          this.props.setActiveId('');\r\n        }}\r\n      >\r\n        <>\r\n          <p className=\"title\">Add new media</p>\r\n          <div className=\"profileBody\"></div>\r\n          {addMediaArea}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    pagedTablesData: state.pagedTablesData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    uploadPhoto: (id, type, mediafile) =>\r\n      dispatch(actions.UploadPhoto(id, type, mediafile)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateMediafileModal);\r\n"]},"metadata":{},"sourceType":"module"}