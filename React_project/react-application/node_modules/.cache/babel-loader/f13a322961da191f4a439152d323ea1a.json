{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\Modals\\\\ActiveButtons.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { SetModalState, SetEditState, DeleteData } from '../../Redux/Actions/actions.js';\nimport testImage from '../../temporaryFiles/example3.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ActiveButtons extends React.PureComponent {\n  render() {\n    var actionButtons;\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onDelete(),\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: actionButtons\n    }, void 0, false);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    open: state.open,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setModalState: () => dispatch(SetModalState()),\n    onEdit: () => dispatch(SetEditState()),\n    onDelete: () => {\n      dispatch(DeleteData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveButtons);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/Modals/ActiveButtons.js"],"names":["React","connect","Modal","SetModalState","SetEditState","DeleteData","testImage","ActiveButtons","PureComponent","render","actionButtons","props","isEditing","onEdit","onDelete","mapStateToProps","state","open","singleResponseData","activeId","activeMenu","mapDispatchToProps","dispatch","setModalState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,gCAJP;AAKA,OAAOC,SAAP,MAAsB,mCAAtB;;;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,aAAlC,CAAgD;AAC9CC,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAJ;;AACA,QAAI,CAAC,KAAKC,KAAL,CAAWC,SAAhB,EAA2B;AACzBF,MAAAA,aAAa,gBACX;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,QAAX,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXD,MAWO;AACLJ,MAAAA,aAAa,gBACX;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;AACD,wBAAO;AAAA,gBAAGH;AAAH,qBAAP;AACD;;AAxB6C;;AA2BhD,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELC,IAAAA,kBAAkB,EAAEF,KAAK,CAACE,kBAFrB;AAGLN,IAAAA,SAAS,EAAEI,KAAK,CAACJ,SAHZ;AAILO,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAJX;AAKLC,IAAAA,UAAU,EAAEJ,KAAK,CAACI;AALb,GAAP;AAOD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACnB,aAAa,EAAd,CADxB;AAELU,IAAAA,MAAM,EAAE,MAAMS,QAAQ,CAAClB,YAAY,EAAb,CAFjB;AAGLU,IAAAA,QAAQ,EAAE,MAAM;AACdQ,MAAAA,QAAQ,CAACjB,UAAU,EAAX,CAAR;AACD;AALI,GAAP;AAOD;;AAED,eAAeJ,OAAO,CAACc,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {\r\n  SetModalState,\r\n  SetEditState,\r\n  DeleteData,\r\n} from '../../Redux/Actions/actions.js';\r\nimport testImage from '../../temporaryFiles/example3.jpg';\r\n\r\nclass ActiveButtons extends React.PureComponent {\r\n  render() {\r\n    var actionButtons;\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div>\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button className=\"modalButton\" onClick={this.props.onDelete()}>\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div>\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Save changes\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return <>{actionButtons}</>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    open: state.open,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setModalState: () => dispatch(SetModalState()),\r\n    onEdit: () => dispatch(SetEditState()),\r\n    onDelete: () => {\r\n      dispatch(DeleteData());\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveButtons);\r\n"]},"metadata":{},"sourceType":"module"}