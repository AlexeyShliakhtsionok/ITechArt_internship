{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateMediafileModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateMediafileModal extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var data = this.props.pagedTablesData;\n    var employeeList = [{\n      value: 0,\n      label: 'All employees'\n    }];\n    data.employeesSelectList.forEach(element => {\n      employeeList.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var actionButtons;\n    actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      style: {\n        flexDirection: 'column',\n        height: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        maxMenuHeight: 100,\n        options: employeeList,\n        placeholder: \"Choose the employee...\",\n        onChange: data => {\n          this.props.setActiveId(data.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          id: \"submForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"photoInput\",\n            id: \"mediafile\",\n            name: \"mediafile\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            disabled: this.props.isButtonEnable,\n            type: \"submit\",\n            onClick: () => {\n              const formData = new FormData();\n              var mediafile = document.getElementById('mediafile');\n              formData.append('mediafile', mediafile.files[0]);\n              this.props.uploadPhoto(this.props.activeId, 'promo', formData);\n              this.props.setCreateModalState();\n            },\n            children: \"Add as promo media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            disabled: this.props.isButtonEnable,\n            type: \"submit\",\n            onClick: () => {\n              const formData = new FormData();\n              var mediafile = document.getElementById('mediafile');\n              formData.append('mediafile', mediafile.files[0]);\n              this.props.uploadPhoto(this.props.activeId, 'gallery', formData);\n              this.props.setCreateModalState();\n            },\n            children: \"Add as gallery media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), actionButtons]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isButtonEnable: state.isButtonEnable,\n    createModalOpen: state.createModalOpen,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    pagedTablesData: state.pagedTablesData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setButtonEnable: () => dispatch(actions.SetButtonState()),\n    setActiveId: id => dispatch(actions.SetActiveIdentifier(id)),\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    uploadPhoto: (id, type, mediafile) => dispatch(actions.UploadPhoto(id, type, mediafile))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMediafileModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateMediafileModal.js"],"names":["React","connect","Modal","actions","Select","CreateMediafileModal","PureComponent","onSubmit","e","preventDefault","render","data","props","pagedTablesData","employeeList","value","label","employeesSelectList","forEach","element","push","text","actionButtons","flexDirection","height","setActiveId","isButtonEnable","formData","FormData","mediafile","document","getElementById","append","files","uploadPhoto","activeId","setCreateModalState","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","createModalOpen","mapStateToProps","state","activeMenu","mapDispatchToProps","dispatch","setButtonEnable","SetButtonState","id","SetActiveIdentifier","SetCreateModalState","type","UploadPhoto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass CreateMediafileModal extends React.PureComponent {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var employeeList = [{ value: 0, label: 'All employees' }];\r\n    data.employeesSelectList.forEach((element) => {\r\n      employeeList.push({\r\n        value: element.value,\r\n        label: element.text,\r\n      });\r\n    });\r\n    var actionButtons;\r\n\r\n    actionButtons = (\r\n      <div\r\n        className=\"confirmUserInfo\"\r\n        style={{ flexDirection: 'column', height: '150px' }}\r\n      >\r\n        <Select\r\n          maxMenuHeight={100}\r\n          options={employeeList}\r\n          placeholder=\"Choose the employee...\"\r\n          onChange={(data) => {\r\n            this.props.setActiveId(data.value);\r\n          }}\r\n        />\r\n        <div>\r\n          <form onSubmit={this.onSubmit} id=\"submForm\">\r\n            <input\r\n              className=\"photoInput\"\r\n              id=\"mediafile\"\r\n              name=\"mediafile\"\r\n              type=\"file\"\r\n            />\r\n            <button\r\n              className=\"modalButton\"\r\n              disabled={this.props.isButtonEnable}\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                const formData = new FormData();\r\n                var mediafile = document.getElementById('mediafile');\r\n                formData.append('mediafile', mediafile.files[0]);\r\n                this.props.uploadPhoto(this.props.activeId, 'promo', formData);\r\n                this.props.setCreateModalState();\r\n              }}\r\n            >\r\n              Add as promo media\r\n            </button>\r\n            <button\r\n              className=\"modalButton\"\r\n              disabled={this.props.isButtonEnable}\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                const formData = new FormData();\r\n                var mediafile = document.getElementById('mediafile');\r\n                formData.append('mediafile', mediafile.files[0]);\r\n                this.props.uploadPhoto(\r\n                  this.props.activeId,\r\n                  'gallery',\r\n                  formData,\r\n                );\r\n                this.props.setCreateModalState();\r\n              }}\r\n            >\r\n              Add as gallery media\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\"></div>\r\n          {actionButtons}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isButtonEnable: state.isButtonEnable,\r\n    createModalOpen: state.createModalOpen,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    pagedTablesData: state.pagedTablesData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setButtonEnable: () => dispatch(actions.SetButtonState()),\r\n    setActiveId: (id) => dispatch(actions.SetActiveIdentifier(id)),\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    uploadPhoto: (id, type, mediafile) =>\r\n      dispatch(actions.UploadPhoto(id, type, mediafile)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateMediafileModal);\r\n"]},"metadata":{},"sourceType":"module"}