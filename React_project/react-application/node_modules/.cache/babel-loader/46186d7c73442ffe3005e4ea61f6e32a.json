{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\CreateFeedbackModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CreateFeedbacktModal extends React.PureComponent {\n  render() {\n    var data = this.props.pagedTablesData;\n    var singleData = this.props.singleResponseData;\n    var feedbackInfoArea;\n    var actionButton;\n    var feedbackToCreate = {\n      client: singleData,\n      feedbackTitle: '',\n      feedbackText: '',\n      isVerify: false,\n      createdOn: new Date()\n    };\n    actionButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmUserInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: e => {\n            if (singleData === '') {\n              alert(\"The client with such email adress doesn't exist. Please, check the email...\");\n              e.preventDefault();\n            }\n\n            this.props.setCreateModalState();\n            this.props.onCreate('feedbacksPage', feedbackToCreate);\n          },\n          children: \"Create feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n    feedbackInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileText\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title...\",\n            onChange: e => {\n              feedbackToCreate.feedbackTitle = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // className=\"feedbackBodyText\"\n            ,\n            placeholder: \"Text...\",\n            onChange: e => {\n              feedbackToCreate.feedbackText = e.target.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTextItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-left\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem-right\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email...\",\n            onChange: e => {\n              data.clients.forEach(client => {\n                if (client.email === e.target.value) feedbackToCreate.client = this.props.getByEmail(client.email);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.createModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setCreateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: feedbackInfoArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), actionButton]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    createModalOpen: state.createModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\n    onCreate: (activeMenu, data) => dispatch(actions.CreateFeedback(activeMenu, data)),\n    getByEmail: email => dispatch(actions.FetchClientByEmail(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFeedbacktModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/CreateFeedbackModal.js"],"names":["React","connect","Modal","actions","CreateFeedbacktModal","PureComponent","render","data","props","pagedTablesData","singleData","singleResponseData","feedbackInfoArea","actionButton","feedbackToCreate","client","feedbackTitle","feedbackText","isVerify","createdOn","Date","e","alert","preventDefault","setCreateModalState","onCreate","target","value","clients","forEach","email","getByEmail","modal","maxWidth","background","fontFamily","alignItems","textAlign","border","borderRadius","createModalOpen","mapStateToProps","state","activeId","activeMenu","mapDispatchToProps","dispatch","SetCreateModalState","CreateFeedback","FetchClientByEmail"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\n\r\nclass CreateFeedbacktModal extends React.PureComponent {\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var singleData = this.props.singleResponseData;\r\n    var feedbackInfoArea;\r\n    var actionButton;\r\n    var feedbackToCreate = {\r\n      client: singleData,\r\n      feedbackTitle: '',\r\n      feedbackText: '',\r\n      isVerify: false,\r\n      createdOn: new Date(),\r\n    };\r\n\r\n    actionButton = (\r\n      <div className=\"confirmUserInfo\">\r\n        <div>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={(e) => {\r\n              if (singleData === '') {\r\n                alert(\r\n                  \"The client with such email adress doesn't exist. Please, check the email...\",\r\n                );\r\n                e.preventDefault();\r\n              }\r\n              this.props.setCreateModalState();\r\n              this.props.onCreate('feedbacksPage', feedbackToCreate);\r\n            }}\r\n          >\r\n            Create feedback\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    feedbackInfoArea = (\r\n      <div className=\"profileText\">\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Title</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title...\"\r\n              onChange={(e) => {\r\n                feedbackToCreate.feedbackTitle = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Text:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"text\"\r\n              // className=\"feedbackBodyText\"\r\n              placeholder=\"Text...\"\r\n              onChange={(e) => {\r\n                feedbackToCreate.feedbackText = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profileTextItem\">\r\n          <div className=\"profileTextItem-left\">\r\n            <p>Email:</p>\r\n          </div>\r\n          <div className=\"profileTextItem-right\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email...\"\r\n              onChange={(e) => {\r\n                data.clients.forEach((client) => {\r\n                  if (client.email === e.target.value)\r\n                    feedbackToCreate.client = this.props.getByEmail(\r\n                      client.email,\r\n                    );\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.createModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setCreateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">{feedbackInfoArea}</div>\r\n          {actionButton}\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    createModalOpen: state.createModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCreateModalState: () => dispatch(actions.SetCreateModalState()),\r\n    onCreate: (activeMenu, data) =>\r\n      dispatch(actions.CreateFeedback(activeMenu, data)),\r\n    getByEmail: (email) => dispatch(actions.FetchClientByEmail(email)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CreateFeedbacktModal);\r\n"]},"metadata":{},"sourceType":"module"}