{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\ModalWindowsComponents\\\\UpdateEmployeeModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport * as actions from '../../Redux/Actions/actions.js';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UpdateEmployeeModal extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    var data = this.props.pagedTablesData;\n    var singleData = this.props.singleResponseData;\n    var hireDate = String(singleData.hireDate);\n    var firstName = singleData.firstName;\n    var lastName = singleData.lastName;\n    var phone = singleData.phoneNumber;\n    var email = singleData.email;\n    var qualification = singleData.qualification;\n    var procedureType = singleData.procedureType;\n    var role = singleData.role;\n    var employeeInfoArea;\n    var actionButtons;\n    var employeeToUpdate = {\n      employeeId: this.props.activeId,\n      firstName: singleData.firstName,\n      lastName: singleData.lastName,\n      phoneNumber: singleData.phoneNumber,\n      password: singleData.password,\n      email: singleData.email,\n      procedureType: singleData.procedureType,\n      procedureTypeId: singleData.procedureType.procedureTypeId,\n      qualification: singleData.qualification,\n      role: singleData.role,\n      hireDate: singleData.hireDate\n    };\n    var roles = [];\n    data.roles.forEach(element => {\n      roles.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    var procedureTypesSL = [];\n    data.procedureTypesSelectList.forEach(element => {\n      procedureTypesSL.push({\n        value: element.value,\n        label: element.text\n      });\n    });\n    var qualifications = [];\n    data.qualification.forEach(element => {\n      qualifications.push({\n        value: element.value,\n        label: element.name\n      });\n    });\n    var elements = [];\n\n    if (singleData !== '') {\n      var element;\n\n      var header = /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Procedure cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n\n      for (let i = 0; i < singleData.orders.length; i++) {\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: singleData.orders[i].orderId,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date + ' ' + time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientPhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].clientEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedureName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].procedureCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: singleData.orders[i].employeeFullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, singleData.orders[i].orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n    }\n\n    if (!this.props.isEditing) {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: this.props.onEdit,\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          onClick: () => {\n            this.props.onDelete(this.props.activeId, this.props.activeMenu);\n            this.props.setUpdateModalState();\n          },\n          children: \"Delete profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileText\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"First name: \", firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last name: \", lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hired: \", hireDate.substr(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ProcedureType: \", procedureType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Qualification: \", qualification]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmUserInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            id: \"submForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"profilePhotoInput\",\n              id: \"profilePhoto\",\n              name: \"profilePhoto\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              type: \"submit\",\n              onClick: () => {\n                const formData = new FormData();\n                var profilePhoto = document.getElementById('profilePhoto');\n                formData.append('profilePhoto', profilePhoto.files[0]);\n                this.props.uploadPhoto(this.props.activeId, formData);\n              },\n              children: \"Save photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: () => {\n              this.props.onEdit();\n              this.props.setUpdateModalState();\n              this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\n            },\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this);\n      employeeInfoArea = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: firstName,\n              onChange: e => {\n                employeeToUpdate.firstName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: lastName,\n              onChange: e => {\n                employeeToUpdate.lastName = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hired:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              defaultValue: hireDate.substr(0, 10),\n              onChange: e => {\n                employeeToUpdate.hireDate = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              placeholder: phone,\n              onChange: e => {\n                employeeToUpdate.phoneNumber = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: email,\n              onChange: e => {\n                employeeToUpdate.email = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: data => {\n                employeeToUpdate.role = data.value;\n              },\n              options: roles,\n              placeholder: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ProcedureType:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: procedureTypesSL,\n              placeholder: procedureType,\n              onChange: data => {\n                this.props.responseDataList.procedureTypes.forEach(element => {\n                  if (element.procedureTypeName === data.label) {\n                    employeeToUpdate.procedureType = element;\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileTextItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-left\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Qualification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileTextItem-right\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: qualifications,\n              placeholder: qualification,\n              onChange: data => {\n                employeeToUpdate.qualification = data.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      styles: {\n        modal: {\n          maxWidth: 'fit-content',\n          background: '#6c3636',\n          padding: '40px',\n          fontFamily: 'Play',\n          alignItems: 'center',\n          textAlign: 'center',\n          border: '6px solid #f7f6f6',\n          borderRadius: '10px'\n        }\n      },\n      open: this.props.updateModalOpen,\n      center: true,\n      showCloseIcon: false,\n      onOverlayClick: this.props.setUpdateModalState,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profilePhoto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.employeeProfilePhoto,\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), employeeInfoArea]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), actionButtons, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataTable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableStyle\",\n            children: [header, /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: elements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateModalOpen: state.updateModalOpen,\n    pagedTablesData: state.pagedTablesData,\n    singleResponseData: state.singleResponseData,\n    isEditing: state.isEditing,\n    activeId: state.activeId,\n    activeMenu: state.activeMenu,\n    employeeProfilePhoto: state.employeeProfilePhoto\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\n    onEdit: () => dispatch(actions.SetEditModalState()),\n    onDelete: (id, menu) => {\n      dispatch(actions.DeleteData(id, menu));\n    },\n    onUpdate: (activeMenu, data) => dispatch(actions.UpdateData(activeMenu, data)),\n    uploadPhoto: (id, profilePhoto) => dispatch(actions.UploadProfilePhoto(id, profilePhoto))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmployeeModal);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/ModalWindowsComponents/UpdateEmployeeModal.js"],"names":["React","connect","Modal","actions","Select","UpdateEmployeeModal","PureComponent","onSubmit","e","preventDefault","render","data","props","pagedTablesData","singleData","singleResponseData","hireDate","String","firstName","lastName","phone","phoneNumber","email","qualification","procedureType","role","employeeInfoArea","actionButtons","employeeToUpdate","employeeId","activeId","password","procedureTypeId","roles","forEach","element","push","value","label","name","procedureTypesSL","procedureTypesSelectList","text","qualifications","elements","header","i","orders","length","date","dateOfService","substr","time","orderId","clientFullName","clientPhoneNumber","clientEmail","procedureName","procedureCost","employeeFullName","concat","isEditing","onEdit","onDelete","activeMenu","setUpdateModalState","formData","FormData","profilePhoto","document","getElementById","append","files","uploadPhoto","onUpdate","target","responseDataList","procedureTypes","procedureTypeName","modal","maxWidth","background","padding","fontFamily","alignItems","textAlign","border","borderRadius","updateModalOpen","employeeProfilePhoto","mapStateToProps","state","mapDispatchToProps","dispatch","SetUpdateModalState","SetEditModalState","id","menu","DeleteData","UpdateData","UploadProfilePhoto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport * as actions from '../../Redux/Actions/actions.js';\r\nimport Select from 'react-select';\r\n\r\nclass UpdateEmployeeModal extends React.PureComponent {\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    var data = this.props.pagedTablesData;\r\n    var singleData = this.props.singleResponseData;\r\n\r\n    var hireDate = String(singleData.hireDate);\r\n    var firstName = singleData.firstName;\r\n    var lastName = singleData.lastName;\r\n    var phone = singleData.phoneNumber;\r\n    var email = singleData.email;\r\n    var qualification = singleData.qualification;\r\n    var procedureType = singleData.procedureType;\r\n    var role = singleData.role;\r\n\r\n    var employeeInfoArea;\r\n    var actionButtons;\r\n    var employeeToUpdate = {\r\n      employeeId: this.props.activeId,\r\n      firstName: singleData.firstName,\r\n      lastName: singleData.lastName,\r\n      phoneNumber: singleData.phoneNumber,\r\n      password: singleData.password,\r\n      email: singleData.email,\r\n      procedureType: singleData.procedureType,\r\n      procedureTypeId: singleData.procedureType.procedureTypeId,\r\n      qualification: singleData.qualification,\r\n      role: singleData.role,\r\n      hireDate: singleData.hireDate,\r\n    };\r\n\r\n    var roles = [];\r\n    data.roles.forEach((element) => {\r\n      roles.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    var procedureTypesSL = [];\r\n    data.procedureTypesSelectList.forEach((element) => {\r\n      procedureTypesSL.push({ value: element.value, label: element.text });\r\n    });\r\n\r\n    var qualifications = [];\r\n    data.qualification.forEach((element) => {\r\n      qualifications.push({ value: element.value, label: element.name });\r\n    });\r\n\r\n    var elements = [];\r\n    if (singleData !== '') {\r\n      var element;\r\n      var header = (\r\n        <thead>\r\n          <tr>\r\n            <th>Date of service</th>\r\n            <th>Client name</th>\r\n            <th>Client phone number</th>\r\n            <th>Client email</th>\r\n            <th>Procedure name</th>\r\n            <th>Procedure cost</th>\r\n            <th>Employee</th>\r\n          </tr>\r\n        </thead>\r\n      );\r\n\r\n      for (let i = 0; i < singleData.orders.length; i++) {\r\n        var date = singleData.orders[i].dateOfService.substr(0, 10);\r\n        var time = singleData.orders[i].dateOfService.substr(11, 5);\r\n        element = '';\r\n        element = (\r\n          <tr\r\n            key={singleData.orders[i].orderId}\r\n            id={singleData.orders[i].orderId}\r\n          >\r\n            <td>{date + ' ' + time}</td>\r\n            <td>{singleData.orders[i].clientFullName}</td>\r\n            <td>{singleData.orders[i].clientPhoneNumber}</td>\r\n            <td>{singleData.orders[i].clientEmail}</td>\r\n            <td>{singleData.orders[i].procedureName}</td>\r\n            <td>{singleData.orders[i].procedureCost}</td>\r\n            <td>{singleData.orders[i].employeeFullName}</td>\r\n          </tr>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n    }\r\n    if (!this.props.isEditing) {\r\n      actionButtons = (\r\n        <div className=\"editUserInfo\">\r\n          <button className=\"modalButton\" onClick={this.props.onEdit}>\r\n            Edit profile\r\n          </button>\r\n          <button\r\n            className=\"modalButton\"\r\n            onClick={() => {\r\n              this.props.onDelete(this.props.activeId, this.props.activeMenu);\r\n              this.props.setUpdateModalState();\r\n            }}\r\n          >\r\n            Delete profile\r\n          </button>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <>\r\n          <div className=\"profileText\">\r\n            <div className=\"profileTextItem\">\r\n              <p>First name: {firstName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Last name: {lastName}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Hired: {hireDate.substr(0, 10)}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Email: {email}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>ProcedureType: {procedureType}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Qualification: {qualification}</p>\r\n            </div>\r\n\r\n            <div className=\"profileTextItem\">\r\n              <p>Role: {role}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      actionButtons = (\r\n        <div className=\"confirmUserInfo\">\r\n          <div>\r\n            <form onSubmit={this.onSubmit} id=\"submForm\">\r\n              <input\r\n                className=\"profilePhotoInput\"\r\n                id=\"profilePhoto\"\r\n                name=\"profilePhoto\"\r\n                type=\"file\"\r\n              />\r\n              <button\r\n                className=\"modalButton\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  const formData = new FormData();\r\n                  var profilePhoto = document.getElementById('profilePhoto');\r\n                  formData.append('profilePhoto', profilePhoto.files[0]);\r\n                  this.props.uploadPhoto(this.props.activeId, formData);\r\n                }}\r\n              >\r\n                Save photo\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"modalButton\"\r\n              onClick={() => {\r\n                this.props.onEdit();\r\n                this.props.setUpdateModalState();\r\n                this.props.onUpdate(this.props.activeMenu, employeeToUpdate);\r\n              }}\r\n            >\r\n              Save changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n      employeeInfoArea = (\r\n        <div className=\"profileText\">\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>First name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={firstName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.firstName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Last name:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={lastName}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.lastName = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Hired:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"date\"\r\n                defaultValue={hireDate.substr(0, 10)}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.hireDate = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Phone:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"tel\"\r\n                placeholder={phone}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.phoneNumber = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Email:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder={email}\r\n                onChange={(e) => {\r\n                  employeeToUpdate.email = e.target.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Role:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                onChange={(data) => {\r\n                  employeeToUpdate.role = data.value;\r\n                }}\r\n                options={roles}\r\n                placeholder={role}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>ProcedureType:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={procedureTypesSL}\r\n                placeholder={procedureType}\r\n                onChange={(data) => {\r\n                  this.props.responseDataList.procedureTypes.forEach(\r\n                    (element) => {\r\n                      if (element.procedureTypeName === data.label) {\r\n                        employeeToUpdate.procedureType = element;\r\n                      }\r\n                    },\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profileTextItem\">\r\n            <div className=\"profileTextItem-left\">\r\n              <p>Qualification:</p>\r\n            </div>\r\n            <div className=\"profileTextItem-right\">\r\n              <Select\r\n                options={qualifications}\r\n                placeholder={qualification}\r\n                onChange={(data) => {\r\n                  employeeToUpdate.qualification = data.value;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        styles={{\r\n          modal: {\r\n            maxWidth: 'fit-content',\r\n            background: '#6c3636',\r\n            padding: '40px',\r\n            fontFamily: 'Play',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            border: '6px solid #f7f6f6',\r\n            borderRadius: '10px',\r\n          },\r\n        }}\r\n        open={this.props.updateModalOpen}\r\n        center={true}\r\n        showCloseIcon={false}\r\n        onOverlayClick={this.props.setUpdateModalState}\r\n      >\r\n        <>\r\n          <div className=\"profileBody\">\r\n            <div className=\"profilePhoto\">\r\n              <img src={this.props.employeeProfilePhoto} alt=\"profile\" />\r\n            </div>\r\n            {employeeInfoArea}\r\n          </div>\r\n          {actionButtons}\r\n          <div className=\"dataTable\">\r\n            <table className=\"tableStyle\">\r\n              {header}\r\n              <tbody>{elements}</tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateModalOpen: state.updateModalOpen,\r\n    pagedTablesData: state.pagedTablesData,\r\n    singleResponseData: state.singleResponseData,\r\n    isEditing: state.isEditing,\r\n    activeId: state.activeId,\r\n    activeMenu: state.activeMenu,\r\n    employeeProfilePhoto: state.employeeProfilePhoto,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setUpdateModalState: () => dispatch(actions.SetUpdateModalState()),\r\n    onEdit: () => dispatch(actions.SetEditModalState()),\r\n    onDelete: (id, menu) => {\r\n      dispatch(actions.DeleteData(id, menu));\r\n    },\r\n    onUpdate: (activeMenu, data) =>\r\n      dispatch(actions.UpdateData(activeMenu, data)),\r\n    uploadPhoto: (id, profilePhoto) =>\r\n      dispatch(actions.UploadProfilePhoto(id, profilePhoto)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(UpdateEmployeeModal);\r\n"]},"metadata":{},"sourceType":"module"}