{"ast":null,"code":"import * as TYPES from './actionTypes';\nconst host = 'https://localhost:7275'; // Authorization of employees ==========================================\n\nexport function EmployeeAutorization(email, password) {\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(EmployeeAutorizationSuccess(data));\n    });\n  };\n}\n_c = EmployeeAutorization;\nexport function EmployeeAutorizationSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\n    payload: data\n  };\n}\n_c2 = EmployeeAutorizationSuccess;\nexport function EmployeeLogout() {\n  return {\n    type: TYPES.EMPLOYEE_LOGOUT\n  };\n} //==============================================\n//==============================================\n//Get paged data of current table\n\n_c3 = EmployeeLogout;\nexport function FeetchMainTableData(activeMenu) {\n  let itemsPerPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetAllClients`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetAllMaterials?elementsPerPage=${itemsPerPage}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetAllProcedures`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetAllOrders`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/GetAllProfiles`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetAllFeedbacks`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetAllEmployees`;\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `${host}/MediaFile/GetAllMediaFiles`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchMainTableDataSuccess(data, activeMenu));\n    });\n  };\n}\n_c4 = FeetchMainTableData;\nexport function FeetchMainTableDataSuccess(data, id) {\n  return {\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\n    payload: data,\n    identifier: id\n  };\n} //========================================================\n//========================================================\n//Get the data of choosen record of the table by ID\n\n_c5 = FeetchMainTableDataSuccess;\nexport function FetchActiveRecordData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/GetProfileById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\n      break;\n\n    case 'mediaFilesPage':\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c6 = FetchActiveRecordData;\nexport function FetchClientByEmail(email) {\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        dispatch(FetchActiveRecordData('Not found'));\n      }\n\n      console.log(response);\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FetchActiveRecordDataSuccess(data));\n    });\n  };\n}\n_c7 = FetchClientByEmail;\nexport function FetchActiveRecordDataSuccess(data) {\n  return {\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} //Active identifier setting\n\n_c8 = FetchActiveRecordDataSuccess;\nexport function SetActiveIdentifier(id) {\n  return {\n    type: TYPES.ACTIVE_ID_SET,\n    payload: id\n  };\n} //========================================================\n//========================================================\n//Delete the data of choosen record of the table\n\n_c9 = SetActiveIdentifier;\nexport function DeleteData(id, activeMenu) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'post',\n      cors: 'no-cors'\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Update the data of choosen record of the table\n\n_c10 = DeleteData;\nexport function UpdateData(activeMenu, dataObject) {\n  var requestURL;\n  console.log(activeMenu);\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/UpdateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/UpdateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/UpdateService`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/UpdateOrder`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/UpdateProfile`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/UpdateFeedback`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/UpdateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n//Add new data\n\n_c11 = UpdateData;\nexport function AddData(activeMenu, dataObject, relatedId_1, relatedId_2) {\n  var requestURL;\n\n  switch (activeMenu) {\n    case 'clientsPage':\n      requestURL = `${host}/Client/CreateClient`;\n      break;\n\n    case 'materialsPage':\n      requestURL = `${host}/Material/CreateMaterial`;\n      break;\n\n    case 'servicesPage':\n      requestURL = `${host}/Procedure/CreateProcedure`;\n      break;\n\n    case 'ordersPage':\n      requestURL = `${host}/Order/CreateOrder`;\n      break;\n\n    case 'profilesPage':\n      requestURL = `${host}/Profile/CreateProfile`;\n      break;\n\n    case 'promoPage':\n      requestURL = `${host}/Profile/CreateProfile`;\n      break;\n\n    case 'feedbacksPage':\n      requestURL = `${host}/Feedback/CreateFeedback`;\n      break;\n\n    case 'staffPage':\n      requestURL = `${host}/Employee/CreateEmployee`;\n      break;\n\n    default:\n      break;\n  }\n\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).then(() => dispatch(FeetchMainTableData(activeMenu)));\n  };\n} //========================================================\n//========================================================\n// Modal windows states processing functions\n\n_c12 = AddData;\nexport function SetEditModalState() {\n  return {\n    type: TYPES.EDIT_STATE\n  };\n}\n_c13 = SetEditModalState;\nexport function SetUpdateModalState() {\n  return {\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE\n  };\n}\n_c14 = SetUpdateModalState;\nexport function SetCreateModalState() {\n  return {\n    type: TYPES.CREATE_MODAL_WINDOW_STATE\n  };\n} //========================================================\n//========================================================\n// Order creation and updating functions\n// Feetcing of procedures by their types (for responsive select-list content change)\n\n_c15 = SetCreateModalState;\nexport function GetProceduresByType(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchProcedureSuccess(data));\n    });\n  };\n}\n_c16 = GetProceduresByType;\nexport function FeetchProcedureSuccess(data) {\n  return {\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of employees by procedures types (for responsive select-list content change)\n\n_c17 = FeetchProcedureSuccess;\nexport function GetEmployeesByProcedureType(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchEmployeesSuccess(data));\n    });\n  };\n}\n_c18 = GetEmployeesByProcedureType;\nexport function FeetchEmployeesSuccess(data) {\n  return {\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Fetching of schedule with avaliable time intervals\n\n_c19 = FeetchEmployeesSuccess;\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\n  return dispatch => {\n    fetch(`${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(FeetchAvaliableTimesSuccess(data));\n    });\n  };\n}\n_c20 = GetAvaliableTimes;\nexport function FeetchAvaliableTimesSuccess(data) {\n  return {\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\n    payload: data\n  };\n} // Setting of active day and procedure during making order\n\n_c21 = FeetchAvaliableTimesSuccess;\nexport function SetActiveDate(data) {\n  return {\n    type: TYPES.SET_ACTIVE_DATE,\n    payload: data\n  };\n}\n_c22 = SetActiveDate;\nexport function SetActiveTime(data) {\n  return {\n    type: TYPES.SET_ACTIVE_TIME,\n    payload: data\n  };\n}\n_c23 = SetActiveTime;\nexport function SetActiveProcedure(id) {\n  return dispatch => {\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveProcedureSuccess(data));\n    });\n  };\n}\n_c24 = SetActiveProcedure;\nexport function SetActiveProcedureSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_PROCEDURE,\n    payload: data\n  };\n}\n_c25 = SetActiveProcedureSuccess;\nexport function SetActiveClient(id) {\n  return dispatch => {\n    fetch(`${host}/Client/GetClientById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveClientSuccess(data));\n    });\n  };\n}\n_c26 = SetActiveClient;\nexport function SetActiveClientSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_CLIENT,\n    payload: data\n  };\n}\n_c27 = SetActiveClientSuccess;\nexport function SetActiveEmployee(id) {\n  return dispatch => {\n    fetch(`${host}/Employee/GetEmployeeById?id=${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      dispatch(SetActiveEmployeeSuccess(data));\n    });\n  };\n}\n_c28 = SetActiveEmployee;\nexport function SetActiveEmployeeSuccess(data) {\n  return {\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\n    payload: data\n  };\n} // Set booking status\n\n_c29 = SetActiveEmployeeSuccess;\nexport function SetBookingStatus() {\n  return {\n    type: TYPES.SET_BOOKING_STATUS\n  };\n} // Set client registration status\n\n_c30 = SetBookingStatus;\nexport function RedirectToOrdering() {\n  return {\n    type: TYPES.REDIRECT_TO_ORDERING\n  };\n} // Set order creation status (from main by client)\n\n_c31 = RedirectToOrdering;\nexport function SetOrderStatus() {\n  return {\n    type: TYPES.SET_ORDER_CREATION_STATUS\n  };\n}\n_c32 = SetOrderStatus;\nexport function ResetActiveSingleData() {\n  return {\n    type: TYPES.RESET_SINGLE_DATA\n  };\n} // Reset react-select single value (resetting of single select field value)\n\n_c33 = ResetActiveSingleData;\nexport function ResetSelectedValue() {\n  return {\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE\n  };\n} // Reset react-select values (resetting of all values of selects)\n\n_c34 = ResetSelectedValue;\nexport function ResetSelectedValues() {\n  return {\n    type: TYPES.RESET_SELECTED_VALUES\n  };\n} // Set react-select values (set each selected value to the state)\n\n_c35 = ResetSelectedValues;\nexport function SetSelectedValue(inputName) {\n  return {\n    type: TYPES.SET_SELECTED_VALUE,\n    payload: inputName\n  };\n} // ================Add order from main menu\n\n_c36 = SetSelectedValue;\nexport function AddOrder(dataObject) {\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      headers: new Headers({\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify(dataObject)\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n} //========================================================\n//========================================================\n\n_c37 = AddOrder;\nexport function ResetActiveMenu() {\n  return {\n    type: TYPES.RESET_ACTIVE_MENU\n  };\n}\n_c38 = ResetActiveMenu;\nexport function GetImage(id) {\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\n    });\n  };\n} //========================================================\n//========================================================\n// Get all feedback to display for the clients\n\n_c39 = GetImage;\nexport function GetAllApprovedFeedbacks(activeMenu) {\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async response => {\n      const data = await response.json();\n      console.log(activeMenu);\n      dispatch(FeetchMainTableData(data, activeMenu));\n    });\n  };\n} // Profile photo uploading\n\n_c40 = GetAllApprovedFeedbacks;\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL, {\n      method: 'POST',\n      cors: 'no-cors',\n      body: profilePhoto\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('not ok' + response.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n_c41 = UploadProfilePhoto;\nexport function GetProfilePhotoByEmployeeId(employeeId) {\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\n  return dispatch => {\n    fetch(requestURL).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.blob()).then(imageBlob => {\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\n    }).then(imageObjectURL => {\n      console.log(imageObjectURL);\n      return imageObjectURL;\n    });\n  };\n}\n_c42 = GetProfilePhotoByEmployeeId;\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\n  return {\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\n    payload: imageObjectURL\n  };\n} //===================================================\n//===================================================\n// Setting the count of the recotds to display on the page\n\n_c43 = FeetchProfilePhotoSuccess;\nexport function SetTableRcordsToDisplay() {\n  return {\n    type: TYPES.TABLE_RECORDS_TO_DISPLAY\n  };\n}\n_c44 = SetTableRcordsToDisplay;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44;\n\n$RefreshReg$(_c, \"EmployeeAutorization\");\n$RefreshReg$(_c2, \"EmployeeAutorizationSuccess\");\n$RefreshReg$(_c3, \"EmployeeLogout\");\n$RefreshReg$(_c4, \"FeetchMainTableData\");\n$RefreshReg$(_c5, \"FeetchMainTableDataSuccess\");\n$RefreshReg$(_c6, \"FetchActiveRecordData\");\n$RefreshReg$(_c7, \"FetchClientByEmail\");\n$RefreshReg$(_c8, \"FetchActiveRecordDataSuccess\");\n$RefreshReg$(_c9, \"SetActiveIdentifier\");\n$RefreshReg$(_c10, \"DeleteData\");\n$RefreshReg$(_c11, \"UpdateData\");\n$RefreshReg$(_c12, \"AddData\");\n$RefreshReg$(_c13, \"SetEditModalState\");\n$RefreshReg$(_c14, \"SetUpdateModalState\");\n$RefreshReg$(_c15, \"SetCreateModalState\");\n$RefreshReg$(_c16, \"GetProceduresByType\");\n$RefreshReg$(_c17, \"FeetchProcedureSuccess\");\n$RefreshReg$(_c18, \"GetEmployeesByProcedureType\");\n$RefreshReg$(_c19, \"FeetchEmployeesSuccess\");\n$RefreshReg$(_c20, \"GetAvaliableTimes\");\n$RefreshReg$(_c21, \"FeetchAvaliableTimesSuccess\");\n$RefreshReg$(_c22, \"SetActiveDate\");\n$RefreshReg$(_c23, \"SetActiveTime\");\n$RefreshReg$(_c24, \"SetActiveProcedure\");\n$RefreshReg$(_c25, \"SetActiveProcedureSuccess\");\n$RefreshReg$(_c26, \"SetActiveClient\");\n$RefreshReg$(_c27, \"SetActiveClientSuccess\");\n$RefreshReg$(_c28, \"SetActiveEmployee\");\n$RefreshReg$(_c29, \"SetActiveEmployeeSuccess\");\n$RefreshReg$(_c30, \"SetBookingStatus\");\n$RefreshReg$(_c31, \"RedirectToOrdering\");\n$RefreshReg$(_c32, \"SetOrderStatus\");\n$RefreshReg$(_c33, \"ResetActiveSingleData\");\n$RefreshReg$(_c34, \"ResetSelectedValue\");\n$RefreshReg$(_c35, \"ResetSelectedValues\");\n$RefreshReg$(_c36, \"SetSelectedValue\");\n$RefreshReg$(_c37, \"AddOrder\");\n$RefreshReg$(_c38, \"ResetActiveMenu\");\n$RefreshReg$(_c39, \"GetImage\");\n$RefreshReg$(_c40, \"GetAllApprovedFeedbacks\");\n$RefreshReg$(_c41, \"UploadProfilePhoto\");\n$RefreshReg$(_c42, \"GetProfilePhotoByEmployeeId\");\n$RefreshReg$(_c43, \"FeetchProfilePhotoSuccess\");\n$RefreshReg$(_c44, \"SetTableRcordsToDisplay\");","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Redux/Actions/actions.js"],"names":["TYPES","host","EmployeeAutorization","email","password","requestURL","dispatch","fetch","method","then","response","ok","Error","statusText","data","json","EmployeeAutorizationSuccess","type","EMPLOYEE_AUTORIZATION_SUCCESS","payload","EmployeeLogout","EMPLOYEE_LOGOUT","FeetchMainTableData","activeMenu","itemsPerPage","FeetchMainTableDataSuccess","id","FETCH_TABLE_DATA_SUCCESS","identifier","FetchActiveRecordData","FetchActiveRecordDataSuccess","FetchClientByEmail","console","log","SINGLE_RECORD_FETCH_DATA_SUCCESS","SetActiveIdentifier","ACTIVE_ID_SET","DeleteData","cors","UpdateData","dataObject","headers","Headers","Accept","body","JSON","stringify","status","catch","err","AddData","relatedId_1","relatedId_2","SetEditModalState","EDIT_STATE","SetUpdateModalState","UPDATE_MODAL_WINDOW_STATE","SetCreateModalState","CREATE_MODAL_WINDOW_STATE","GetProceduresByType","FeetchProcedureSuccess","PROCEDURE_FETCH_DATA_SUCCESS","GetEmployeesByProcedureType","FeetchEmployeesSuccess","EMPLOYEE_FETCH_DATA_SUCCESS","GetAvaliableTimes","date","procedureId","open","close","FeetchAvaliableTimesSuccess","SCHEDULE_FETCH_DATA_SUCCESS","SetActiveDate","SET_ACTIVE_DATE","SetActiveTime","SET_ACTIVE_TIME","SetActiveProcedure","SetActiveProcedureSuccess","SET_ACTIVE_PROCEDURE","SetActiveClient","SetActiveClientSuccess","SET_ACTIVE_CLIENT","SetActiveEmployee","SetActiveEmployeeSuccess","SET_ACTIVE_EMPLOYEE","SetBookingStatus","SET_BOOKING_STATUS","RedirectToOrdering","REDIRECT_TO_ORDERING","SetOrderStatus","SET_ORDER_CREATION_STATUS","ResetActiveSingleData","RESET_SINGLE_DATA","ResetSelectedValue","RESET_SINGLE_SELECTED_VALUE","ResetSelectedValues","RESET_SELECTED_VALUES","SetSelectedValue","inputName","SET_SELECTED_VALUE","AddOrder","ResetActiveMenu","RESET_ACTIVE_MENU","GetImage","blob","imageBlob","imageObjectURL","URL","createObjectURL","GetAllApprovedFeedbacks","UploadProfilePhoto","employeeId","profilePhoto","GetProfilePhotoByEmployeeId","FeetchProfilePhotoSuccess","FETCH_PROFILE_PHOTO_SUCCESS","SetTableRcordsToDisplay","TABLE_RECORDS_TO_DISPLAY"],"mappings":"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","sourcesContent":["import * as TYPES from './actionTypes';\r\nconst host = 'https://localhost:7275';\r\n\r\n// Authorization of employees ==========================================\r\n\r\nexport function EmployeeAutorization(email, password) {\r\n  const requestURL = `${host}/Employee/GetToken?employeeEmail=${email}&password=${password}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'post',\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(EmployeeAutorizationSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function EmployeeAutorizationSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_AUTORIZATION_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function EmployeeLogout() {\r\n  return {\r\n    type: TYPES.EMPLOYEE_LOGOUT,\r\n  };\r\n}\r\n//==============================================\r\n//==============================================\r\n//Get paged data of current table\r\nexport function FeetchMainTableData(activeMenu, itemsPerPage = 5) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetAllClients`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetAllMaterials?elementsPerPage=${itemsPerPage}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetAllProcedures`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetAllOrders`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/GetAllProfiles`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetAllFeedbacks`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetAllEmployees`;\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `${host}/MediaFile/GetAllMediaFiles`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchMainTableDataSuccess(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchMainTableDataSuccess(data, id) {\r\n  return {\r\n    type: TYPES.FETCH_TABLE_DATA_SUCCESS,\r\n    payload: data,\r\n    identifier: id,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n//Get the data of choosen record of the table by ID\r\nexport function FetchActiveRecordData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/GetClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/GetMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/GetServiceById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/GetOrderById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/GetProfileById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/GetFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/GetEmployeeById?id=${id}`;\r\n      break;\r\n    case 'mediaFilesPage':\r\n      requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchClientByEmail(email) {\r\n  var requestURL = `${host}/Client/GetClientByEmail?email=${email}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(FetchActiveRecordData('Not found'));\r\n        }\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FetchActiveRecordDataSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FetchActiveRecordDataSuccess(data) {\r\n  return {\r\n    type: TYPES.SINGLE_RECORD_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n//Active identifier setting\r\nexport function SetActiveIdentifier(id) {\r\n  return {\r\n    type: TYPES.ACTIVE_ID_SET,\r\n    payload: id,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n//Delete the data of choosen record of the table\r\n\r\nexport function DeleteData(id, activeMenu) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/DeleteClientById?id=${id}`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/DeleteMaterialById?id=${id}`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/DeleteServiceById?id=${id}`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/DeleteOrderById?id=${id}`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/DeleteProfileById?id=${id}`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/DeleteFeedbackById?id=${id}`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/DeleteEmployeeById?id=${id}`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, { method: 'post', cors: 'no-cors' }).then(() =>\r\n      dispatch(FeetchMainTableData(activeMenu)),\r\n    );\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Update the data of choosen record of the table\r\n\r\nexport function UpdateData(activeMenu, dataObject) {\r\n  var requestURL;\r\n  console.log(activeMenu);\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/UpdateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/UpdateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/UpdateService`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/UpdateOrder`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/UpdateProfile`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/UpdateFeedback`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/UpdateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData(activeMenu)));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n//Add new data\r\n\r\nexport function AddData(activeMenu, dataObject, relatedId_1, relatedId_2) {\r\n  var requestURL;\r\n  switch (activeMenu) {\r\n    case 'clientsPage':\r\n      requestURL = `${host}/Client/CreateClient`;\r\n      break;\r\n    case 'materialsPage':\r\n      requestURL = `${host}/Material/CreateMaterial`;\r\n      break;\r\n    case 'servicesPage':\r\n      requestURL = `${host}/Procedure/CreateProcedure`;\r\n      break;\r\n    case 'ordersPage':\r\n      requestURL = `${host}/Order/CreateOrder`;\r\n      break;\r\n    case 'profilesPage':\r\n      requestURL = `${host}/Profile/CreateProfile`;\r\n      break;\r\n    case 'promoPage':\r\n      requestURL = `${host}/Profile/CreateProfile`;\r\n      break;\r\n    case 'feedbacksPage':\r\n      requestURL = `${host}/Feedback/CreateFeedback`;\r\n      break;\r\n    case 'staffPage':\r\n      requestURL = `${host}/Employee/CreateEmployee`;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .then(() => dispatch(FeetchMainTableData(activeMenu)));\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Modal windows states processing functions\r\n\r\nexport function SetEditModalState() {\r\n  return {\r\n    type: TYPES.EDIT_STATE,\r\n  };\r\n}\r\n\r\nexport function SetUpdateModalState() {\r\n  return {\r\n    type: TYPES.UPDATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n\r\nexport function SetCreateModalState() {\r\n  return {\r\n    type: TYPES.CREATE_MODAL_WINDOW_STATE,\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\n// Order creation and updating functions\r\n// Feetcing of procedures by their types (for responsive select-list content change)\r\nexport function GetProceduresByType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetAllProceduresByType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.PROCEDURE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of employees by procedures types (for responsive select-list content change)\r\nexport function GetEmployeesByProcedureType(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetAllByProcedureType?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchEmployeesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchEmployeesSuccess(data) {\r\n  return {\r\n    type: TYPES.EMPLOYEE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Fetching of schedule with avaliable time intervals\r\nexport function GetAvaliableTimes(id, date, procedureId, open, close) {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `${host}/Order/GetScheduleOfEmployee?id=${id}&chosenDate=${date}&procedureId=${procedureId}&open=${open}&close=${close}`,\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(FeetchAvaliableTimesSuccess(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchAvaliableTimesSuccess(data) {\r\n  return {\r\n    type: TYPES.SCHEDULE_FETCH_DATA_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Setting of active day and procedure during making order\r\n\r\nexport function SetActiveDate(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_DATE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveTime(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_TIME,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveProcedure(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Procedure/GetServiceById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveProcedureSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveProcedureSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_PROCEDURE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveClient(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Client/GetClientById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveClientSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveClientSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_CLIENT,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function SetActiveEmployee(id) {\r\n  return (dispatch) => {\r\n    fetch(`${host}/Employee/GetEmployeeById?id=${id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        dispatch(SetActiveEmployeeSuccess(data));\r\n      });\r\n  };\r\n}\r\nexport function SetActiveEmployeeSuccess(data) {\r\n  return {\r\n    type: TYPES.SET_ACTIVE_EMPLOYEE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// Set booking status\r\nexport function SetBookingStatus() {\r\n  return {\r\n    type: TYPES.SET_BOOKING_STATUS,\r\n  };\r\n}\r\n// Set client registration status\r\nexport function RedirectToOrdering() {\r\n  return {\r\n    type: TYPES.REDIRECT_TO_ORDERING,\r\n  };\r\n}\r\n// Set order creation status (from main by client)\r\nexport function SetOrderStatus() {\r\n  return {\r\n    type: TYPES.SET_ORDER_CREATION_STATUS,\r\n  };\r\n}\r\n\r\nexport function ResetActiveSingleData() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_DATA,\r\n  };\r\n}\r\n\r\n// Reset react-select single value (resetting of single select field value)\r\nexport function ResetSelectedValue() {\r\n  return {\r\n    type: TYPES.RESET_SINGLE_SELECTED_VALUE,\r\n  };\r\n}\r\n\r\n// Reset react-select values (resetting of all values of selects)\r\nexport function ResetSelectedValues() {\r\n  return {\r\n    type: TYPES.RESET_SELECTED_VALUES,\r\n  };\r\n}\r\n\r\n// Set react-select values (set each selected value to the state)\r\nexport function SetSelectedValue(inputName) {\r\n  return {\r\n    type: TYPES.SET_SELECTED_VALUE,\r\n    payload: inputName,\r\n  };\r\n}\r\n\r\n// ================Add order from main menu\r\nexport function AddOrder(dataObject) {\r\n  var requestURL = 'https://localhost:7275/Order/CreateOrder';\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      headers: new Headers({\r\n        Accept: 'application/json',\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify(dataObject),\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n//========================================================\r\n//========================================================\r\nexport function ResetActiveMenu() {\r\n  return {\r\n    type: TYPES.RESET_ACTIVE_MENU,\r\n  };\r\n}\r\n\r\nexport function GetImage(id) {\r\n  var requestURL = `${host}/MediaFile/GetFileById?id=${id}`;\r\n\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FetchActiveRecordDataSuccess(imageObjectURL));\r\n      });\r\n  };\r\n}\r\n\r\n//========================================================\r\n//========================================================\r\n// Get all feedback to display for the clients\r\nexport function GetAllApprovedFeedbacks(activeMenu) {\r\n  const requestURL = `${host}/Feedback/GetAllApprovedFeedbacks`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        console.log(activeMenu);\r\n        dispatch(FeetchMainTableData(data, activeMenu));\r\n      });\r\n  };\r\n}\r\n\r\n// Profile photo uploading\r\n\r\nexport function UploadProfilePhoto(employeeId, profilePhoto) {\r\n  var requestURL = `${host}/MediaFile/UploadProfilePhoto?employeeId=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL, {\r\n      method: 'POST',\r\n      cors: 'no-cors',\r\n      body: profilePhoto,\r\n    })\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          console.log('not ok' + response.status);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function GetProfilePhotoByEmployeeId(employeeId) {\r\n  var requestURL = `${host}/MediaFile/GetProfilePhotoByEmployeeId?id=${employeeId}`;\r\n  return (dispatch) => {\r\n    fetch(requestURL)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.blob())\r\n      .then((imageBlob) => {\r\n        const imageObjectURL = URL.createObjectURL(imageBlob);\r\n        dispatch(FeetchProfilePhotoSuccess(imageObjectURL));\r\n      })\r\n      .then((imageObjectURL) => {\r\n        console.log(imageObjectURL);\r\n        return imageObjectURL;\r\n      });\r\n  };\r\n}\r\n\r\nexport function FeetchProfilePhotoSuccess(imageObjectURL) {\r\n  return {\r\n    type: TYPES.FETCH_PROFILE_PHOTO_SUCCESS,\r\n    payload: imageObjectURL,\r\n  };\r\n}\r\n\r\n//===================================================\r\n//===================================================\r\n// Setting the count of the recotds to display on the page\r\n\r\nexport function SetTableRcordsToDisplay() {\r\n  return {\r\n    type: TYPES.TABLE_RECORDS_TO_DISPLAY,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}