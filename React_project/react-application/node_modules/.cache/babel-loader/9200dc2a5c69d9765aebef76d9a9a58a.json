{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aries\\\\Desktop\\\\React project\\\\react-application\\\\src\\\\Components\\\\DataTablesComponents\\\\Feedbacks.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FeedbacksList extends React.PureComponent {\n  render() {\n    if (this.props.responseDataList !== '') {\n      var elements = [];\n      var element;\n\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\n        var actionButtons;\n\n        if (!this.props.responseDataList[i].isVerify) {\n          actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              onClick: this.props.onApprove(this.props.responseDataList[i].feedbackId, this.props.activeMenu),\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        } else {\n          actionButtons = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalButton\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false);\n        }\n\n        element = '';\n        element = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackTitle\",\n            children: this.props.responseDataList[i].feedbackTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedbackBody\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthor\",\n                children: [this.props.responseDataList[i].client.firstName, '', this.props.responseDataList[i].client.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackAuthorEmail\",\n                children: this.props.responseDataList[i].client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedbackDate\",\n                children: this.props.responseDataList[i].createdOn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: actionButtons\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackText\",\n              children: this.props.responseDataList[i].feedbackText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n        elements = elements.concat(element);\n      }\n\n      console.log('elements', elements);\n    }\n\n    if (this.props.responseDataList !== '') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: elements\n      }, void 0, false);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    responseDataList: state.responseDataList,\n    activeMenu: state.activeMenu\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onApprove: id => dispatch(SetActiveIdentifier(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);","map":{"version":3,"sources":["C:/Users/aries/Desktop/React project/react-application/src/Components/DataTablesComponents/Feedbacks.js"],"names":["React","connect","SetActiveIdentifier","FeedbacksList","PureComponent","render","props","responseDataList","elements","element","i","length","actionButtons","isVerify","onApprove","feedbackId","activeMenu","feedbackTitle","client","firstName","lastName","email","createdOn","feedbackText","concat","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,gCAApC;;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,aAAlC,CAAgD;AAC9CC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,gBAAX,KAAgC,EAApC,EAAwC;AACtC,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,OAAJ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWC,gBAAX,CAA4BI,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3D,YAAIE,aAAJ;;AACA,YAAI,CAAC,KAAKN,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BG,QAApC,EAA8C;AAC5CD,UAAAA,aAAa,gBACX;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,OAAO,EAAE,KAAKN,KAAL,CAAWQ,SAAX,CACP,KAAKR,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BK,UADxB,EAEP,KAAKT,KAAL,CAAWU,UAFJ,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA,0BADF;AAcD,SAfD,MAeO;AACLJ,UAAAA,aAAa,gBACX;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAKD;;AACDH,QAAAA,OAAO,GAAG,EAAV;AACAA,QAAAA,OAAO,gBACL;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBACG,KAAKH,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BO;AADlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,2BACG,KAAKX,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BQ,MAA/B,CAAsCC,SADzC,EAEG,EAFH,EAGG,KAAKb,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BQ,MAA/B,CAAsCE,QAHzC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,0BACG,KAAKd,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BQ,MAA/B,CAAsCG;AADzC;AAAA;AAAA;AAAA;AAAA,sBANF,eASE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,0BACG,KAAKf,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+BY;AADlC;AAAA;AAAA;AAAA;AAAA,sBATF,eAYE;AAAA,0BAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACG,KAAKN,KAAL,CAAWC,gBAAX,CAA4BG,CAA5B,EAA+Ba;AADlC;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA0BAf,QAAAA,QAAQ,GAAGA,QAAQ,CAACgB,MAAT,CAAgBf,OAAhB,CAAX;AACD;;AACDgB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,QAAxB;AACD;;AAED,QAAI,KAAKF,KAAL,CAAWC,gBAAX,KAAgC,EAApC,EAAwC;AACtC,0BAAO;AAAA,kBAAGC;AAAH,uBAAP;AACD;AACF;;AAhE6C;;AAmEhD,SAASmB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLrB,IAAAA,gBAAgB,EAAEqB,KAAK,CAACrB,gBADnB;AAELS,IAAAA,UAAU,EAAEY,KAAK,CAACZ;AAFb,GAAP;AAID;;AAED,SAASa,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLhB,IAAAA,SAAS,EAAGiB,EAAD,IAAQD,QAAQ,CAAC5B,mBAAmB,CAAC6B,EAAD,CAApB;AADtB,GAAP;AAGD;;AAED,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetActiveIdentifier } from '../../Redux/Actions/actions.js';\r\n\r\nclass FeedbacksList extends React.PureComponent {\r\n  render() {\r\n    if (this.props.responseDataList !== '') {\r\n      var elements = [];\r\n      var element;\r\n      for (let i = 0; i < this.props.responseDataList.length; i++) {\r\n        var actionButtons;\r\n        if (!this.props.responseDataList[i].isVerify) {\r\n          actionButtons = (\r\n            <>\r\n              <button\r\n                className=\"modalButton\"\r\n                onClick={this.props.onApprove(\r\n                  this.props.responseDataList[i].feedbackId,\r\n                  this.props.activeMenu,\r\n                )}\r\n              >\r\n                Approve\r\n              </button>\r\n              <button className=\"modalButton\">Remove</button>\r\n            </>\r\n          );\r\n        } else {\r\n          actionButtons = (\r\n            <>\r\n              <button className=\"modalButton\">Remove</button>\r\n            </>\r\n          );\r\n        }\r\n        element = '';\r\n        element = (\r\n          <div className=\"feedback\">\r\n            <div className=\"feedbackTitle\">\r\n              {this.props.responseDataList[i].feedbackTitle}\r\n            </div>\r\n            <div className=\"feedbackBody\">\r\n              <div className=\"feedbackInfo\">\r\n                <div className=\"feedbackAuthor\">\r\n                  {this.props.responseDataList[i].client.firstName}\r\n                  {''}\r\n                  {this.props.responseDataList[i].client.lastName}\r\n                </div>\r\n                <div className=\"feedbackAuthorEmail\">\r\n                  {this.props.responseDataList[i].client.email}\r\n                </div>\r\n                <div className=\"feedbackDate\">\r\n                  {this.props.responseDataList[i].createdOn}\r\n                </div>\r\n                <div>{actionButtons}</div>\r\n              </div>\r\n              <div className=\"feedbackText\">\r\n                {this.props.responseDataList[i].feedbackText}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        elements = elements.concat(element);\r\n      }\r\n      console.log('elements', elements);\r\n    }\r\n\r\n    if (this.props.responseDataList !== '') {\r\n      return <>{elements}</>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    responseDataList: state.responseDataList,\r\n    activeMenu: state.activeMenu,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onApprove: (id) => dispatch(SetActiveIdentifier(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbacksList);\r\n"]},"metadata":{},"sourceType":"module"}